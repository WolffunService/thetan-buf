// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: thetan/immortal/v1/immortal_game_info.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Thetan.Immortal.V1 {

  /// <summary>Holder for reflection information generated from thetan/immortal/v1/immortal_game_info.proto</summary>
  public static partial class ImmortalGameInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for thetan/immortal/v1/immortal_game_info.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ImmortalGameInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cit0aGV0YW4vaW1tb3J0YWwvdjEvaW1tb3J0YWxfZ2FtZV9pbmZvLnByb3Rv",
            "EhJ0aGV0YW4uaW1tb3J0YWwudjEijAEKEFNldEluR2FtZU1vZGVNc2cSPgoK",
            "aW5HYW1lTW9kZRgBIAEoDjIeLnRoZXRhbi5pbW1vcnRhbC52MS5JbkdhbWVN",
            "b2RlUgppbkdhbWVNb2RlEjgKCGdhbWVNb2RlGAIgASgOMhwudGhldGFuLmlt",
            "bW9ydGFsLnYxLkdhbWVNb2RlUghnYW1lTW9kZSKtAQoVT3RoZXJTZXRJbkdh",
            "bWVNb2RlTXNnEhoKCHBsYXllcklEGAEgASgJUghwbGF5ZXJJRBI+Cgppbkdh",
            "bWVNb2RlGAIgASgOMh4udGhldGFuLmltbW9ydGFsLnYxLkluR2FtZU1vZGVS",
            "CmluR2FtZU1vZGUSOAoIZ2FtZU1vZGUYAyABKA4yHC50aGV0YW4uaW1tb3J0",
            "YWwudjEuR2FtZU1vZGVSCGdhbWVNb2RlKlMKCEdhbWVNb2RlEg0KCU5PTkVf",
            "TU9ERRAAEgoKBlJBTktFRBABEg4KCk9OQk9BUkRJTkcQAhIMCghGUklFTkRM",
            "WRADEg4KClJBTktFRF9CT1QQBCooCgpJbkdhbWVNb2RlEggKBFNPTE8QABIG",
            "CgJLTxABEggKBERVQUwQAkLSAQoWY29tLnRoZXRhbi5pbW1vcnRhbC52MUIV",
            "SW1tb3J0YWxHYW1lSW5mb1Byb3RvUAFaN3RoZXRhbi1idWYvZ2VuL2dvL3Ro",
            "ZXRhbi9pbW1vcnRhbC92MTt0aGV0YW5faW1tb3J0YWxfdjGiAgNUSViqAhJU",
            "aGV0YW4uSW1tb3J0YWwuVjHKAhJUaGV0YW5cSW1tb3J0YWxcVjHiAh5UaGV0",
            "YW5cSW1tb3J0YWxcVjFcR1BCTWV0YWRhdGHqAhRUaGV0YW46OkltbW9ydGFs",
            "OjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Thetan.Immortal.V1.GameMode), typeof(global::Thetan.Immortal.V1.InGameMode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Immortal.V1.SetInGameModeMsg), global::Thetan.Immortal.V1.SetInGameModeMsg.Parser, new[]{ "InGameMode", "GameMode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Immortal.V1.OtherSetInGameModeMsg), global::Thetan.Immortal.V1.OtherSetInGameModeMsg.Parser, new[]{ "PlayerID", "InGameMode", "GameMode" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum GameMode {
    [pbr::OriginalName("NONE_MODE")] NoneMode = 0,
    [pbr::OriginalName("RANKED")] Ranked = 1,
    [pbr::OriginalName("ONBOARDING")] Onboarding = 2,
    [pbr::OriginalName("FRIENDLY")] Friendly = 3,
    [pbr::OriginalName("RANKED_BOT")] RankedBot = 4,
  }

  public enum InGameMode {
    [pbr::OriginalName("SOLO")] Solo = 0,
    [pbr::OriginalName("KO")] Ko = 1,
    [pbr::OriginalName("DUAL")] Dual = 2,
  }

  #endregion

  #region Messages
  public sealed partial class SetInGameModeMsg : pb::IMessage<SetInGameModeMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetInGameModeMsg> _parser = new pb::MessageParser<SetInGameModeMsg>(() => new SetInGameModeMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetInGameModeMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Immortal.V1.ImmortalGameInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetInGameModeMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetInGameModeMsg(SetInGameModeMsg other) : this() {
      inGameMode_ = other.inGameMode_;
      gameMode_ = other.gameMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetInGameModeMsg Clone() {
      return new SetInGameModeMsg(this);
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 1;
    private global::Thetan.Immortal.V1.InGameMode inGameMode_ = global::Thetan.Immortal.V1.InGameMode.Solo;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Immortal.V1.InGameMode InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    /// <summary>Field number for the "gameMode" field.</summary>
    public const int GameModeFieldNumber = 2;
    private global::Thetan.Immortal.V1.GameMode gameMode_ = global::Thetan.Immortal.V1.GameMode.NoneMode;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Immortal.V1.GameMode GameMode {
      get { return gameMode_; }
      set {
        gameMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetInGameModeMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetInGameModeMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InGameMode != other.InGameMode) return false;
      if (GameMode != other.GameMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (InGameMode != global::Thetan.Immortal.V1.InGameMode.Solo) hash ^= InGameMode.GetHashCode();
      if (GameMode != global::Thetan.Immortal.V1.GameMode.NoneMode) hash ^= GameMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InGameMode != global::Thetan.Immortal.V1.InGameMode.Solo) {
        output.WriteRawTag(8);
        output.WriteEnum((int) InGameMode);
      }
      if (GameMode != global::Thetan.Immortal.V1.GameMode.NoneMode) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InGameMode != global::Thetan.Immortal.V1.InGameMode.Solo) {
        output.WriteRawTag(8);
        output.WriteEnum((int) InGameMode);
      }
      if (GameMode != global::Thetan.Immortal.V1.GameMode.NoneMode) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (InGameMode != global::Thetan.Immortal.V1.InGameMode.Solo) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InGameMode);
      }
      if (GameMode != global::Thetan.Immortal.V1.GameMode.NoneMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetInGameModeMsg other) {
      if (other == null) {
        return;
      }
      if (other.InGameMode != global::Thetan.Immortal.V1.InGameMode.Solo) {
        InGameMode = other.InGameMode;
      }
      if (other.GameMode != global::Thetan.Immortal.V1.GameMode.NoneMode) {
        GameMode = other.GameMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InGameMode = (global::Thetan.Immortal.V1.InGameMode) input.ReadEnum();
            break;
          }
          case 16: {
            GameMode = (global::Thetan.Immortal.V1.GameMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InGameMode = (global::Thetan.Immortal.V1.InGameMode) input.ReadEnum();
            break;
          }
          case 16: {
            GameMode = (global::Thetan.Immortal.V1.GameMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OtherSetInGameModeMsg : pb::IMessage<OtherSetInGameModeMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OtherSetInGameModeMsg> _parser = new pb::MessageParser<OtherSetInGameModeMsg>(() => new OtherSetInGameModeMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OtherSetInGameModeMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Immortal.V1.ImmortalGameInfoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OtherSetInGameModeMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OtherSetInGameModeMsg(OtherSetInGameModeMsg other) : this() {
      playerID_ = other.playerID_;
      inGameMode_ = other.inGameMode_;
      gameMode_ = other.gameMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OtherSetInGameModeMsg Clone() {
      return new OtherSetInGameModeMsg(this);
    }

    /// <summary>Field number for the "playerID" field.</summary>
    public const int PlayerIDFieldNumber = 1;
    private string playerID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerID {
      get { return playerID_; }
      set {
        playerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 2;
    private global::Thetan.Immortal.V1.InGameMode inGameMode_ = global::Thetan.Immortal.V1.InGameMode.Solo;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Immortal.V1.InGameMode InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    /// <summary>Field number for the "gameMode" field.</summary>
    public const int GameModeFieldNumber = 3;
    private global::Thetan.Immortal.V1.GameMode gameMode_ = global::Thetan.Immortal.V1.GameMode.NoneMode;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Immortal.V1.GameMode GameMode {
      get { return gameMode_; }
      set {
        gameMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OtherSetInGameModeMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OtherSetInGameModeMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerID != other.PlayerID) return false;
      if (InGameMode != other.InGameMode) return false;
      if (GameMode != other.GameMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerID.Length != 0) hash ^= PlayerID.GetHashCode();
      if (InGameMode != global::Thetan.Immortal.V1.InGameMode.Solo) hash ^= InGameMode.GetHashCode();
      if (GameMode != global::Thetan.Immortal.V1.GameMode.NoneMode) hash ^= GameMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerID);
      }
      if (InGameMode != global::Thetan.Immortal.V1.InGameMode.Solo) {
        output.WriteRawTag(16);
        output.WriteEnum((int) InGameMode);
      }
      if (GameMode != global::Thetan.Immortal.V1.GameMode.NoneMode) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerID);
      }
      if (InGameMode != global::Thetan.Immortal.V1.InGameMode.Solo) {
        output.WriteRawTag(16);
        output.WriteEnum((int) InGameMode);
      }
      if (GameMode != global::Thetan.Immortal.V1.GameMode.NoneMode) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerID);
      }
      if (InGameMode != global::Thetan.Immortal.V1.InGameMode.Solo) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InGameMode);
      }
      if (GameMode != global::Thetan.Immortal.V1.GameMode.NoneMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OtherSetInGameModeMsg other) {
      if (other == null) {
        return;
      }
      if (other.PlayerID.Length != 0) {
        PlayerID = other.PlayerID;
      }
      if (other.InGameMode != global::Thetan.Immortal.V1.InGameMode.Solo) {
        InGameMode = other.InGameMode;
      }
      if (other.GameMode != global::Thetan.Immortal.V1.GameMode.NoneMode) {
        GameMode = other.GameMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerID = input.ReadString();
            break;
          }
          case 16: {
            InGameMode = (global::Thetan.Immortal.V1.InGameMode) input.ReadEnum();
            break;
          }
          case 24: {
            GameMode = (global::Thetan.Immortal.V1.GameMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerID = input.ReadString();
            break;
          }
          case 16: {
            InGameMode = (global::Thetan.Immortal.V1.InGameMode) input.ReadEnum();
            break;
          }
          case 24: {
            GameMode = (global::Thetan.Immortal.V1.GameMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
