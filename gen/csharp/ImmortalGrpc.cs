// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: thetan/immortal/v1/immortal.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code
#if !UNITY_IOS && !UNITY_ANDROID
using grpc = global::Grpc.Core;

namespace Thetan.Immortal.V1 {
  /// <summary>
  ///GRPC
  /// </summary>
  public static partial class ImmortalService
  {
    static readonly string __ServiceName = "thetan.immortal.v1.ImmortalService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.SearchPlayerInfoRequest> __Marshaller_thetan_immortal_v1_SearchPlayerInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.SearchPlayerInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.SearchPlayerInfoResponse> __Marshaller_thetan_immortal_v1_SearchPlayerInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.SearchPlayerInfoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.GetUserProfileRequest> __Marshaller_thetan_immortal_v1_GetUserProfileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.GetUserProfileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.GetUserProfileResponse> __Marshaller_thetan_immortal_v1_GetUserProfileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.GetUserProfileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.BattleEndRequest> __Marshaller_thetan_immortal_v1_BattleEndRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.BattleEndRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.BattleEndResponse> __Marshaller_thetan_immortal_v1_BattleEndResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.BattleEndResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.GetHeroConfigRequest> __Marshaller_thetan_immortal_v1_GetHeroConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.GetHeroConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.GetHeroConfigResponse> __Marshaller_thetan_immortal_v1_GetHeroConfigResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.GetHeroConfigResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.GetSkillConfigRequest> __Marshaller_thetan_immortal_v1_GetSkillConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.GetSkillConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.GetSkillConfigResponse> __Marshaller_thetan_immortal_v1_GetSkillConfigResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.GetSkillConfigResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.GetUserFriendRequest> __Marshaller_thetan_immortal_v1_GetUserFriendRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.GetUserFriendRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.GetUserFriendResponse> __Marshaller_thetan_immortal_v1_GetUserFriendResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.GetUserFriendResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.GetSeasonalRequest> __Marshaller_thetan_immortal_v1_GetSeasonalRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.GetSeasonalRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.GetSeasonalResponse> __Marshaller_thetan_immortal_v1_GetSeasonalResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.GetSeasonalResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.TrackSessionRequest> __Marshaller_thetan_immortal_v1_TrackSessionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.TrackSessionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.TrackSessionResponse> __Marshaller_thetan_immortal_v1_TrackSessionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.TrackSessionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.GetGameDataRequest> __Marshaller_thetan_immortal_v1_GetGameDataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.GetGameDataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Thetan.Immortal.V1.GetGameDataResponse> __Marshaller_thetan_immortal_v1_GetGameDataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thetan.Immortal.V1.GetGameDataResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Thetan.Immortal.V1.SearchPlayerInfoRequest, global::Thetan.Immortal.V1.SearchPlayerInfoResponse> __Method_SearchPlayerInfo = new grpc::Method<global::Thetan.Immortal.V1.SearchPlayerInfoRequest, global::Thetan.Immortal.V1.SearchPlayerInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchPlayerInfo",
        __Marshaller_thetan_immortal_v1_SearchPlayerInfoRequest,
        __Marshaller_thetan_immortal_v1_SearchPlayerInfoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Thetan.Immortal.V1.GetUserProfileRequest, global::Thetan.Immortal.V1.GetUserProfileResponse> __Method_GetUserProfile = new grpc::Method<global::Thetan.Immortal.V1.GetUserProfileRequest, global::Thetan.Immortal.V1.GetUserProfileResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserProfile",
        __Marshaller_thetan_immortal_v1_GetUserProfileRequest,
        __Marshaller_thetan_immortal_v1_GetUserProfileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Thetan.Immortal.V1.BattleEndRequest, global::Thetan.Immortal.V1.BattleEndResponse> __Method_BattleEnd = new grpc::Method<global::Thetan.Immortal.V1.BattleEndRequest, global::Thetan.Immortal.V1.BattleEndResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "BattleEnd",
        __Marshaller_thetan_immortal_v1_BattleEndRequest,
        __Marshaller_thetan_immortal_v1_BattleEndResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Thetan.Immortal.V1.GetHeroConfigRequest, global::Thetan.Immortal.V1.GetHeroConfigResponse> __Method_GetHeroConfig = new grpc::Method<global::Thetan.Immortal.V1.GetHeroConfigRequest, global::Thetan.Immortal.V1.GetHeroConfigResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHeroConfig",
        __Marshaller_thetan_immortal_v1_GetHeroConfigRequest,
        __Marshaller_thetan_immortal_v1_GetHeroConfigResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Thetan.Immortal.V1.GetSkillConfigRequest, global::Thetan.Immortal.V1.GetSkillConfigResponse> __Method_GetSkillConfig = new grpc::Method<global::Thetan.Immortal.V1.GetSkillConfigRequest, global::Thetan.Immortal.V1.GetSkillConfigResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSkillConfig",
        __Marshaller_thetan_immortal_v1_GetSkillConfigRequest,
        __Marshaller_thetan_immortal_v1_GetSkillConfigResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Thetan.Immortal.V1.GetUserFriendRequest, global::Thetan.Immortal.V1.GetUserFriendResponse> __Method_GetListFriends = new grpc::Method<global::Thetan.Immortal.V1.GetUserFriendRequest, global::Thetan.Immortal.V1.GetUserFriendResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetListFriends",
        __Marshaller_thetan_immortal_v1_GetUserFriendRequest,
        __Marshaller_thetan_immortal_v1_GetUserFriendResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Thetan.Immortal.V1.GetSeasonalRequest, global::Thetan.Immortal.V1.GetSeasonalResponse> __Method_GetSeasonal = new grpc::Method<global::Thetan.Immortal.V1.GetSeasonalRequest, global::Thetan.Immortal.V1.GetSeasonalResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSeasonal",
        __Marshaller_thetan_immortal_v1_GetSeasonalRequest,
        __Marshaller_thetan_immortal_v1_GetSeasonalResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Thetan.Immortal.V1.TrackSessionRequest, global::Thetan.Immortal.V1.TrackSessionResponse> __Method_TrackStartSession = new grpc::Method<global::Thetan.Immortal.V1.TrackSessionRequest, global::Thetan.Immortal.V1.TrackSessionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TrackStartSession",
        __Marshaller_thetan_immortal_v1_TrackSessionRequest,
        __Marshaller_thetan_immortal_v1_TrackSessionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Thetan.Immortal.V1.GetGameDataRequest, global::Thetan.Immortal.V1.GetGameDataResponse> __Method_GetGameData = new grpc::Method<global::Thetan.Immortal.V1.GetGameDataRequest, global::Thetan.Immortal.V1.GetGameDataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGameData",
        __Marshaller_thetan_immortal_v1_GetGameDataRequest,
        __Marshaller_thetan_immortal_v1_GetGameDataResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Thetan.Immortal.V1.ImmortalReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ImmortalService</summary>
    [grpc::BindServiceMethod(typeof(ImmortalService), "BindService")]
    public abstract partial class ImmortalServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Thetan.Immortal.V1.SearchPlayerInfoResponse> SearchPlayerInfo(global::Thetan.Immortal.V1.SearchPlayerInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Thetan.Immortal.V1.GetUserProfileResponse> GetUserProfile(global::Thetan.Immortal.V1.GetUserProfileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task BattleEnd(global::Thetan.Immortal.V1.BattleEndRequest request, grpc::IServerStreamWriter<global::Thetan.Immortal.V1.BattleEndResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Thetan.Immortal.V1.GetHeroConfigResponse> GetHeroConfig(global::Thetan.Immortal.V1.GetHeroConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Thetan.Immortal.V1.GetSkillConfigResponse> GetSkillConfig(global::Thetan.Immortal.V1.GetSkillConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Friends
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Thetan.Immortal.V1.GetUserFriendResponse> GetListFriends(global::Thetan.Immortal.V1.GetUserFriendRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Seasonal
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Thetan.Immortal.V1.GetSeasonalResponse> GetSeasonal(global::Thetan.Immortal.V1.GetSeasonalRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Thetan.Immortal.V1.TrackSessionResponse> TrackStartSession(global::Thetan.Immortal.V1.TrackSessionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Thetan.Immortal.V1.GetGameDataResponse> GetGameData(global::Thetan.Immortal.V1.GetGameDataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ImmortalService</summary>
    public partial class ImmortalServiceClient : grpc::ClientBase<ImmortalServiceClient>
    {
      /// <summary>Creates a new client for ImmortalService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ImmortalServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ImmortalService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ImmortalServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ImmortalServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ImmortalServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Thetan.Immortal.V1.SearchPlayerInfoResponse SearchPlayerInfo(global::Thetan.Immortal.V1.SearchPlayerInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchPlayerInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Thetan.Immortal.V1.SearchPlayerInfoResponse SearchPlayerInfo(global::Thetan.Immortal.V1.SearchPlayerInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchPlayerInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Thetan.Immortal.V1.SearchPlayerInfoResponse> SearchPlayerInfoAsync(global::Thetan.Immortal.V1.SearchPlayerInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchPlayerInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Thetan.Immortal.V1.SearchPlayerInfoResponse> SearchPlayerInfoAsync(global::Thetan.Immortal.V1.SearchPlayerInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchPlayerInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Thetan.Immortal.V1.GetUserProfileResponse GetUserProfile(global::Thetan.Immortal.V1.GetUserProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserProfile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Thetan.Immortal.V1.GetUserProfileResponse GetUserProfile(global::Thetan.Immortal.V1.GetUserProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserProfile, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Thetan.Immortal.V1.GetUserProfileResponse> GetUserProfileAsync(global::Thetan.Immortal.V1.GetUserProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserProfileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Thetan.Immortal.V1.GetUserProfileResponse> GetUserProfileAsync(global::Thetan.Immortal.V1.GetUserProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserProfile, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Thetan.Immortal.V1.BattleEndResponse> BattleEnd(global::Thetan.Immortal.V1.BattleEndRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BattleEnd(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Thetan.Immortal.V1.BattleEndResponse> BattleEnd(global::Thetan.Immortal.V1.BattleEndRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_BattleEnd, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Thetan.Immortal.V1.GetHeroConfigResponse GetHeroConfig(global::Thetan.Immortal.V1.GetHeroConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHeroConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Thetan.Immortal.V1.GetHeroConfigResponse GetHeroConfig(global::Thetan.Immortal.V1.GetHeroConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHeroConfig, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Thetan.Immortal.V1.GetHeroConfigResponse> GetHeroConfigAsync(global::Thetan.Immortal.V1.GetHeroConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHeroConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Thetan.Immortal.V1.GetHeroConfigResponse> GetHeroConfigAsync(global::Thetan.Immortal.V1.GetHeroConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHeroConfig, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Thetan.Immortal.V1.GetSkillConfigResponse GetSkillConfig(global::Thetan.Immortal.V1.GetSkillConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSkillConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Thetan.Immortal.V1.GetSkillConfigResponse GetSkillConfig(global::Thetan.Immortal.V1.GetSkillConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSkillConfig, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Thetan.Immortal.V1.GetSkillConfigResponse> GetSkillConfigAsync(global::Thetan.Immortal.V1.GetSkillConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSkillConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Thetan.Immortal.V1.GetSkillConfigResponse> GetSkillConfigAsync(global::Thetan.Immortal.V1.GetSkillConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSkillConfig, null, options, request);
      }
      /// <summary>
      /// Friends
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Thetan.Immortal.V1.GetUserFriendResponse GetListFriends(global::Thetan.Immortal.V1.GetUserFriendRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetListFriends(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Friends
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Thetan.Immortal.V1.GetUserFriendResponse GetListFriends(global::Thetan.Immortal.V1.GetUserFriendRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetListFriends, null, options, request);
      }
      /// <summary>
      /// Friends
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Thetan.Immortal.V1.GetUserFriendResponse> GetListFriendsAsync(global::Thetan.Immortal.V1.GetUserFriendRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetListFriendsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Friends
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Thetan.Immortal.V1.GetUserFriendResponse> GetListFriendsAsync(global::Thetan.Immortal.V1.GetUserFriendRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetListFriends, null, options, request);
      }
      /// <summary>
      /// Seasonal
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Thetan.Immortal.V1.GetSeasonalResponse GetSeasonal(global::Thetan.Immortal.V1.GetSeasonalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSeasonal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Seasonal
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Thetan.Immortal.V1.GetSeasonalResponse GetSeasonal(global::Thetan.Immortal.V1.GetSeasonalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSeasonal, null, options, request);
      }
      /// <summary>
      /// Seasonal
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Thetan.Immortal.V1.GetSeasonalResponse> GetSeasonalAsync(global::Thetan.Immortal.V1.GetSeasonalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSeasonalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Seasonal
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Thetan.Immortal.V1.GetSeasonalResponse> GetSeasonalAsync(global::Thetan.Immortal.V1.GetSeasonalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSeasonal, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Thetan.Immortal.V1.TrackSessionResponse TrackStartSession(global::Thetan.Immortal.V1.TrackSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TrackStartSession(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Thetan.Immortal.V1.TrackSessionResponse TrackStartSession(global::Thetan.Immortal.V1.TrackSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TrackStartSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Thetan.Immortal.V1.TrackSessionResponse> TrackStartSessionAsync(global::Thetan.Immortal.V1.TrackSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TrackStartSessionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Thetan.Immortal.V1.TrackSessionResponse> TrackStartSessionAsync(global::Thetan.Immortal.V1.TrackSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TrackStartSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Thetan.Immortal.V1.GetGameDataResponse GetGameData(global::Thetan.Immortal.V1.GetGameDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGameData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Thetan.Immortal.V1.GetGameDataResponse GetGameData(global::Thetan.Immortal.V1.GetGameDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGameData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Thetan.Immortal.V1.GetGameDataResponse> GetGameDataAsync(global::Thetan.Immortal.V1.GetGameDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGameDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Thetan.Immortal.V1.GetGameDataResponse> GetGameDataAsync(global::Thetan.Immortal.V1.GetGameDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGameData, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ImmortalServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ImmortalServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ImmortalServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SearchPlayerInfo, serviceImpl.SearchPlayerInfo)
          .AddMethod(__Method_GetUserProfile, serviceImpl.GetUserProfile)
          .AddMethod(__Method_BattleEnd, serviceImpl.BattleEnd)
          .AddMethod(__Method_GetHeroConfig, serviceImpl.GetHeroConfig)
          .AddMethod(__Method_GetSkillConfig, serviceImpl.GetSkillConfig)
          .AddMethod(__Method_GetListFriends, serviceImpl.GetListFriends)
          .AddMethod(__Method_GetSeasonal, serviceImpl.GetSeasonal)
          .AddMethod(__Method_TrackStartSession, serviceImpl.TrackStartSession)
          .AddMethod(__Method_GetGameData, serviceImpl.GetGameData).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ImmortalServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SearchPlayerInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Thetan.Immortal.V1.SearchPlayerInfoRequest, global::Thetan.Immortal.V1.SearchPlayerInfoResponse>(serviceImpl.SearchPlayerInfo));
      serviceBinder.AddMethod(__Method_GetUserProfile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Thetan.Immortal.V1.GetUserProfileRequest, global::Thetan.Immortal.V1.GetUserProfileResponse>(serviceImpl.GetUserProfile));
      serviceBinder.AddMethod(__Method_BattleEnd, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Thetan.Immortal.V1.BattleEndRequest, global::Thetan.Immortal.V1.BattleEndResponse>(serviceImpl.BattleEnd));
      serviceBinder.AddMethod(__Method_GetHeroConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Thetan.Immortal.V1.GetHeroConfigRequest, global::Thetan.Immortal.V1.GetHeroConfigResponse>(serviceImpl.GetHeroConfig));
      serviceBinder.AddMethod(__Method_GetSkillConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Thetan.Immortal.V1.GetSkillConfigRequest, global::Thetan.Immortal.V1.GetSkillConfigResponse>(serviceImpl.GetSkillConfig));
      serviceBinder.AddMethod(__Method_GetListFriends, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Thetan.Immortal.V1.GetUserFriendRequest, global::Thetan.Immortal.V1.GetUserFriendResponse>(serviceImpl.GetListFriends));
      serviceBinder.AddMethod(__Method_GetSeasonal, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Thetan.Immortal.V1.GetSeasonalRequest, global::Thetan.Immortal.V1.GetSeasonalResponse>(serviceImpl.GetSeasonal));
      serviceBinder.AddMethod(__Method_TrackStartSession, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Thetan.Immortal.V1.TrackSessionRequest, global::Thetan.Immortal.V1.TrackSessionResponse>(serviceImpl.TrackStartSession));
      serviceBinder.AddMethod(__Method_GetGameData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Thetan.Immortal.V1.GetGameDataRequest, global::Thetan.Immortal.V1.GetGameDataResponse>(serviceImpl.GetGameData));
    }

  }
}
#endif
#endregion
