// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: thetan/match/v1/match_rivals.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Thetan.Match.V1 {

  /// <summary>Holder for reflection information generated from thetan/match/v1/match_rivals.proto</summary>
  public static partial class MatchRivalsReflection {

    #region Descriptor
    /// <summary>File descriptor for thetan/match/v1/match_rivals.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MatchRivalsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJ0aGV0YW4vbWF0Y2gvdjEvbWF0Y2hfcml2YWxzLnByb3RvEg90aGV0YW4u",
            "bWF0Y2gudjEaG2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5wcm90bxoadGhldGFu",
            "L3NoYXJlZC92MS91Z2MucHJvdG8iiAEKCk1hdGNoUm91bmQSFAoFbWFwSUQY",
            "ASABKAVSBW1hcElEEiQKDW1hcERpZmZpY3VsdHkYAiABKAVSDW1hcERpZmZp",
            "Y3VsdHkSJgoOcGxheWVySW5Sb3VuZHMYAyADKAlSDnBsYXllckluUm91bmRz",
            "EhYKBmlucHV0cxgEIAEoDFIGaW5wdXRzIuYCCgtNYXRjaFBsYXllchIaCghw",
            "bGF5ZXJJRBgBIAEoCVIIcGxheWVySUQSFgoGaGVyb0lEGAIgASgJUgZoZXJv",
            "SUQSGgoIaGVyb1NraW4YAyABKAVSCGhlcm9Ta2luEhwKCWhlcm9MZXZlbBgE",
            "IAEoBVIJaGVyb0xldmVsEkkKCWNvc21ldGljcxgFIAMoCzIrLnRoZXRhbi5t",
            "YXRjaC52MS5NYXRjaFBsYXllci5Db3NtZXRpY3NFbnRyeVIJY29zbWV0aWNz",
            "EkAKCmN1c3RvbWl6ZWQYBiABKAsyIC50aGV0YW4uc2hhcmVkLnYxLkhlcm9D",
            "dXN0b21pemVkUgpjdXN0b21pemVkEh4KCmJhdHRsZVJhbmsYByABKAVSCmJh",
            "dHRsZVJhbmsaPAoOQ29zbWV0aWNzRW50cnkSEAoDa2V5GAEgASgJUgNrZXkS",
            "FAoFdmFsdWUYAiABKAVSBXZhbHVlOgI4ASLCAQoJTWF0Y2hEYXRhEhgKB21h",
            "dGNoSUQYASABKAlSB21hdGNoSUQSMwoGcm91bmRzGAIgAygLMhsudGhldGFu",
            "Lm1hdGNoLnYxLk1hdGNoUm91bmRSBnJvdW5kcxI2CgdwbGF5ZXJzGAMgAygL",
            "MhwudGhldGFuLm1hdGNoLnYxLk1hdGNoUGxheWVyUgdwbGF5ZXJzEhgKB3N0",
            "YXJ0QXQYBCABKANSB3N0YXJ0QXQSFAoFZW5kQXQYBSABKANSBWVuZEF0Ml8K",
            "EVRoZXRhbk1hdGNoUml2YWxzEkoKElNwZWN0YXRvckJhdHRsZUVuZBIaLnRo",
            "ZXRhbi5tYXRjaC52MS5NYXRjaERhdGEaFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkiAEK6AQoTY29tLnRoZXRhbi5tYXRjaC52MUIQTWF0Y2hSaXZhbHNQcm90",
            "b1ABWjF0aGV0YW4tYnVmL2dlbi9nby90aGV0YW4vbWF0Y2gvdjE7dGhldGFu",
            "X21hdGNoX3YxogIDVE1YqgIPVGhldGFuLk1hdGNoLlYxygIQVGhldGFuXE1h",
            "dGNoX1xWMeICHFRoZXRhblxNYXRjaF9cVjFcR1BCTWV0YWRhdGHqAhFUaGV0",
            "YW46Ok1hdGNoOjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Thetan.Shared.V1.UgcReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Match.V1.MatchRound), global::Thetan.Match.V1.MatchRound.Parser, new[]{ "MapID", "MapDifficulty", "PlayerInRounds", "Inputs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Match.V1.MatchPlayer), global::Thetan.Match.V1.MatchPlayer.Parser, new[]{ "PlayerID", "HeroID", "HeroSkin", "HeroLevel", "Cosmetics", "Customized", "BattleRank" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Match.V1.MatchData), global::Thetan.Match.V1.MatchData.Parser, new[]{ "MatchID", "Rounds", "Players", "StartAt", "EndAt" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MatchRound : pb::IMessage<MatchRound>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchRound> _parser = new pb::MessageParser<MatchRound>(() => new MatchRound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchRound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Match.V1.MatchRivalsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchRound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchRound(MatchRound other) : this() {
      mapID_ = other.mapID_;
      mapDifficulty_ = other.mapDifficulty_;
      playerInRounds_ = other.playerInRounds_.Clone();
      inputs_ = other.inputs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchRound Clone() {
      return new MatchRound(this);
    }

    /// <summary>Field number for the "mapID" field.</summary>
    public const int MapIDFieldNumber = 1;
    private int mapID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapID {
      get { return mapID_; }
      set {
        mapID_ = value;
      }
    }

    /// <summary>Field number for the "mapDifficulty" field.</summary>
    public const int MapDifficultyFieldNumber = 2;
    private int mapDifficulty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapDifficulty {
      get { return mapDifficulty_; }
      set {
        mapDifficulty_ = value;
      }
    }

    /// <summary>Field number for the "playerInRounds" field.</summary>
    public const int PlayerInRoundsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_playerInRounds_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> playerInRounds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of players played in this round, playerID (ObjectID)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> PlayerInRounds {
      get { return playerInRounds_; }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 4;
    private pb::ByteString inputs_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Inputs {
      get { return inputs_; }
      set {
        inputs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchRound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchRound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapID != other.MapID) return false;
      if (MapDifficulty != other.MapDifficulty) return false;
      if(!playerInRounds_.Equals(other.playerInRounds_)) return false;
      if (Inputs != other.Inputs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MapID != 0) hash ^= MapID.GetHashCode();
      if (MapDifficulty != 0) hash ^= MapDifficulty.GetHashCode();
      hash ^= playerInRounds_.GetHashCode();
      if (Inputs.Length != 0) hash ^= Inputs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MapID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapID);
      }
      if (MapDifficulty != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MapDifficulty);
      }
      playerInRounds_.WriteTo(output, _repeated_playerInRounds_codec);
      if (Inputs.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Inputs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MapID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapID);
      }
      if (MapDifficulty != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MapDifficulty);
      }
      playerInRounds_.WriteTo(ref output, _repeated_playerInRounds_codec);
      if (Inputs.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Inputs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MapID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapID);
      }
      if (MapDifficulty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapDifficulty);
      }
      size += playerInRounds_.CalculateSize(_repeated_playerInRounds_codec);
      if (Inputs.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Inputs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchRound other) {
      if (other == null) {
        return;
      }
      if (other.MapID != 0) {
        MapID = other.MapID;
      }
      if (other.MapDifficulty != 0) {
        MapDifficulty = other.MapDifficulty;
      }
      playerInRounds_.Add(other.playerInRounds_);
      if (other.Inputs.Length != 0) {
        Inputs = other.Inputs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapID = input.ReadInt32();
            break;
          }
          case 16: {
            MapDifficulty = input.ReadInt32();
            break;
          }
          case 26: {
            playerInRounds_.AddEntriesFrom(input, _repeated_playerInRounds_codec);
            break;
          }
          case 34: {
            Inputs = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapID = input.ReadInt32();
            break;
          }
          case 16: {
            MapDifficulty = input.ReadInt32();
            break;
          }
          case 26: {
            playerInRounds_.AddEntriesFrom(ref input, _repeated_playerInRounds_codec);
            break;
          }
          case 34: {
            Inputs = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchPlayer : pb::IMessage<MatchPlayer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchPlayer> _parser = new pb::MessageParser<MatchPlayer>(() => new MatchPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Match.V1.MatchRivalsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchPlayer(MatchPlayer other) : this() {
      playerID_ = other.playerID_;
      heroID_ = other.heroID_;
      heroSkin_ = other.heroSkin_;
      heroLevel_ = other.heroLevel_;
      cosmetics_ = other.cosmetics_.Clone();
      customized_ = other.customized_ != null ? other.customized_.Clone() : null;
      battleRank_ = other.battleRank_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchPlayer Clone() {
      return new MatchPlayer(this);
    }

    /// <summary>Field number for the "playerID" field.</summary>
    public const int PlayerIDFieldNumber = 1;
    private string playerID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerID {
      get { return playerID_; }
      set {
        playerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "heroID" field.</summary>
    public const int HeroIDFieldNumber = 2;
    private string heroID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HeroID {
      get { return heroID_; }
      set {
        heroID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "heroSkin" field.</summary>
    public const int HeroSkinFieldNumber = 3;
    private int heroSkin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HeroSkin {
      get { return heroSkin_; }
      set {
        heroSkin_ = value;
      }
    }

    /// <summary>Field number for the "heroLevel" field.</summary>
    public const int HeroLevelFieldNumber = 4;
    private int heroLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HeroLevel {
      get { return heroLevel_; }
      set {
        heroLevel_ = value;
      }
    }

    /// <summary>Field number for the "cosmetics" field.</summary>
    public const int CosmeticsFieldNumber = 5;
    private static readonly pbc::MapField<string, int>.Codec _map_cosmetics_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 42);
    private readonly pbc::MapField<string, int> cosmetics_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, int> Cosmetics {
      get { return cosmetics_; }
    }

    /// <summary>Field number for the "customized" field.</summary>
    public const int CustomizedFieldNumber = 6;
    private global::Thetan.Shared.V1.HeroCustomized customized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.HeroCustomized Customized {
      get { return customized_; }
      set {
        customized_ = value;
      }
    }

    /// <summary>Field number for the "battleRank" field.</summary>
    public const int BattleRankFieldNumber = 7;
    private int battleRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BattleRank {
      get { return battleRank_; }
      set {
        battleRank_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerID != other.PlayerID) return false;
      if (HeroID != other.HeroID) return false;
      if (HeroSkin != other.HeroSkin) return false;
      if (HeroLevel != other.HeroLevel) return false;
      if (!Cosmetics.Equals(other.Cosmetics)) return false;
      if (!object.Equals(Customized, other.Customized)) return false;
      if (BattleRank != other.BattleRank) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerID.Length != 0) hash ^= PlayerID.GetHashCode();
      if (HeroID.Length != 0) hash ^= HeroID.GetHashCode();
      if (HeroSkin != 0) hash ^= HeroSkin.GetHashCode();
      if (HeroLevel != 0) hash ^= HeroLevel.GetHashCode();
      hash ^= Cosmetics.GetHashCode();
      if (customized_ != null) hash ^= Customized.GetHashCode();
      if (BattleRank != 0) hash ^= BattleRank.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerID);
      }
      if (HeroID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HeroID);
      }
      if (HeroSkin != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HeroSkin);
      }
      if (HeroLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(HeroLevel);
      }
      cosmetics_.WriteTo(output, _map_cosmetics_codec);
      if (customized_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Customized);
      }
      if (BattleRank != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BattleRank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerID);
      }
      if (HeroID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HeroID);
      }
      if (HeroSkin != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HeroSkin);
      }
      if (HeroLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(HeroLevel);
      }
      cosmetics_.WriteTo(ref output, _map_cosmetics_codec);
      if (customized_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Customized);
      }
      if (BattleRank != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BattleRank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerID);
      }
      if (HeroID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeroID);
      }
      if (HeroSkin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroSkin);
      }
      if (HeroLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroLevel);
      }
      size += cosmetics_.CalculateSize(_map_cosmetics_codec);
      if (customized_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Customized);
      }
      if (BattleRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BattleRank);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchPlayer other) {
      if (other == null) {
        return;
      }
      if (other.PlayerID.Length != 0) {
        PlayerID = other.PlayerID;
      }
      if (other.HeroID.Length != 0) {
        HeroID = other.HeroID;
      }
      if (other.HeroSkin != 0) {
        HeroSkin = other.HeroSkin;
      }
      if (other.HeroLevel != 0) {
        HeroLevel = other.HeroLevel;
      }
      cosmetics_.Add(other.cosmetics_);
      if (other.customized_ != null) {
        if (customized_ == null) {
          Customized = new global::Thetan.Shared.V1.HeroCustomized();
        }
        Customized.MergeFrom(other.Customized);
      }
      if (other.BattleRank != 0) {
        BattleRank = other.BattleRank;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerID = input.ReadString();
            break;
          }
          case 18: {
            HeroID = input.ReadString();
            break;
          }
          case 24: {
            HeroSkin = input.ReadInt32();
            break;
          }
          case 32: {
            HeroLevel = input.ReadInt32();
            break;
          }
          case 42: {
            cosmetics_.AddEntriesFrom(input, _map_cosmetics_codec);
            break;
          }
          case 50: {
            if (customized_ == null) {
              Customized = new global::Thetan.Shared.V1.HeroCustomized();
            }
            input.ReadMessage(Customized);
            break;
          }
          case 56: {
            BattleRank = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerID = input.ReadString();
            break;
          }
          case 18: {
            HeroID = input.ReadString();
            break;
          }
          case 24: {
            HeroSkin = input.ReadInt32();
            break;
          }
          case 32: {
            HeroLevel = input.ReadInt32();
            break;
          }
          case 42: {
            cosmetics_.AddEntriesFrom(ref input, _map_cosmetics_codec);
            break;
          }
          case 50: {
            if (customized_ == null) {
              Customized = new global::Thetan.Shared.V1.HeroCustomized();
            }
            input.ReadMessage(Customized);
            break;
          }
          case 56: {
            BattleRank = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchData : pb::IMessage<MatchData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchData> _parser = new pb::MessageParser<MatchData>(() => new MatchData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Match.V1.MatchRivalsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchData(MatchData other) : this() {
      matchID_ = other.matchID_;
      rounds_ = other.rounds_.Clone();
      players_ = other.players_.Clone();
      startAt_ = other.startAt_;
      endAt_ = other.endAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchData Clone() {
      return new MatchData(this);
    }

    /// <summary>Field number for the "matchID" field.</summary>
    public const int MatchIDFieldNumber = 1;
    private string matchID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MatchID {
      get { return matchID_; }
      set {
        matchID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rounds" field.</summary>
    public const int RoundsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Thetan.Match.V1.MatchRound> _repeated_rounds_codec
        = pb::FieldCodec.ForMessage(18, global::Thetan.Match.V1.MatchRound.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Match.V1.MatchRound> rounds_ = new pbc::RepeatedField<global::Thetan.Match.V1.MatchRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Match.V1.MatchRound> Rounds {
      get { return rounds_; }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Thetan.Match.V1.MatchPlayer> _repeated_players_codec
        = pb::FieldCodec.ForMessage(26, global::Thetan.Match.V1.MatchPlayer.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Match.V1.MatchPlayer> players_ = new pbc::RepeatedField<global::Thetan.Match.V1.MatchPlayer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Match.V1.MatchPlayer> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "startAt" field.</summary>
    public const int StartAtFieldNumber = 4;
    private long startAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartAt {
      get { return startAt_; }
      set {
        startAt_ = value;
      }
    }

    /// <summary>Field number for the "endAt" field.</summary>
    public const int EndAtFieldNumber = 5;
    private long endAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndAt {
      get { return endAt_; }
      set {
        endAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchID != other.MatchID) return false;
      if(!rounds_.Equals(other.rounds_)) return false;
      if(!players_.Equals(other.players_)) return false;
      if (StartAt != other.StartAt) return false;
      if (EndAt != other.EndAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchID.Length != 0) hash ^= MatchID.GetHashCode();
      hash ^= rounds_.GetHashCode();
      hash ^= players_.GetHashCode();
      if (StartAt != 0L) hash ^= StartAt.GetHashCode();
      if (EndAt != 0L) hash ^= EndAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MatchID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchID);
      }
      rounds_.WriteTo(output, _repeated_rounds_codec);
      players_.WriteTo(output, _repeated_players_codec);
      if (StartAt != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(StartAt);
      }
      if (EndAt != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(EndAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MatchID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchID);
      }
      rounds_.WriteTo(ref output, _repeated_rounds_codec);
      players_.WriteTo(ref output, _repeated_players_codec);
      if (StartAt != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(StartAt);
      }
      if (EndAt != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(EndAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MatchID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchID);
      }
      size += rounds_.CalculateSize(_repeated_rounds_codec);
      size += players_.CalculateSize(_repeated_players_codec);
      if (StartAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartAt);
      }
      if (EndAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchData other) {
      if (other == null) {
        return;
      }
      if (other.MatchID.Length != 0) {
        MatchID = other.MatchID;
      }
      rounds_.Add(other.rounds_);
      players_.Add(other.players_);
      if (other.StartAt != 0L) {
        StartAt = other.StartAt;
      }
      if (other.EndAt != 0L) {
        EndAt = other.EndAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MatchID = input.ReadString();
            break;
          }
          case 18: {
            rounds_.AddEntriesFrom(input, _repeated_rounds_codec);
            break;
          }
          case 26: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 32: {
            StartAt = input.ReadInt64();
            break;
          }
          case 40: {
            EndAt = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MatchID = input.ReadString();
            break;
          }
          case 18: {
            rounds_.AddEntriesFrom(ref input, _repeated_rounds_codec);
            break;
          }
          case 26: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 32: {
            StartAt = input.ReadInt64();
            break;
          }
          case 40: {
            EndAt = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
