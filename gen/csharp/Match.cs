// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: thetan/shared/v1/match.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Thetan.Shared.V1 {

  /// <summary>Holder for reflection information generated from thetan/shared/v1/match.proto</summary>
  public static partial class MatchReflection {

    #region Descriptor
    /// <summary>File descriptor for thetan/shared/v1/match.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MatchReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chx0aGV0YW4vc2hhcmVkL3YxL21hdGNoLnByb3RvEhB0aGV0YW4uc2hhcmVk",
            "LnYxGiB0aGV0YW4vc2hhcmVkL3YxL2dhbWVfaW5mby5wcm90bxohdGhldGFu",
            "L3NoYXJlZC92MS9jdXN0b21pemVkLnByb3RvIpMECgpUaWNrZXREYXRhEhoK",
            "CHBsYXllcklkGAEgASgJUghwbGF5ZXJJZBI2CghnYW1lTW9kZRgCIAEoDjIa",
            "LnRoZXRhbi5zaGFyZWQudjEuR2FtZU1vZGVSCGdhbWVNb2RlEjwKCmluR2Ft",
            "ZU1vZGUYAyABKA4yHC50aGV0YW4uc2hhcmVkLnYxLkluR2FtZU1vZGVSCmlu",
            "R2FtZU1vZGUSGAoHZXZlbnRJZBgEIAEoCVIHZXZlbnRJZBJACgdwbGF5ZXJz",
            "GAUgAygLMiYudGhldGFuLnNoYXJlZC52MS5QbGF5ZXJJbmZvTWF0Y2hQcm90",
            "b1IHcGxheWVycxIYCgdyZWdpb25zGAYgAygFUgdyZWdpb25zEhgKB3BhcnR5",
            "SWQYByABKAlSB3BhcnR5SWQSGgoIdGlja2V0SWQYCCABKAlSCHRpY2tldElk",
            "Eh4KCmNyZWF0ZVRpbWUYCSABKANSCmNyZWF0ZVRpbWUSFAoFZ3JvdXAYCiAB",
            "KAVSBWdyb3VwEkgKDnRvdXJuYW1lbnRJbmZvGAsgASgLMiAudGhldGFuLnNo",
            "YXJlZC52MS5Ub3VybmFtZW50SW5mb1IOdG91cm5hbWVudEluZm8SLwoFYXJl",
            "bmEYDCABKA4yGS50aGV0YW4uc2hhcmVkLnYxLlRSQXJlbmFSBWFyZW5hEhYK",
            "Bm1vZGVJZBgNIAEoCVIGbW9kZUlkIogCCg5Ub3VybmFtZW50SW5mbxIiCgx0",
            "b3VybmFtZW50SUQYASABKAlSDHRvdXJuYW1lbnRJRBIkCg10b3VybmFtZW50",
            "VGFnGAIgASgJUg10b3VybmFtZW50VGFnEigKD2VuYWJsZVNwZWN0YXRvchgD",
            "IAEoCFIPZW5hYmxlU3BlY3RhdG9yEjIKBG1hcHMYBCADKAsyHi50aGV0YW4u",
            "c2hhcmVkLnYxLk1hcERhdGFQcm90b1IEbWFwcxIeCgptYXhQbGF5ZXJzGAUg",
            "ASgFUgptYXhQbGF5ZXJzEi4KEm1heER1cmF0aW9uSW5NYXRjaBgGIAEoBVIS",
            "bWF4RHVyYXRpb25Jbk1hdGNoIt8CChdNYXRjaE1ha2luZ1JlcXVlc3RQcm90",
            "bxIaCghwbGF5ZXJJZBgEIAEoCVIIcGxheWVySWQSGAoHcGFydHlJZBgFIAEo",
            "CVIHcGFydHlJZBI2CghnYW1lTW9kZRgBIAEoDjIaLnRoZXRhbi5zaGFyZWQu",
            "djEuR2FtZU1vZGVSCGdhbWVNb2RlEjwKCmluR2FtZU1vZGUYAiABKA4yHC50",
            "aGV0YW4uc2hhcmVkLnYxLkluR2FtZU1vZGVSCmluR2FtZU1vZGUSGgoIdHJv",
            "cGhpZXMYAyABKAVSCHRyb3BoaWVzEhgKB3JlZ2lvbnMYBiADKAVSB3JlZ2lv",
            "bnMSQAoHcGxheWVycxgHIAMoCzImLnRoZXRhbi5zaGFyZWQudjEuUGxheWVy",
            "SW5mb01hdGNoUHJvdG9SB3BsYXllcnMSIAoLaXNQbGF5QWdhaW4YCCABKAhS",
            "C2lzUGxheUFnYWluIlwKGE1hdGNoTWFraW5nRGF0YVBsYXlBZ2FpbhJACgdw",
            "bGF5ZXJzGAEgAygLMiYudGhldGFuLnNoYXJlZC52MS5QbGF5ZXJJbmZvTWF0",
            "Y2hQcm90b1IHcGxheWVycyKyAQoURGF0YVBsYXlBZ2FpblN1Y2Nlc3MSGgoI",
            "dGlja2V0SWQYASABKAlSCHRpY2tldElkEiYKDnRyb3BoeU1hdGNoaW5nGAIg",
            "ASgFUg50cm9waHlNYXRjaGluZxIYCgdwbGF5ZXJzGAMgAygJUgdwbGF5ZXJz",
            "EjwKCmluR2FtZU1vZGUYBCABKA4yHC50aGV0YW4uc2hhcmVkLnYxLkluR2Ft",
            "ZU1vZGVSCmluR2FtZU1vZGUiiwUKF01hdGNoRm91bmRSZXNwb25zZVByb3Rv",
            "EhgKB21hdGNoSWQYASABKAlSB21hdGNoSWQSIgoMbWF0Y2hWZXJzaW9uGAkg",
            "ASgJUgxtYXRjaFZlcnNpb24SQAoHcGxheWVycxgCIAMoCzImLnRoZXRhbi5z",
            "aGFyZWQudjEuUGxheWVySW5mb01hdGNoUHJvdG9SB3BsYXllcnMSNgoIZ2Ft",
            "ZU1vZGUYAyABKA4yGi50aGV0YW4uc2hhcmVkLnYxLkdhbWVNb2RlUghnYW1l",
            "TW9kZRI8CgppbkdhbWVNb2RlGAQgASgOMhwudGhldGFuLnNoYXJlZC52MS5J",
            "bkdhbWVNb2RlUgppbkdhbWVNb2RlEh4KCmJlc3RSZWdpb24YBSABKAVSCmJl",
            "c3RSZWdpb24SOgoGbWFwSWRzGAYgAygLMh4udGhldGFuLnNoYXJlZC52MS5N",
            "YXBEYXRhUHJvdG9CAhgBUgZtYXBJZHMSNAoVTGlzdE1heFBsYXllclBlclJv",
            "dW5kGAcgAygFUhVMaXN0TWF4UGxheWVyUGVyUm91bmQSQAoKcGxheWVyU3Rh",
            "dBgIIAEoCzIcLnRoZXRhbi5zaGFyZWQudjEuUGxheWVyU3RhdEICGAFSCnBs",
            "YXllclN0YXQSGgoIaXNPbmxpbmUYCiABKAhSCGlzT25saW5lEigKD2VuYWJs",
            "ZVNwZWN0YXRvchgLIAEoCFIPZW5hYmxlU3BlY3RhdG9yEi8KBWFyZW5hGAwg",
            "ASgOMhkudGhldGFuLnNoYXJlZC52MS5UUkFyZW5hUgVhcmVuYRIvCgZyb3Vu",
            "ZHMYDSADKAsyFy50aGV0YW4uc2hhcmVkLnYxLlJvdW5kUgZyb3VuZHMijQIK",
            "BVJvdW5kEhQKBW1hcElEGAEgASgFUgVtYXBJRBJJCg1tYXBEaWZmaWN1bHR5",
            "GAIgASgOMiMudGhldGFuLnNoYXJlZC52MS5NYXBEaWZmaWN1bHR5RW51bVIN",
            "bWFwRGlmZmljdWx0eRJHCgpza2lsbHNEYXRhGAwgAygLMicudGhldGFuLnNo",
            "YXJlZC52MS5Sb3VuZC5Ta2lsbHNEYXRhRW50cnlSCnNraWxsc0RhdGEaWgoP",
            "U2tpbGxzRGF0YUVudHJ5EhAKA2tleRgBIAEoBVIDa2V5EjEKBXZhbHVlGAIg",
            "ASgLMhsudGhldGFuLnNoYXJlZC52MS5Ta2lsbERhdGFSBXZhbHVlOgI4ASJa",
            "CglTa2lsbERhdGESLwoGc2tpbGxzGAEgAygLMhcudGhldGFuLnNoYXJlZC52",
            "MS5Ta2lsbFIGc2tpbGxzEhwKCXJvbGxMaW1pdBgCIAEoBVIJcm9sbExpbWl0",
            "Ii0KBVNraWxsEg4KAmlkGAEgASgFUgJpZBIUCgVsZXZlbBgCIAEoBVIFbGV2",
            "ZWwiYgoJTWFwU2tpbGxzEjMKBnNraWxscxgBIAMoCzIbLnRoZXRhbi5zaGFy",
            "ZWQudjEuU2tpbGxJbmZvUgZza2lsbHMSHAoJcm9sbExpbWl0GAIgASgFUgly",
            "b2xsTGltaXQ6AhgBIikKCVNraWxsSW5mbxIYCgdza2lsbElEGAEgASgFUgdz",
            "a2lsbElEOgIYASKmAQoKUGxheWVyU3RhdBIkCg1yb3VuZFNjb3JlQWxsGAEg",
            "ASgFUg1yb3VuZFNjb3JlQWxsEiIKDHJhY2VTY29yZUFsbBgCIAEoAlIMcmFj",
            "ZVNjb3JlQWxsEigKD3F1YWxpZnlTY29yZUFsbBgDIAEoBVIPcXVhbGlmeVNj",
            "b3JlQWxsEiAKC3BsYXllclNjb3JlGAQgASgCUgtwbGF5ZXJTY29yZToCGAEi",
            "mwIKDE1hcERhdGFQcm90bxIUCgVtYXBJZBgBIAEoBVIFbWFwSWQSSQoNbWFw",
            "RGlmZmljdWx0eRgCIAEoDjIjLnRoZXRhbi5zaGFyZWQudjEuTWFwRGlmZmlj",
            "dWx0eUVudW1SDW1hcERpZmZpY3VsdHkSSwoJbWFwU2tpbGxzGAwgAygLMi0u",
            "dGhldGFuLnNoYXJlZC52MS5NYXBEYXRhUHJvdG8uTWFwU2tpbGxzRW50cnlS",
            "CW1hcFNraWxscxpZCg5NYXBTa2lsbHNFbnRyeRIQCgNrZXkYASABKAVSA2tl",
            "eRIxCgV2YWx1ZRgCIAEoCzIbLnRoZXRhbi5zaGFyZWQudjEuTWFwU2tpbGxz",
            "UgV2YWx1ZToCOAE6AhgBIoABChdNYXRjaERhdGFCYXR0bGVMb2dQcm90bxIg",
            "Cgt0aW1lRW5kR2FtZRgBIAEoBVILdGltZUVuZEdhbWUSQwoHcGxheWVycxgC",
            "IAMoCzIpLnRoZXRhbi5zaGFyZWQudjEuUGxheWVySW5mb0VuZE1hdGNoUHJv",
            "dG9SB3BsYXllcnMiOAoWTWF0Y2hTdGFydFJlcXVlc3RQcm90bxIeCgpiZXN0",
            "UmVnaW9uGAEgASgFUgpiZXN0UmVnaW9uInUKFE1hdGNoRW5kUmVxdWVzdFBy",
            "b3RvEhgKB21hdGNoSWQYASABKAlSB21hdGNoSWQSQwoHcGxheWVycxgCIAMo",
            "CzIpLnRoZXRhbi5zaGFyZWQudjEuUGxheWVySW5mb0VuZE1hdGNoUHJvdG9S",
            "B3BsYXllcnMiywIKF1BsYXllckluZm9FbmRNYXRjaFByb3RvEhoKCHBsYXll",
            "cklkGAEgASgJUghwbGF5ZXJJZBIWCgZ0ZWFtSWQYAiABKAVSBnRlYW1JZBIi",
            "CgxoYXNTdXBlclN0YXIYAyABKAhSDGhhc1N1cGVyU3RhchIUCgVpc0JvdBgE",
            "IAEoCFIFaXNCb3QSFAoFc2NvcmUYBSABKAVSBXNjb3JlEhIKBHJhbmsYBiAB",
            "KAVSBHJhbmsSIAoLY29sbGVjdGlvbnMYByADKAVSC2NvbGxlY3Rpb25zEhIK",
            "BGhlcm8YCCABKAVSBGhlcm8SFgoGc2tpbGwxGAkgASgFUgZza2lsbDESFgoG",
            "c2tpbGwyGAogASgFUgZza2lsbDISEgoEc2tpbhgLIAEoBVIEc2tpbhIeCgpw",
            "bGF5ZXJOYW1lGAwgASgJUgpwbGF5ZXJOYW1lIvYCChZNYXRjaERhdGFSZXNw",
            "b25zZVByb3RvEhgKB21hdGNoSWQYASABKAlSB21hdGNoSWQSSQoJYmF0dGxl",
            "TG9nGAIgASgLMikudGhldGFuLnNoYXJlZC52MS5NYXRjaERhdGFCYXR0bGVM",
            "b2dQcm90b0gAUgliYXR0bGVMb2cSTAoNZGF0YVJlY29ubmVjdBgDIAEoCzIk",
            "LnRoZXRhbi5zaGFyZWQudjEuTWF0Y2hEYXRhUmVjb25uZWN0SABSDWRhdGFS",
            "ZWNvbm5lY3QSJgoNbWF0Y2hOb3RTdGFydBgEIAEoCEgAUg1tYXRjaE5vdFN0",
            "YXJ0EjYKCGdhbWVNb2RlGAUgASgOMhoudGhldGFuLnNoYXJlZC52MS5HYW1l",
            "TW9kZVIIZ2FtZU1vZGUSPAoKaW5HYW1lTW9kZRgGIAEoDjIcLnRoZXRhbi5z",
            "aGFyZWQudjEuSW5HYW1lTW9kZVIKaW5HYW1lTW9kZUILCglkYXRhTWF0Y2gi",
            "SgoSTWF0Y2hEYXRhUmVjb25uZWN0EhwKCXRpbWVTdGFydBgBIAEoBVIJdGlt",
            "ZVN0YXJ0EhYKBnJlZ2lvbhgCIAEoBVIGcmVnaW9uIswKChRQbGF5ZXJJbmZv",
            "TWF0Y2hQcm90bxIaCghwbGF5ZXJJZBgBIAEoCVIIcGxheWVySWQSGAoHcGFy",
            "dHlJZBgCIAEoCVIHcGFydHlJZBIeCgpoZXJvVHlwZUlkGAMgASgFUgpoZXJv",
            "VHlwZUlkEhYKBnNraWxsMRgEIAEoBVIGc2tpbGwxEhYKBnNraWxsMhgFIAEo",
            "BVIGc2tpbGwyEhIKBHNraW4YBiABKAVSBHNraW4SGgoIdHJvcGhpZXMYByAB",
            "KAVSCHRyb3BoaWVzEhwKCWhlcm9MZXZlbBgIIAEoBVIJaGVyb0xldmVsEiAK",
            "C3NraWxsMUxldmVsGAkgASgFUgtza2lsbDFMZXZlbBIgCgtza2lsbDJMZXZl",
            "bBgKIAEoBVILc2tpbGwyTGV2ZWwSGAoHcmVnaW9ucxgLIAMoBVIHcmVnaW9u",
            "cxIeCgpwbGF5ZXJOYW1lGAwgASgJUgpwbGF5ZXJOYW1lEhoKCGF2YXRhcklk",
            "GA0gASgFUghhdmF0YXJJZBIYCgdmcmFtZUlkGA4gASgFUgdmcmFtZUlkEhgK",
            "B2d1aWxkSWQYDyABKAlSB2d1aWxkSWQSFgoGaGVyb0lkGBAgASgJUgZoZXJv",
            "SWQSJgoOaXNTcGVjaWFsRXZlbnQYESABKAhSDmlzU3BlY2lhbEV2ZW50EiQK",
            "DWJlaGF2aW9yUG9pbnQYEiABKAVSDWJlaGF2aW9yUG9pbnQSJgoOdHJvcGh5",
            "TWF0Y2hpbmcYEyABKAVSDnRyb3BoeU1hdGNoaW5nEhwKCWJyYWluVHlwZRgU",
            "IAEoBVIJYnJhaW5UeXBlEhYKBnRlYW1JRBgVIAEoBVIGdGVhbUlEEiAKC2Jh",
            "dHRsZUNvdW50GBYgASgFUgtiYXR0bGVDb3VudBJOCg1jb3NtZXRpY1VzaW5n",
            "GBcgASgLMiQudGhldGFuLnNoYXJlZC52MS5Db3NtZXRpY1VzaW5nUHJvdG9C",
            "AhgBUg1jb3NtZXRpY1VzaW5nEiAKC05hbWVDb2xvcklkGBggASgFUgtOYW1l",
            "Q29sb3JJZBIgCgtQbGF5ZXJTY29yZRgZIAEoAVILUGxheWVyU2NvcmUSFgoG",
            "TWFwSURzGBogAygFUgZNYXBJRHMSEgoEcmFuaxgbIAEoBVIEcmFuaxJQCg9j",
            "b3NtZXRpY1VzaW5nVjIYHCABKAsyJi50aGV0YW4uc2hhcmVkLnYxLkNvc21l",
            "dGljVXNpbmdQcm90b1YyUg9jb3NtZXRpY1VzaW5nVjISWQoLcm91bmRQbGF5",
            "ZWQYHSADKAsyNy50aGV0YW4uc2hhcmVkLnYxLlBsYXllckluZm9NYXRjaFBy",
            "b3RvLlJvdW5kUGxheWVkRW50cnlSC3JvdW5kUGxheWVkEjwKCmN1c3RvbWl6",
            "ZWQYHiABKAsyHC50aGV0YW4uc2hhcmVkLnYxLkN1c3RvbWl6ZWRSCmN1c3Rv",
            "bWl6ZWQSIAoLY291bnRyeUNvZGUYHyABKAlSC2NvdW50cnlDb2RlEhwKCWd1",
            "aWxkTmFtZRggIAEoCVIJZ3VpbGROYW1lEi8KBnNraWxscxghIAMoCzIXLnRo",
            "ZXRhbi5zaGFyZWQudjEuU2tpbGxSBnNraWxscxJQCg5zZWxlY3RlZFNraWxs",
            "cxgiIAMoCzIoLnRoZXRhbi5zaGFyZWQudjEuU2VsZWN0ZWRTa2lsbHNQZXJS",
            "b3VuZFIOc2VsZWN0ZWRTa2lsbHMaPgoQUm91bmRQbGF5ZWRFbnRyeRIQCgNr",
            "ZXkYASABKAlSA2tleRIUCgV2YWx1ZRgCIAEoBVIFdmFsdWU6AjgBIsIBChZT",
            "ZWxlY3RlZFNraWxsc1BlclJvdW5kElIKCHNlbGVjdGVkGAEgAygLMjYudGhl",
            "dGFuLnNoYXJlZC52MS5TZWxlY3RlZFNraWxsc1BlclJvdW5kLlNlbGVjdGVk",
            "RW50cnlSCHNlbGVjdGVkGlQKDVNlbGVjdGVkRW50cnkSEAoDa2V5GAEgASgF",
            "UgNrZXkSLQoFdmFsdWUYAiABKAsyFy50aGV0YW4uc2hhcmVkLnYxLlNraWxs",
            "UgV2YWx1ZToCOAEi4AEKEkNvc21ldGljVXNpbmdQcm90bxIcCgliYWNrQmxp",
            "bmcYASABKAVSCWJhY2tCbGluZxIUCgVkYW5jZRgCIAEoBVIFZGFuY2USGgoI",
            "Zmx5Q3JhZnQYAyABKAVSCGZseUNyYWZ0EhwKCWZvb3RwcmludBgEIAEoBVIJ",
            "Zm9vdHByaW50EhIKBGdsb3cYBSABKAVSBGdsb3cSFAoFc3ByYXkYBiABKAVS",
            "BXNwcmF5EhQKBXZvaWNlGAcgASgFUgV2b2ljZRIYCgd2ZWhpY2xlGAggASgF",
            "Ugd2ZWhpY2xlOgIYASJnChNEZWxldGVUaWNrZXRTdWNjZXNzEhoKCHBsYXll",
            "cklkGAEgASgJUghwbGF5ZXJJZBIaCgh0aWNrZXRJZBgCIAEoCVIIdGlja2V0",
            "SWQSGAoHcGFydHlJZBgDIAEoCVIHcGFydHlJZCLVAQoRTWF0Y2hQcm90b1Bh",
            "Y2thZ2USGgoIcGxheWVySWQYASABKAlSCHBsYXllcklkEhgKB3BhcnR5SWQY",
            "BSABKAlSB3BhcnR5SWQSFAoEZGF0YRgCIAEoDEgAUgRkYXRhEk0KD2xpc3RF",
            "cnJvclBsYXllchgDIAEoCzIhLnRoZXRhbi5zaGFyZWQudjEuTGlzdEVycm9y",
            "UGxheWVySABSD2xpc3RFcnJvclBsYXllchIeCgllcnJvckNvZGUYBCABKAVI",
            "AFIJZXJyb3JDb2RlQgUKA3JlcyKlAQoPVGlja2V0RGF0YUNhY2hlEjwKCmlu",
            "R2FtZU1vZGUYASABKA4yHC50aGV0YW4uc2hhcmVkLnYxLkluR2FtZU1vZGVS",
            "CmluR2FtZU1vZGUSGgoIdHJvcGhpZXMYAiABKAVSCHRyb3BoaWVzEhwKCXBs",
            "YXllcklkcxgDIAMoCVIJcGxheWVySWRzEhoKCHRpY2tldElkGAQgASgJUgh0",
            "aWNrZXRJZCJPChFUaWNrZXRDYWNoZVdTT25seRIaCgh0aWNrZXRJRBgBIAEo",
            "CVIIdGlja2V0SUQSHgoKaW5HYW1lTW9kZRgCIAEoBVIKaW5HYW1lTW9kZSLV",
            "AQoPTGlzdEVycm9yUGxheWVyElEKDGVycm9yUGxheWVycxgBIAMoCzItLnRo",
            "ZXRhbi5zaGFyZWQudjEuTGlzdEVycm9yUGxheWVyLkVycm9yUGxheWVyUgxl",
            "cnJvclBsYXllcnMabwoLRXJyb3JQbGF5ZXISFgoGdXNlcklkGAEgASgJUgZ1",
            "c2VySWQSSAoObWF0Y2hFcnJvckNvZGUYAiABKA4yIC50aGV0YW4uc2hhcmVk",
            "LnYxLk1hdGNoRXJyb3JDb2RlUg5tYXRjaEVycm9yQ29kZSKNAQoYTWF0Y2hQ",
            "cm90b1ZlcnNpb25QYWNrYWdlEhoKCHBsYXllcklkGAEgASgJUghwbGF5ZXJJ",
            "ZBIUCgRkYXRhGAIgASgMSABSBGRhdGESHgoJZXJyb3JDb2RlGAMgASgFSABS",
            "CWVycm9yQ29kZRIYCgd2ZXJzaW9uGAQgASgFUgd2ZXJzaW9uQgUKA3JlcyKE",
            "AQoSQ2FuY2VsTWF0Y2hSZXF1ZXN0EhoKCHBsYXllcklkGAEgASgJUghwbGF5",
            "ZXJJZBIaCgh0aWNrZXRJZBgCIAEoCVIIdGlja2V0SWQSFgoGdHJvcGh5GAMg",
            "ASgFUgZ0cm9waHkSHgoKaW5HYW1lTW9kZRgEIAEoBVIKaW5HYW1lTW9kZSLC",
            "AgoOTWF0Y2hFeHRlbnNpb24SIAoLbWluVHJvcGhpZXMYASABKAVSC21pblRy",
            "b3BoaWVzEiAKC21heFRyb3BoaWVzGAIgASgFUgttYXhUcm9waGllcxIeCgpt",
            "aW5QbGF5ZXJzGAMgASgFUgptaW5QbGF5ZXJzEh4KCm1heFBsYXllcnMYBCAB",
            "KAVSCm1heFBsYXllcnMSGAoHbWF4VGVhbRgFIAEoBVIHbWF4VGVhbRIiCgxj",
            "b3VudFBsYXllcnMYBiABKAVSDGNvdW50UGxheWVycxIWCgZudW1Cb3QYByAB",
            "KAVSBm51bUJvdBIkCg1wbGF5ZXJQZXJUZWFtGAggASgFUg1wbGF5ZXJQZXJU",
            "ZWFtEjAKE21hdGNoRm91bmRUaW1lc3RhbXAYCSABKANSE21hdGNoRm91bmRU",
            "aW1lc3RhbXAiLQoNRW1wdHlSZXNwb25zZRIcCgllcnJvckNvZGUYASABKAVS",
            "CWVycm9yQ29kZSJoCgxCb3RzUmVzcG9uc2USHAoJZXJyb3JDb2RlGAEgASgF",
            "UgllcnJvckNvZGUSOgoEYm90cxgCIAMoCzImLnRoZXRhbi5zaGFyZWQudjEu",
            "UGxheWVySW5mb01hdGNoUHJvdG9SBGJvdHMirgEKDkdldEJvdHNSZXF1ZXN0",
            "EhYKBmdhbWVJZBgBIAEoBVIGZ2FtZUlkEhoKCGlzTmV3YmllGAIgASgIUghp",
            "c05ld2JpZRIYCgdudW1iZXJzGAMgASgFUgdudW1iZXJzEh4KCnRyb3BoeVJh",
            "bmsYBCABKAVSCnRyb3BoeVJhbmsSFgoGcmVnaW9uGAUgASgFUgZyZWdpb24S",
            "FgoGYmF0dGxlGAYgASgFUgZiYXR0bGUi8gIKFENvc21ldGljVXNpbmdQcm90",
            "b1YyEmIKDmNvc21ldGljSW5Vc2VkGAEgAygLMjoudGhldGFuLnNoYXJlZC52",
            "MS5Db3NtZXRpY1VzaW5nUHJvdG9WMi5Db3NtZXRpY0luVXNlZEVudHJ5Ug5j",
            "b3NtZXRpY0luVXNlZBJWCgpjdXN0b21pemVkGAIgAygLMjYudGhldGFuLnNo",
            "YXJlZC52MS5Db3NtZXRpY1VzaW5nUHJvdG9WMi5DdXN0b21pemVkRW50cnlS",
            "CmN1c3RvbWl6ZWQaQQoTQ29zbWV0aWNJblVzZWRFbnRyeRIQCgNrZXkYASAB",
            "KAlSA2tleRIUCgV2YWx1ZRgCIAEoA1IFdmFsdWU6AjgBGlsKD0N1c3RvbWl6",
            "ZWRFbnRyeRIQCgNrZXkYASABKAlSA2tleRIyCgV2YWx1ZRgCIAEoCzIcLnRo",
            "ZXRhbi5zaGFyZWQudjEuQ3VzdG9taXplZFIFdmFsdWU6AjgBIssBChlDcmVh",
            "dGVNYXRjaE9uYm9hcmRSZXF1ZXN0EhYKBnVzZXJJRBgBIAEoCVIGdXNlcklE",
            "Ej4KCWxhc3RSb3VuZBgCIAEoCzIbLnRoZXRhbi5zaGFyZWQudjEuUm91bmRT",
            "dGF0SABSCWxhc3RSb3VuZIgBARIoCg9vcGVyYXRpb25TeXN0ZW0YAyABKAlS",
            "D29wZXJhdGlvblN5c3RlbRIeCgphcHBWZXJzaW9uGAQgASgJUgphcHBWZXJz",
            "aW9uQgwKCl9sYXN0Um91bmQizQIKCVJvdW5kU3RhdBIYCgdyb3VuZElkGAEg",
            "ASgFUgdyb3VuZElkEhQKBW1hcElkGAIgASgFUgVtYXBJZBIkCg1tYXBEaWZm",
            "aWN1bHR5GAMgASgFUg1tYXBEaWZmaWN1bHR5EiAKC3RpbWVJblJvdW5kGAQg",
            "ASgCUgt0aW1lSW5Sb3VuZBIkCg1yb3VuZENvbXBsZXRlGAUgASgIUg1yb3Vu",
            "ZENvbXBsZXRlEiwKEWNvbnRyb2xEb3VibGVKdW1wGAYgASgFUhFjb250cm9s",
            "RG91YmxlSnVtcBIsChFjb250cm9sTW92ZUNhbWVyYRgHIAEoBVIRY29udHJv",
            "bE1vdmVDYW1lcmESGgoIcGFzc2VkQ1AYCCABKAVSCHBhc3NlZENQEhQKBW1h",
            "eENQGAkgASgFUgVtYXhDUBIUCgVEZWF0aBgKIAEoBVIFRGVhdGgqlwUKDk1h",
            "dGNoRXJyb3JDb2RlEg0KCU1fU1VDQ0VTUxAAEgsKB01fRVJST1IQYxIjCh9D",
            "QU5OT1RfQ0FOQ0VMX1dIRU5fTk9UX01BVENISU5HEAESFAoQQUxSRUFEWV9N",
            "QVRDSElORxACEiUKIUNBTk5PVF9DQU5DRUxfQkVDQVVTRV9NQVRDSF9GT1VO",
            "RBADEhEKDU1BVENIX0lOVkFMSUQQBBIZChVNQVRDSF9BTFJFQURZX1NUQVJU",
            "RUQQBRIVChFNQVRDSF9BTFJFQURZX0VORBAHEhcKE0ZJTkRfTUFUQ0hfVElN",
            "RV9PVVQQCBIaChZGSU5EX01BVENIX1BBUlRZX0VSUk9SEAkSHQoZUkVBTF9D",
            "QU5DRUxfTUFUQ0hfU1VDQ0VTUxBkEiEKHVVTRVJfSEFWRV9CRUVOX0JBTk5F",
            "RF9GT1JFVkVSEHkSIwofVVNFUl9IQVZFX0JFRU5fQkFOTkVEX0ZJTkRNQVRD",
            "SBB6EhsKF0hFUk9fSVNfT05fTUFSS0VUX1BMQUNFEHsSKwonT05FX09GX1RI",
            "RV9QTEFZRVJTX0RJRF9OT1RfU0VOVF9SRVFVRVNUEHwSMQotQUNDT1VOVF9J",
            "U19DVVJSRU5UTFlfT05MSU5FX09OX0FOT1RIRVJfREVWSUNFEH0SEwoOSEVS",
            "T19OT1RfT1dORVIQwhcSFwoSSEVST19OT1RfQVZBSUxBQkxFEMMXEhUKEFdS",
            "T05HX0hFUk9fTU9ERUwQzhcSFQoQSEVST19SRU5URURfSVRFTRCwGBIVChBI",
            "RVJPX0lTX0ZPUl9SRU5UELQYEhsKFkhFUk9fTUFYX0JBVFRMRV9SRU5URUQQ",
            "tRgSGQoUSEVST19SRVRVUk5JTkdfT1dORVIQtxgqUAoNU2tpbGxUeXBlRW51",
            "bRISCg5TS0lMTFRZUEVfTk9ORRAAEhQKEFNLSUxMVFlQRV9BVFRBQ0sQARIV",
            "ChFTS0lMTFRZUEVfU1VQUE9SVBACKj0KEU1hcERpZmZpY3VsdHlFbnVtEggK",
            "BE5vbmUQABIICgRFYXN5EAESCgoGTWVkaXVtEAISCAoESGFyZBADMsICCgxN",
            "YXRjaFNlcnZpY2USbQoWQ3JlYXRlTWF0Y2hXaXRoVmVyc2lvbhIqLnRoZXRh",
            "bi5zaGFyZWQudjEuTWF0Y2hQcm90b1ZlcnNpb25QYWNrYWdlGiMudGhldGFu",
            "LnNoYXJlZC52MS5NYXRjaFByb3RvUGFja2FnZSIAMAESYgoSUmVnaXN0ZXJN",
            "YXRjaEZvdW5kEiMudGhldGFuLnNoYXJlZC52MS5NYXRjaFByb3RvUGFja2Fn",
            "ZRojLnRoZXRhbi5zaGFyZWQudjEuTWF0Y2hQcm90b1BhY2thZ2UiADABEl8K",
            "EUNhbmNlbE1hdGNoTWFraW5nEiMudGhldGFuLnNoYXJlZC52MS5NYXRjaFBy",
            "b3RvUGFja2FnZRojLnRoZXRhbi5zaGFyZWQudjEuTWF0Y2hQcm90b1BhY2th",
            "Z2UiADLSAQoSTWF0Y2hIYW5kbGVTZXJ2aWNlElwKD0hhbmRsZVBsYXlBZ2Fp",
            "bhImLnRoZXRhbi5zaGFyZWQudjEuRGF0YVBsYXlBZ2FpblN1Y2Nlc3MaHy50",
            "aGV0YW4uc2hhcmVkLnYxLkVtcHR5UmVzcG9uc2UiABJeChJIYW5kbGVEZWxl",
            "dGVUaWNrZXQSJS50aGV0YW4uc2hhcmVkLnYxLkRlbGV0ZVRpY2tldFN1Y2Nl",
            "c3MaHy50aGV0YW4uc2hhcmVkLnYxLkVtcHR5UmVzcG9uc2UiAEK5AQoUY29t",
            "LnRoZXRhbi5zaGFyZWQudjFCCk1hdGNoUHJvdG9QAVozdGhldGFuLWJ1Zi9n",
            "ZW4vZ28vdGhldGFuL3NoYXJlZC92MTt0aGV0YW5fc2hhcmVkX3YxogIDVFNY",
            "qgIQVGhldGFuLlNoYXJlZC5WMcoCEFRoZXRhblxTaGFyZWRcVjHiAhxUaGV0",
            "YW5cU2hhcmVkXFYxXEdQQk1ldGFkYXRh6gISVGhldGFuOjpTaGFyZWQ6OlYx",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Thetan.Shared.V1.GameInfoReflection.Descriptor, global::Thetan.Shared.V1.CustomizedReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Thetan.Shared.V1.MatchErrorCode), typeof(global::Thetan.Shared.V1.SkillTypeEnum), typeof(global::Thetan.Shared.V1.MapDifficultyEnum), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.TicketData), global::Thetan.Shared.V1.TicketData.Parser, new[]{ "PlayerId", "GameMode", "InGameMode", "EventId", "Players", "Regions", "PartyId", "TicketId", "CreateTime", "Group", "TournamentInfo", "Arena", "ModeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.TournamentInfo), global::Thetan.Shared.V1.TournamentInfo.Parser, new[]{ "TournamentID", "TournamentTag", "EnableSpectator", "Maps", "MaxPlayers", "MaxDurationInMatch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.MatchMakingRequestProto), global::Thetan.Shared.V1.MatchMakingRequestProto.Parser, new[]{ "PlayerId", "PartyId", "GameMode", "InGameMode", "Trophies", "Regions", "Players", "IsPlayAgain" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.MatchMakingDataPlayAgain), global::Thetan.Shared.V1.MatchMakingDataPlayAgain.Parser, new[]{ "Players" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.DataPlayAgainSuccess), global::Thetan.Shared.V1.DataPlayAgainSuccess.Parser, new[]{ "TicketId", "TrophyMatching", "Players", "InGameMode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.MatchFoundResponseProto), global::Thetan.Shared.V1.MatchFoundResponseProto.Parser, new[]{ "MatchId", "MatchVersion", "Players", "GameMode", "InGameMode", "BestRegion", "MapIds", "ListMaxPlayerPerRound", "PlayerStat", "IsOnline", "EnableSpectator", "Arena", "Rounds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.Round), global::Thetan.Shared.V1.Round.Parser, new[]{ "MapID", "MapDifficulty", "SkillsData" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.SkillData), global::Thetan.Shared.V1.SkillData.Parser, new[]{ "Skills", "RollLimit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.Skill), global::Thetan.Shared.V1.Skill.Parser, new[]{ "Id", "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.MapSkills), global::Thetan.Shared.V1.MapSkills.Parser, new[]{ "Skills", "RollLimit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.SkillInfo), global::Thetan.Shared.V1.SkillInfo.Parser, new[]{ "SkillID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.PlayerStat), global::Thetan.Shared.V1.PlayerStat.Parser, new[]{ "RoundScoreAll", "RaceScoreAll", "QualifyScoreAll", "PlayerScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.MapDataProto), global::Thetan.Shared.V1.MapDataProto.Parser, new[]{ "MapId", "MapDifficulty", "MapSkills" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.MatchDataBattleLogProto), global::Thetan.Shared.V1.MatchDataBattleLogProto.Parser, new[]{ "TimeEndGame", "Players" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.MatchStartRequestProto), global::Thetan.Shared.V1.MatchStartRequestProto.Parser, new[]{ "BestRegion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.MatchEndRequestProto), global::Thetan.Shared.V1.MatchEndRequestProto.Parser, new[]{ "MatchId", "Players" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.PlayerInfoEndMatchProto), global::Thetan.Shared.V1.PlayerInfoEndMatchProto.Parser, new[]{ "PlayerId", "TeamId", "HasSuperStar", "IsBot", "Score", "Rank", "Collections", "Hero", "Skill1", "Skill2", "Skin", "PlayerName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.MatchDataResponseProto), global::Thetan.Shared.V1.MatchDataResponseProto.Parser, new[]{ "MatchId", "BattleLog", "DataReconnect", "MatchNotStart", "GameMode", "InGameMode" }, new[]{ "DataMatch" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.MatchDataReconnect), global::Thetan.Shared.V1.MatchDataReconnect.Parser, new[]{ "TimeStart", "Region" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.PlayerInfoMatchProto), global::Thetan.Shared.V1.PlayerInfoMatchProto.Parser, new[]{ "PlayerId", "PartyId", "HeroTypeId", "Skill1", "Skill2", "Skin", "Trophies", "HeroLevel", "Skill1Level", "Skill2Level", "Regions", "PlayerName", "AvatarId", "FrameId", "GuildId", "HeroId", "IsSpecialEvent", "BehaviorPoint", "TrophyMatching", "BrainType", "TeamID", "BattleCount", "CosmeticUsing", "NameColorId", "PlayerScore", "MapIDs", "Rank", "CosmeticUsingV2", "RoundPlayed", "Customized", "CountryCode", "GuildName", "Skills", "SelectedSkills" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.SelectedSkillsPerRound), global::Thetan.Shared.V1.SelectedSkillsPerRound.Parser, new[]{ "Selected" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.CosmeticUsingProto), global::Thetan.Shared.V1.CosmeticUsingProto.Parser, new[]{ "BackBling", "Dance", "FlyCraft", "Footprint", "Glow", "Spray", "Voice", "Vehicle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.DeleteTicketSuccess), global::Thetan.Shared.V1.DeleteTicketSuccess.Parser, new[]{ "PlayerId", "TicketId", "PartyId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.MatchProtoPackage), global::Thetan.Shared.V1.MatchProtoPackage.Parser, new[]{ "PlayerId", "PartyId", "Data", "ListErrorPlayer", "ErrorCode" }, new[]{ "Res" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.TicketDataCache), global::Thetan.Shared.V1.TicketDataCache.Parser, new[]{ "InGameMode", "Trophies", "PlayerIds", "TicketId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.TicketCacheWSOnly), global::Thetan.Shared.V1.TicketCacheWSOnly.Parser, new[]{ "TicketID", "InGameMode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.ListErrorPlayer), global::Thetan.Shared.V1.ListErrorPlayer.Parser, new[]{ "ErrorPlayers" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.ListErrorPlayer.Types.ErrorPlayer), global::Thetan.Shared.V1.ListErrorPlayer.Types.ErrorPlayer.Parser, new[]{ "UserId", "MatchErrorCode" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.MatchProtoVersionPackage), global::Thetan.Shared.V1.MatchProtoVersionPackage.Parser, new[]{ "PlayerId", "Data", "ErrorCode", "Version" }, new[]{ "Res" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.CancelMatchRequest), global::Thetan.Shared.V1.CancelMatchRequest.Parser, new[]{ "PlayerId", "TicketId", "Trophy", "InGameMode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.MatchExtension), global::Thetan.Shared.V1.MatchExtension.Parser, new[]{ "MinTrophies", "MaxTrophies", "MinPlayers", "MaxPlayers", "MaxTeam", "CountPlayers", "NumBot", "PlayerPerTeam", "MatchFoundTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.EmptyResponse), global::Thetan.Shared.V1.EmptyResponse.Parser, new[]{ "ErrorCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.BotsResponse), global::Thetan.Shared.V1.BotsResponse.Parser, new[]{ "ErrorCode", "Bots" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.GetBotsRequest), global::Thetan.Shared.V1.GetBotsRequest.Parser, new[]{ "GameId", "IsNewbie", "Numbers", "TrophyRank", "Region", "Battle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.CosmeticUsingProtoV2), global::Thetan.Shared.V1.CosmeticUsingProtoV2.Parser, new[]{ "CosmeticInUsed", "Customized" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.CreateMatchOnboardRequest), global::Thetan.Shared.V1.CreateMatchOnboardRequest.Parser, new[]{ "UserID", "LastRound", "OperationSystem", "AppVersion" }, new[]{ "LastRound" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Shared.V1.RoundStat), global::Thetan.Shared.V1.RoundStat.Parser, new[]{ "RoundId", "MapId", "MapDifficulty", "TimeInRound", "RoundComplete", "ControlDoubleJump", "ControlMoveCamera", "PassedCP", "MaxCP", "Death" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MatchErrorCode {
    [pbr::OriginalName("M_SUCCESS")] MSuccess = 0,
    [pbr::OriginalName("M_ERROR")] MError = 99,
    [pbr::OriginalName("CANNOT_CANCEL_WHEN_NOT_MATCHING")] CannotCancelWhenNotMatching = 1,
    [pbr::OriginalName("ALREADY_MATCHING")] AlreadyMatching = 2,
    [pbr::OriginalName("CANNOT_CANCEL_BECAUSE_MATCH_FOUND")] CannotCancelBecauseMatchFound = 3,
    /// <summary>
    ///match khong ton tai
    /// </summary>
    [pbr::OriginalName("MATCH_INVALID")] MatchInvalid = 4,
    [pbr::OriginalName("MATCH_ALREADY_STARTED")] MatchAlreadyStarted = 5,
    [pbr::OriginalName("MATCH_ALREADY_END")] MatchAlreadyEnd = 7,
    [pbr::OriginalName("FIND_MATCH_TIME_OUT")] FindMatchTimeOut = 8,
    [pbr::OriginalName("FIND_MATCH_PARTY_ERROR")] FindMatchPartyError = 9,
    [pbr::OriginalName("REAL_CANCEL_MATCH_SUCCESS")] RealCancelMatchSuccess = 100,
    [pbr::OriginalName("USER_HAVE_BEEN_BANNED_FOREVER")] UserHaveBeenBannedForever = 121,
    [pbr::OriginalName("USER_HAVE_BEEN_BANNED_FINDMATCH")] UserHaveBeenBannedFindmatch = 122,
    [pbr::OriginalName("HERO_IS_ON_MARKET_PLACE")] HeroIsOnMarketPlace = 123,
    [pbr::OriginalName("ONE_OF_THE_PLAYERS_DID_NOT_SENT_REQUEST")] OneOfThePlayersDidNotSentRequest = 124,
    [pbr::OriginalName("ACCOUNT_IS_CURRENTLY_ONLINE_ON_ANOTHER_DEVICE")] AccountIsCurrentlyOnlineOnAnotherDevice = 125,
    [pbr::OriginalName("HERO_NOT_OWNER")] HeroNotOwner = 3010,
    [pbr::OriginalName("HERO_NOT_AVAILABLE")] HeroNotAvailable = 3011,
    [pbr::OriginalName("WRONG_HERO_MODEL")] WrongHeroModel = 3022,
    [pbr::OriginalName("HERO_RENTED_ITEM")] HeroRentedItem = 3120,
    [pbr::OriginalName("HERO_IS_FOR_RENT")] HeroIsForRent = 3124,
    [pbr::OriginalName("HERO_MAX_BATTLE_RENTED")] HeroMaxBattleRented = 3125,
    [pbr::OriginalName("HERO_RETURNING_OWNER")] HeroReturningOwner = 3127,
  }

  public enum SkillTypeEnum {
    [pbr::OriginalName("SKILLTYPE_NONE")] SkilltypeNone = 0,
    [pbr::OriginalName("SKILLTYPE_ATTACK")] SkilltypeAttack = 1,
    [pbr::OriginalName("SKILLTYPE_SUPPORT")] SkilltypeSupport = 2,
  }

  public enum MapDifficultyEnum {
    [pbr::OriginalName("None")] None = 0,
    [pbr::OriginalName("Easy")] Easy = 1,
    [pbr::OriginalName("Medium")] Medium = 2,
    [pbr::OriginalName("Hard")] Hard = 3,
  }

  #endregion

  #region Messages
  public sealed partial class TicketData : pb::IMessage<TicketData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TicketData> _parser = new pb::MessageParser<TicketData>(() => new TicketData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TicketData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketData(TicketData other) : this() {
      playerId_ = other.playerId_;
      gameMode_ = other.gameMode_;
      inGameMode_ = other.inGameMode_;
      eventId_ = other.eventId_;
      players_ = other.players_.Clone();
      regions_ = other.regions_.Clone();
      partyId_ = other.partyId_;
      ticketId_ = other.ticketId_;
      createTime_ = other.createTime_;
      group_ = other.group_;
      tournamentInfo_ = other.tournamentInfo_ != null ? other.tournamentInfo_.Clone() : null;
      arena_ = other.arena_;
      modeId_ = other.modeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketData Clone() {
      return new TicketData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameMode" field.</summary>
    public const int GameModeFieldNumber = 2;
    private global::Thetan.Shared.V1.GameMode gameMode_ = global::Thetan.Shared.V1.GameMode.Ranked;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.GameMode GameMode {
      get { return gameMode_; }
      set {
        gameMode_ = value;
      }
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 3;
    private global::Thetan.Shared.V1.InGameMode inGameMode_ = global::Thetan.Shared.V1.InGameMode.TeamCollectStar;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.InGameMode InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    /// <summary>Field number for the "eventId" field.</summary>
    public const int EventIdFieldNumber = 4;
    private string eventId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Thetan.Shared.V1.PlayerInfoMatchProto> _repeated_players_codec
        = pb::FieldCodec.ForMessage(42, global::Thetan.Shared.V1.PlayerInfoMatchProto.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoMatchProto> players_ = new pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoMatchProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoMatchProto> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "regions" field.</summary>
    public const int RegionsFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_regions_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> regions_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Regions {
      get { return regions_; }
    }

    /// <summary>Field number for the "partyId" field.</summary>
    public const int PartyIdFieldNumber = 7;
    private string partyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PartyId {
      get { return partyId_; }
      set {
        partyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ticketId" field.</summary>
    public const int TicketIdFieldNumber = 8;
    private string ticketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TicketId {
      get { return ticketId_; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 9;
    private long createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 10;
    private int group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    /// <summary>Field number for the "tournamentInfo" field.</summary>
    public const int TournamentInfoFieldNumber = 11;
    private global::Thetan.Shared.V1.TournamentInfo tournamentInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.TournamentInfo TournamentInfo {
      get { return tournamentInfo_; }
      set {
        tournamentInfo_ = value;
      }
    }

    /// <summary>Field number for the "arena" field.</summary>
    public const int ArenaFieldNumber = 12;
    private global::Thetan.Shared.V1.TRArena arena_ = global::Thetan.Shared.V1.TRArena.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.TRArena Arena {
      get { return arena_; }
      set {
        arena_ = value;
      }
    }

    /// <summary>Field number for the "modeId" field.</summary>
    public const int ModeIdFieldNumber = 13;
    private string modeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModeId {
      get { return modeId_; }
      set {
        modeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TicketData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TicketData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (GameMode != other.GameMode) return false;
      if (InGameMode != other.InGameMode) return false;
      if (EventId != other.EventId) return false;
      if(!players_.Equals(other.players_)) return false;
      if(!regions_.Equals(other.regions_)) return false;
      if (PartyId != other.PartyId) return false;
      if (TicketId != other.TicketId) return false;
      if (CreateTime != other.CreateTime) return false;
      if (Group != other.Group) return false;
      if (!object.Equals(TournamentInfo, other.TournamentInfo)) return false;
      if (Arena != other.Arena) return false;
      if (ModeId != other.ModeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (GameMode != global::Thetan.Shared.V1.GameMode.Ranked) hash ^= GameMode.GetHashCode();
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) hash ^= InGameMode.GetHashCode();
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      hash ^= players_.GetHashCode();
      hash ^= regions_.GetHashCode();
      if (PartyId.Length != 0) hash ^= PartyId.GetHashCode();
      if (TicketId.Length != 0) hash ^= TicketId.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (Group != 0) hash ^= Group.GetHashCode();
      if (tournamentInfo_ != null) hash ^= TournamentInfo.GetHashCode();
      if (Arena != global::Thetan.Shared.V1.TRArena.None) hash ^= Arena.GetHashCode();
      if (ModeId.Length != 0) hash ^= ModeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (GameMode != global::Thetan.Shared.V1.GameMode.Ranked) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        output.WriteRawTag(24);
        output.WriteEnum((int) InGameMode);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EventId);
      }
      players_.WriteTo(output, _repeated_players_codec);
      regions_.WriteTo(output, _repeated_regions_codec);
      if (PartyId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PartyId);
      }
      if (TicketId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TicketId);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(CreateTime);
      }
      if (Group != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Group);
      }
      if (tournamentInfo_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(TournamentInfo);
      }
      if (Arena != global::Thetan.Shared.V1.TRArena.None) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Arena);
      }
      if (ModeId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ModeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (GameMode != global::Thetan.Shared.V1.GameMode.Ranked) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        output.WriteRawTag(24);
        output.WriteEnum((int) InGameMode);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EventId);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      regions_.WriteTo(ref output, _repeated_regions_codec);
      if (PartyId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PartyId);
      }
      if (TicketId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TicketId);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(CreateTime);
      }
      if (Group != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Group);
      }
      if (tournamentInfo_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(TournamentInfo);
      }
      if (Arena != global::Thetan.Shared.V1.TRArena.None) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Arena);
      }
      if (ModeId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ModeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (GameMode != global::Thetan.Shared.V1.GameMode.Ranked) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InGameMode);
      }
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      size += regions_.CalculateSize(_repeated_regions_codec);
      if (PartyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartyId);
      }
      if (TicketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      if (Group != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Group);
      }
      if (tournamentInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TournamentInfo);
      }
      if (Arena != global::Thetan.Shared.V1.TRArena.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Arena);
      }
      if (ModeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TicketData other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.GameMode != global::Thetan.Shared.V1.GameMode.Ranked) {
        GameMode = other.GameMode;
      }
      if (other.InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        InGameMode = other.InGameMode;
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      players_.Add(other.players_);
      regions_.Add(other.regions_);
      if (other.PartyId.Length != 0) {
        PartyId = other.PartyId;
      }
      if (other.TicketId.Length != 0) {
        TicketId = other.TicketId;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.Group != 0) {
        Group = other.Group;
      }
      if (other.tournamentInfo_ != null) {
        if (tournamentInfo_ == null) {
          TournamentInfo = new global::Thetan.Shared.V1.TournamentInfo();
        }
        TournamentInfo.MergeFrom(other.TournamentInfo);
      }
      if (other.Arena != global::Thetan.Shared.V1.TRArena.None) {
        Arena = other.Arena;
      }
      if (other.ModeId.Length != 0) {
        ModeId = other.ModeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 16: {
            GameMode = (global::Thetan.Shared.V1.GameMode) input.ReadEnum();
            break;
          }
          case 24: {
            InGameMode = (global::Thetan.Shared.V1.InGameMode) input.ReadEnum();
            break;
          }
          case 34: {
            EventId = input.ReadString();
            break;
          }
          case 42: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 50:
          case 48: {
            regions_.AddEntriesFrom(input, _repeated_regions_codec);
            break;
          }
          case 58: {
            PartyId = input.ReadString();
            break;
          }
          case 66: {
            TicketId = input.ReadString();
            break;
          }
          case 72: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 80: {
            Group = input.ReadInt32();
            break;
          }
          case 90: {
            if (tournamentInfo_ == null) {
              TournamentInfo = new global::Thetan.Shared.V1.TournamentInfo();
            }
            input.ReadMessage(TournamentInfo);
            break;
          }
          case 96: {
            Arena = (global::Thetan.Shared.V1.TRArena) input.ReadEnum();
            break;
          }
          case 106: {
            ModeId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 16: {
            GameMode = (global::Thetan.Shared.V1.GameMode) input.ReadEnum();
            break;
          }
          case 24: {
            InGameMode = (global::Thetan.Shared.V1.InGameMode) input.ReadEnum();
            break;
          }
          case 34: {
            EventId = input.ReadString();
            break;
          }
          case 42: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 50:
          case 48: {
            regions_.AddEntriesFrom(ref input, _repeated_regions_codec);
            break;
          }
          case 58: {
            PartyId = input.ReadString();
            break;
          }
          case 66: {
            TicketId = input.ReadString();
            break;
          }
          case 72: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 80: {
            Group = input.ReadInt32();
            break;
          }
          case 90: {
            if (tournamentInfo_ == null) {
              TournamentInfo = new global::Thetan.Shared.V1.TournamentInfo();
            }
            input.ReadMessage(TournamentInfo);
            break;
          }
          case 96: {
            Arena = (global::Thetan.Shared.V1.TRArena) input.ReadEnum();
            break;
          }
          case 106: {
            ModeId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TournamentInfo : pb::IMessage<TournamentInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TournamentInfo> _parser = new pb::MessageParser<TournamentInfo>(() => new TournamentInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TournamentInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TournamentInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TournamentInfo(TournamentInfo other) : this() {
      tournamentID_ = other.tournamentID_;
      tournamentTag_ = other.tournamentTag_;
      enableSpectator_ = other.enableSpectator_;
      maps_ = other.maps_.Clone();
      maxPlayers_ = other.maxPlayers_;
      maxDurationInMatch_ = other.maxDurationInMatch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TournamentInfo Clone() {
      return new TournamentInfo(this);
    }

    /// <summary>Field number for the "tournamentID" field.</summary>
    public const int TournamentIDFieldNumber = 1;
    private string tournamentID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TournamentID {
      get { return tournamentID_; }
      set {
        tournamentID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tournamentTag" field.</summary>
    public const int TournamentTagFieldNumber = 2;
    private string tournamentTag_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TournamentTag {
      get { return tournamentTag_; }
      set {
        tournamentTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enableSpectator" field.</summary>
    public const int EnableSpectatorFieldNumber = 3;
    private bool enableSpectator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableSpectator {
      get { return enableSpectator_; }
      set {
        enableSpectator_ = value;
      }
    }

    /// <summary>Field number for the "maps" field.</summary>
    public const int MapsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Thetan.Shared.V1.MapDataProto> _repeated_maps_codec
        = pb::FieldCodec.ForMessage(34, global::Thetan.Shared.V1.MapDataProto.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Shared.V1.MapDataProto> maps_ = new pbc::RepeatedField<global::Thetan.Shared.V1.MapDataProto>();
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Shared.V1.MapDataProto> Maps {
      get { return maps_; }
    }

    /// <summary>Field number for the "maxPlayers" field.</summary>
    public const int MaxPlayersFieldNumber = 5;
    private int maxPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxPlayers {
      get { return maxPlayers_; }
      set {
        maxPlayers_ = value;
      }
    }

    /// <summary>Field number for the "maxDurationInMatch" field.</summary>
    public const int MaxDurationInMatchFieldNumber = 6;
    private int maxDurationInMatch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxDurationInMatch {
      get { return maxDurationInMatch_; }
      set {
        maxDurationInMatch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TournamentInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TournamentInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TournamentID != other.TournamentID) return false;
      if (TournamentTag != other.TournamentTag) return false;
      if (EnableSpectator != other.EnableSpectator) return false;
      if(!maps_.Equals(other.maps_)) return false;
      if (MaxPlayers != other.MaxPlayers) return false;
      if (MaxDurationInMatch != other.MaxDurationInMatch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TournamentID.Length != 0) hash ^= TournamentID.GetHashCode();
      if (TournamentTag.Length != 0) hash ^= TournamentTag.GetHashCode();
      if (EnableSpectator != false) hash ^= EnableSpectator.GetHashCode();
      hash ^= maps_.GetHashCode();
      if (MaxPlayers != 0) hash ^= MaxPlayers.GetHashCode();
      if (MaxDurationInMatch != 0) hash ^= MaxDurationInMatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TournamentID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TournamentID);
      }
      if (TournamentTag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TournamentTag);
      }
      if (EnableSpectator != false) {
        output.WriteRawTag(24);
        output.WriteBool(EnableSpectator);
      }
      maps_.WriteTo(output, _repeated_maps_codec);
      if (MaxPlayers != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxPlayers);
      }
      if (MaxDurationInMatch != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxDurationInMatch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TournamentID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TournamentID);
      }
      if (TournamentTag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TournamentTag);
      }
      if (EnableSpectator != false) {
        output.WriteRawTag(24);
        output.WriteBool(EnableSpectator);
      }
      maps_.WriteTo(ref output, _repeated_maps_codec);
      if (MaxPlayers != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxPlayers);
      }
      if (MaxDurationInMatch != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxDurationInMatch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TournamentID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TournamentID);
      }
      if (TournamentTag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TournamentTag);
      }
      if (EnableSpectator != false) {
        size += 1 + 1;
      }
      size += maps_.CalculateSize(_repeated_maps_codec);
      if (MaxPlayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayers);
      }
      if (MaxDurationInMatch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxDurationInMatch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TournamentInfo other) {
      if (other == null) {
        return;
      }
      if (other.TournamentID.Length != 0) {
        TournamentID = other.TournamentID;
      }
      if (other.TournamentTag.Length != 0) {
        TournamentTag = other.TournamentTag;
      }
      if (other.EnableSpectator != false) {
        EnableSpectator = other.EnableSpectator;
      }
      maps_.Add(other.maps_);
      if (other.MaxPlayers != 0) {
        MaxPlayers = other.MaxPlayers;
      }
      if (other.MaxDurationInMatch != 0) {
        MaxDurationInMatch = other.MaxDurationInMatch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TournamentID = input.ReadString();
            break;
          }
          case 18: {
            TournamentTag = input.ReadString();
            break;
          }
          case 24: {
            EnableSpectator = input.ReadBool();
            break;
          }
          case 34: {
            maps_.AddEntriesFrom(input, _repeated_maps_codec);
            break;
          }
          case 40: {
            MaxPlayers = input.ReadInt32();
            break;
          }
          case 48: {
            MaxDurationInMatch = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TournamentID = input.ReadString();
            break;
          }
          case 18: {
            TournamentTag = input.ReadString();
            break;
          }
          case 24: {
            EnableSpectator = input.ReadBool();
            break;
          }
          case 34: {
            maps_.AddEntriesFrom(ref input, _repeated_maps_codec);
            break;
          }
          case 40: {
            MaxPlayers = input.ReadInt32();
            break;
          }
          case 48: {
            MaxDurationInMatch = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchMakingRequestProto : pb::IMessage<MatchMakingRequestProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchMakingRequestProto> _parser = new pb::MessageParser<MatchMakingRequestProto>(() => new MatchMakingRequestProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchMakingRequestProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchMakingRequestProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchMakingRequestProto(MatchMakingRequestProto other) : this() {
      playerId_ = other.playerId_;
      partyId_ = other.partyId_;
      gameMode_ = other.gameMode_;
      inGameMode_ = other.inGameMode_;
      trophies_ = other.trophies_;
      regions_ = other.regions_.Clone();
      players_ = other.players_.Clone();
      isPlayAgain_ = other.isPlayAgain_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchMakingRequestProto Clone() {
      return new MatchMakingRequestProto(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 4;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partyId" field.</summary>
    public const int PartyIdFieldNumber = 5;
    private string partyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PartyId {
      get { return partyId_; }
      set {
        partyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameMode" field.</summary>
    public const int GameModeFieldNumber = 1;
    private global::Thetan.Shared.V1.GameMode gameMode_ = global::Thetan.Shared.V1.GameMode.Ranked;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.GameMode GameMode {
      get { return gameMode_; }
      set {
        gameMode_ = value;
      }
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 2;
    private global::Thetan.Shared.V1.InGameMode inGameMode_ = global::Thetan.Shared.V1.InGameMode.TeamCollectStar;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.InGameMode InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    /// <summary>Field number for the "trophies" field.</summary>
    public const int TrophiesFieldNumber = 3;
    private int trophies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Trophies {
      get { return trophies_; }
      set {
        trophies_ = value;
      }
    }

    /// <summary>Field number for the "regions" field.</summary>
    public const int RegionsFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_regions_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> regions_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Regions {
      get { return regions_; }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Thetan.Shared.V1.PlayerInfoMatchProto> _repeated_players_codec
        = pb::FieldCodec.ForMessage(58, global::Thetan.Shared.V1.PlayerInfoMatchProto.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoMatchProto> players_ = new pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoMatchProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoMatchProto> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "isPlayAgain" field.</summary>
    public const int IsPlayAgainFieldNumber = 8;
    private bool isPlayAgain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPlayAgain {
      get { return isPlayAgain_; }
      set {
        isPlayAgain_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchMakingRequestProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchMakingRequestProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PartyId != other.PartyId) return false;
      if (GameMode != other.GameMode) return false;
      if (InGameMode != other.InGameMode) return false;
      if (Trophies != other.Trophies) return false;
      if(!regions_.Equals(other.regions_)) return false;
      if(!players_.Equals(other.players_)) return false;
      if (IsPlayAgain != other.IsPlayAgain) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (PartyId.Length != 0) hash ^= PartyId.GetHashCode();
      if (GameMode != global::Thetan.Shared.V1.GameMode.Ranked) hash ^= GameMode.GetHashCode();
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) hash ^= InGameMode.GetHashCode();
      if (Trophies != 0) hash ^= Trophies.GetHashCode();
      hash ^= regions_.GetHashCode();
      hash ^= players_.GetHashCode();
      if (IsPlayAgain != false) hash ^= IsPlayAgain.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameMode != global::Thetan.Shared.V1.GameMode.Ranked) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        output.WriteRawTag(16);
        output.WriteEnum((int) InGameMode);
      }
      if (Trophies != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Trophies);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerId);
      }
      if (PartyId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PartyId);
      }
      regions_.WriteTo(output, _repeated_regions_codec);
      players_.WriteTo(output, _repeated_players_codec);
      if (IsPlayAgain != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsPlayAgain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameMode != global::Thetan.Shared.V1.GameMode.Ranked) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        output.WriteRawTag(16);
        output.WriteEnum((int) InGameMode);
      }
      if (Trophies != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Trophies);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerId);
      }
      if (PartyId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PartyId);
      }
      regions_.WriteTo(ref output, _repeated_regions_codec);
      players_.WriteTo(ref output, _repeated_players_codec);
      if (IsPlayAgain != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsPlayAgain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (PartyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartyId);
      }
      if (GameMode != global::Thetan.Shared.V1.GameMode.Ranked) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InGameMode);
      }
      if (Trophies != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Trophies);
      }
      size += regions_.CalculateSize(_repeated_regions_codec);
      size += players_.CalculateSize(_repeated_players_codec);
      if (IsPlayAgain != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchMakingRequestProto other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PartyId.Length != 0) {
        PartyId = other.PartyId;
      }
      if (other.GameMode != global::Thetan.Shared.V1.GameMode.Ranked) {
        GameMode = other.GameMode;
      }
      if (other.InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        InGameMode = other.InGameMode;
      }
      if (other.Trophies != 0) {
        Trophies = other.Trophies;
      }
      regions_.Add(other.regions_);
      players_.Add(other.players_);
      if (other.IsPlayAgain != false) {
        IsPlayAgain = other.IsPlayAgain;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameMode = (global::Thetan.Shared.V1.GameMode) input.ReadEnum();
            break;
          }
          case 16: {
            InGameMode = (global::Thetan.Shared.V1.InGameMode) input.ReadEnum();
            break;
          }
          case 24: {
            Trophies = input.ReadInt32();
            break;
          }
          case 34: {
            PlayerId = input.ReadString();
            break;
          }
          case 42: {
            PartyId = input.ReadString();
            break;
          }
          case 50:
          case 48: {
            regions_.AddEntriesFrom(input, _repeated_regions_codec);
            break;
          }
          case 58: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 64: {
            IsPlayAgain = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameMode = (global::Thetan.Shared.V1.GameMode) input.ReadEnum();
            break;
          }
          case 16: {
            InGameMode = (global::Thetan.Shared.V1.InGameMode) input.ReadEnum();
            break;
          }
          case 24: {
            Trophies = input.ReadInt32();
            break;
          }
          case 34: {
            PlayerId = input.ReadString();
            break;
          }
          case 42: {
            PartyId = input.ReadString();
            break;
          }
          case 50:
          case 48: {
            regions_.AddEntriesFrom(ref input, _repeated_regions_codec);
            break;
          }
          case 58: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 64: {
            IsPlayAgain = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchMakingDataPlayAgain : pb::IMessage<MatchMakingDataPlayAgain>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchMakingDataPlayAgain> _parser = new pb::MessageParser<MatchMakingDataPlayAgain>(() => new MatchMakingDataPlayAgain());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchMakingDataPlayAgain> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchMakingDataPlayAgain() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchMakingDataPlayAgain(MatchMakingDataPlayAgain other) : this() {
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchMakingDataPlayAgain Clone() {
      return new MatchMakingDataPlayAgain(this);
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Thetan.Shared.V1.PlayerInfoMatchProto> _repeated_players_codec
        = pb::FieldCodec.ForMessage(10, global::Thetan.Shared.V1.PlayerInfoMatchProto.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoMatchProto> players_ = new pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoMatchProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoMatchProto> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchMakingDataPlayAgain);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchMakingDataPlayAgain other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      players_.WriteTo(ref output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchMakingDataPlayAgain other) {
      if (other == null) {
        return;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///khi play again xong thi gui data cho cac thang con lai biet
  /// </summary>
  public sealed partial class DataPlayAgainSuccess : pb::IMessage<DataPlayAgainSuccess>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataPlayAgainSuccess> _parser = new pb::MessageParser<DataPlayAgainSuccess>(() => new DataPlayAgainSuccess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DataPlayAgainSuccess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataPlayAgainSuccess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataPlayAgainSuccess(DataPlayAgainSuccess other) : this() {
      ticketId_ = other.ticketId_;
      trophyMatching_ = other.trophyMatching_;
      players_ = other.players_.Clone();
      inGameMode_ = other.inGameMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataPlayAgainSuccess Clone() {
      return new DataPlayAgainSuccess(this);
    }

    /// <summary>Field number for the "ticketId" field.</summary>
    public const int TicketIdFieldNumber = 1;
    private string ticketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TicketId {
      get { return ticketId_; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trophyMatching" field.</summary>
    public const int TrophyMatchingFieldNumber = 2;
    private int trophyMatching_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrophyMatching {
      get { return trophyMatching_; }
      set {
        trophyMatching_ = value;
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_players_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> players_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 4;
    private global::Thetan.Shared.V1.InGameMode inGameMode_ = global::Thetan.Shared.V1.InGameMode.TeamCollectStar;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.InGameMode InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DataPlayAgainSuccess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DataPlayAgainSuccess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TicketId != other.TicketId) return false;
      if (TrophyMatching != other.TrophyMatching) return false;
      if(!players_.Equals(other.players_)) return false;
      if (InGameMode != other.InGameMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TicketId.Length != 0) hash ^= TicketId.GetHashCode();
      if (TrophyMatching != 0) hash ^= TrophyMatching.GetHashCode();
      hash ^= players_.GetHashCode();
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) hash ^= InGameMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TicketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TicketId);
      }
      if (TrophyMatching != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TrophyMatching);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        output.WriteRawTag(32);
        output.WriteEnum((int) InGameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TicketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TicketId);
      }
      if (TrophyMatching != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TrophyMatching);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        output.WriteRawTag(32);
        output.WriteEnum((int) InGameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TicketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (TrophyMatching != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrophyMatching);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InGameMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DataPlayAgainSuccess other) {
      if (other == null) {
        return;
      }
      if (other.TicketId.Length != 0) {
        TicketId = other.TicketId;
      }
      if (other.TrophyMatching != 0) {
        TrophyMatching = other.TrophyMatching;
      }
      players_.Add(other.players_);
      if (other.InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        InGameMode = other.InGameMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TicketId = input.ReadString();
            break;
          }
          case 16: {
            TrophyMatching = input.ReadInt32();
            break;
          }
          case 26: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 32: {
            InGameMode = (global::Thetan.Shared.V1.InGameMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TicketId = input.ReadString();
            break;
          }
          case 16: {
            TrophyMatching = input.ReadInt32();
            break;
          }
          case 26: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 32: {
            InGameMode = (global::Thetan.Shared.V1.InGameMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchFoundResponseProto : pb::IMessage<MatchFoundResponseProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchFoundResponseProto> _parser = new pb::MessageParser<MatchFoundResponseProto>(() => new MatchFoundResponseProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchFoundResponseProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchFoundResponseProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchFoundResponseProto(MatchFoundResponseProto other) : this() {
      matchId_ = other.matchId_;
      matchVersion_ = other.matchVersion_;
      players_ = other.players_.Clone();
      gameMode_ = other.gameMode_;
      inGameMode_ = other.inGameMode_;
      bestRegion_ = other.bestRegion_;
      mapIds_ = other.mapIds_.Clone();
      listMaxPlayerPerRound_ = other.listMaxPlayerPerRound_.Clone();
      playerStat_ = other.playerStat_ != null ? other.playerStat_.Clone() : null;
      isOnline_ = other.isOnline_;
      enableSpectator_ = other.enableSpectator_;
      arena_ = other.arena_;
      rounds_ = other.rounds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchFoundResponseProto Clone() {
      return new MatchFoundResponseProto(this);
    }

    /// <summary>Field number for the "matchId" field.</summary>
    public const int MatchIdFieldNumber = 1;
    private string matchId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MatchId {
      get { return matchId_; }
      set {
        matchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "matchVersion" field.</summary>
    public const int MatchVersionFieldNumber = 9;
    private string matchVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MatchVersion {
      get { return matchVersion_; }
      set {
        matchVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Thetan.Shared.V1.PlayerInfoMatchProto> _repeated_players_codec
        = pb::FieldCodec.ForMessage(18, global::Thetan.Shared.V1.PlayerInfoMatchProto.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoMatchProto> players_ = new pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoMatchProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoMatchProto> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "gameMode" field.</summary>
    public const int GameModeFieldNumber = 3;
    private global::Thetan.Shared.V1.GameMode gameMode_ = global::Thetan.Shared.V1.GameMode.Ranked;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.GameMode GameMode {
      get { return gameMode_; }
      set {
        gameMode_ = value;
      }
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 4;
    private global::Thetan.Shared.V1.InGameMode inGameMode_ = global::Thetan.Shared.V1.InGameMode.TeamCollectStar;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.InGameMode InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    /// <summary>Field number for the "bestRegion" field.</summary>
    public const int BestRegionFieldNumber = 5;
    private int bestRegion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BestRegion {
      get { return bestRegion_; }
      set {
        bestRegion_ = value;
      }
    }

    /// <summary>Field number for the "mapIds" field.</summary>
    public const int MapIdsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Thetan.Shared.V1.MapDataProto> _repeated_mapIds_codec
        = pb::FieldCodec.ForMessage(50, global::Thetan.Shared.V1.MapDataProto.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Shared.V1.MapDataProto> mapIds_ = new pbc::RepeatedField<global::Thetan.Shared.V1.MapDataProto>();
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Shared.V1.MapDataProto> MapIds {
      get { return mapIds_; }
    }

    /// <summary>Field number for the "ListMaxPlayerPerRound" field.</summary>
    public const int ListMaxPlayerPerRoundFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_listMaxPlayerPerRound_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> listMaxPlayerPerRound_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ListMaxPlayerPerRound {
      get { return listMaxPlayerPerRound_; }
    }

    /// <summary>Field number for the "playerStat" field.</summary>
    public const int PlayerStatFieldNumber = 8;
    private global::Thetan.Shared.V1.PlayerStat playerStat_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.PlayerStat PlayerStat {
      get { return playerStat_; }
      set {
        playerStat_ = value;
      }
    }

    /// <summary>Field number for the "isOnline" field.</summary>
    public const int IsOnlineFieldNumber = 10;
    private bool isOnline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsOnline {
      get { return isOnline_; }
      set {
        isOnline_ = value;
      }
    }

    /// <summary>Field number for the "enableSpectator" field.</summary>
    public const int EnableSpectatorFieldNumber = 11;
    private bool enableSpectator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableSpectator {
      get { return enableSpectator_; }
      set {
        enableSpectator_ = value;
      }
    }

    /// <summary>Field number for the "arena" field.</summary>
    public const int ArenaFieldNumber = 12;
    private global::Thetan.Shared.V1.TRArena arena_ = global::Thetan.Shared.V1.TRArena.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.TRArena Arena {
      get { return arena_; }
      set {
        arena_ = value;
      }
    }

    /// <summary>Field number for the "rounds" field.</summary>
    public const int RoundsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Thetan.Shared.V1.Round> _repeated_rounds_codec
        = pb::FieldCodec.ForMessage(106, global::Thetan.Shared.V1.Round.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Shared.V1.Round> rounds_ = new pbc::RepeatedField<global::Thetan.Shared.V1.Round>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Shared.V1.Round> Rounds {
      get { return rounds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchFoundResponseProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchFoundResponseProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchId != other.MatchId) return false;
      if (MatchVersion != other.MatchVersion) return false;
      if(!players_.Equals(other.players_)) return false;
      if (GameMode != other.GameMode) return false;
      if (InGameMode != other.InGameMode) return false;
      if (BestRegion != other.BestRegion) return false;
      if(!mapIds_.Equals(other.mapIds_)) return false;
      if(!listMaxPlayerPerRound_.Equals(other.listMaxPlayerPerRound_)) return false;
      if (!object.Equals(PlayerStat, other.PlayerStat)) return false;
      if (IsOnline != other.IsOnline) return false;
      if (EnableSpectator != other.EnableSpectator) return false;
      if (Arena != other.Arena) return false;
      if(!rounds_.Equals(other.rounds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchId.Length != 0) hash ^= MatchId.GetHashCode();
      if (MatchVersion.Length != 0) hash ^= MatchVersion.GetHashCode();
      hash ^= players_.GetHashCode();
      if (GameMode != global::Thetan.Shared.V1.GameMode.Ranked) hash ^= GameMode.GetHashCode();
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) hash ^= InGameMode.GetHashCode();
      if (BestRegion != 0) hash ^= BestRegion.GetHashCode();
      hash ^= mapIds_.GetHashCode();
      hash ^= listMaxPlayerPerRound_.GetHashCode();
      if (playerStat_ != null) hash ^= PlayerStat.GetHashCode();
      if (IsOnline != false) hash ^= IsOnline.GetHashCode();
      if (EnableSpectator != false) hash ^= EnableSpectator.GetHashCode();
      if (Arena != global::Thetan.Shared.V1.TRArena.None) hash ^= Arena.GetHashCode();
      hash ^= rounds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (GameMode != global::Thetan.Shared.V1.GameMode.Ranked) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        output.WriteRawTag(32);
        output.WriteEnum((int) InGameMode);
      }
      if (BestRegion != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BestRegion);
      }
      mapIds_.WriteTo(output, _repeated_mapIds_codec);
      listMaxPlayerPerRound_.WriteTo(output, _repeated_listMaxPlayerPerRound_codec);
      if (playerStat_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PlayerStat);
      }
      if (MatchVersion.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MatchVersion);
      }
      if (IsOnline != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsOnline);
      }
      if (EnableSpectator != false) {
        output.WriteRawTag(88);
        output.WriteBool(EnableSpectator);
      }
      if (Arena != global::Thetan.Shared.V1.TRArena.None) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Arena);
      }
      rounds_.WriteTo(output, _repeated_rounds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      if (GameMode != global::Thetan.Shared.V1.GameMode.Ranked) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        output.WriteRawTag(32);
        output.WriteEnum((int) InGameMode);
      }
      if (BestRegion != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BestRegion);
      }
      mapIds_.WriteTo(ref output, _repeated_mapIds_codec);
      listMaxPlayerPerRound_.WriteTo(ref output, _repeated_listMaxPlayerPerRound_codec);
      if (playerStat_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PlayerStat);
      }
      if (MatchVersion.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MatchVersion);
      }
      if (IsOnline != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsOnline);
      }
      if (EnableSpectator != false) {
        output.WriteRawTag(88);
        output.WriteBool(EnableSpectator);
      }
      if (Arena != global::Thetan.Shared.V1.TRArena.None) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Arena);
      }
      rounds_.WriteTo(ref output, _repeated_rounds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MatchId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchId);
      }
      if (MatchVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchVersion);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (GameMode != global::Thetan.Shared.V1.GameMode.Ranked) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InGameMode);
      }
      if (BestRegion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BestRegion);
      }
      size += mapIds_.CalculateSize(_repeated_mapIds_codec);
      size += listMaxPlayerPerRound_.CalculateSize(_repeated_listMaxPlayerPerRound_codec);
      if (playerStat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerStat);
      }
      if (IsOnline != false) {
        size += 1 + 1;
      }
      if (EnableSpectator != false) {
        size += 1 + 1;
      }
      if (Arena != global::Thetan.Shared.V1.TRArena.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Arena);
      }
      size += rounds_.CalculateSize(_repeated_rounds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchFoundResponseProto other) {
      if (other == null) {
        return;
      }
      if (other.MatchId.Length != 0) {
        MatchId = other.MatchId;
      }
      if (other.MatchVersion.Length != 0) {
        MatchVersion = other.MatchVersion;
      }
      players_.Add(other.players_);
      if (other.GameMode != global::Thetan.Shared.V1.GameMode.Ranked) {
        GameMode = other.GameMode;
      }
      if (other.InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        InGameMode = other.InGameMode;
      }
      if (other.BestRegion != 0) {
        BestRegion = other.BestRegion;
      }
      mapIds_.Add(other.mapIds_);
      listMaxPlayerPerRound_.Add(other.listMaxPlayerPerRound_);
      if (other.playerStat_ != null) {
        if (playerStat_ == null) {
          PlayerStat = new global::Thetan.Shared.V1.PlayerStat();
        }
        PlayerStat.MergeFrom(other.PlayerStat);
      }
      if (other.IsOnline != false) {
        IsOnline = other.IsOnline;
      }
      if (other.EnableSpectator != false) {
        EnableSpectator = other.EnableSpectator;
      }
      if (other.Arena != global::Thetan.Shared.V1.TRArena.None) {
        Arena = other.Arena;
      }
      rounds_.Add(other.rounds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 24: {
            GameMode = (global::Thetan.Shared.V1.GameMode) input.ReadEnum();
            break;
          }
          case 32: {
            InGameMode = (global::Thetan.Shared.V1.InGameMode) input.ReadEnum();
            break;
          }
          case 40: {
            BestRegion = input.ReadInt32();
            break;
          }
          case 50: {
            mapIds_.AddEntriesFrom(input, _repeated_mapIds_codec);
            break;
          }
          case 58:
          case 56: {
            listMaxPlayerPerRound_.AddEntriesFrom(input, _repeated_listMaxPlayerPerRound_codec);
            break;
          }
          case 66: {
            if (playerStat_ == null) {
              PlayerStat = new global::Thetan.Shared.V1.PlayerStat();
            }
            input.ReadMessage(PlayerStat);
            break;
          }
          case 74: {
            MatchVersion = input.ReadString();
            break;
          }
          case 80: {
            IsOnline = input.ReadBool();
            break;
          }
          case 88: {
            EnableSpectator = input.ReadBool();
            break;
          }
          case 96: {
            Arena = (global::Thetan.Shared.V1.TRArena) input.ReadEnum();
            break;
          }
          case 106: {
            rounds_.AddEntriesFrom(input, _repeated_rounds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 24: {
            GameMode = (global::Thetan.Shared.V1.GameMode) input.ReadEnum();
            break;
          }
          case 32: {
            InGameMode = (global::Thetan.Shared.V1.InGameMode) input.ReadEnum();
            break;
          }
          case 40: {
            BestRegion = input.ReadInt32();
            break;
          }
          case 50: {
            mapIds_.AddEntriesFrom(ref input, _repeated_mapIds_codec);
            break;
          }
          case 58:
          case 56: {
            listMaxPlayerPerRound_.AddEntriesFrom(ref input, _repeated_listMaxPlayerPerRound_codec);
            break;
          }
          case 66: {
            if (playerStat_ == null) {
              PlayerStat = new global::Thetan.Shared.V1.PlayerStat();
            }
            input.ReadMessage(PlayerStat);
            break;
          }
          case 74: {
            MatchVersion = input.ReadString();
            break;
          }
          case 80: {
            IsOnline = input.ReadBool();
            break;
          }
          case 88: {
            EnableSpectator = input.ReadBool();
            break;
          }
          case 96: {
            Arena = (global::Thetan.Shared.V1.TRArena) input.ReadEnum();
            break;
          }
          case 106: {
            rounds_.AddEntriesFrom(ref input, _repeated_rounds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Round : pb::IMessage<Round>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Round> _parser = new pb::MessageParser<Round>(() => new Round());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Round> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Round() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Round(Round other) : this() {
      mapID_ = other.mapID_;
      mapDifficulty_ = other.mapDifficulty_;
      skillsData_ = other.skillsData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Round Clone() {
      return new Round(this);
    }

    /// <summary>Field number for the "mapID" field.</summary>
    public const int MapIDFieldNumber = 1;
    private int mapID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapID {
      get { return mapID_; }
      set {
        mapID_ = value;
      }
    }

    /// <summary>Field number for the "mapDifficulty" field.</summary>
    public const int MapDifficultyFieldNumber = 2;
    private global::Thetan.Shared.V1.MapDifficultyEnum mapDifficulty_ = global::Thetan.Shared.V1.MapDifficultyEnum.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.MapDifficultyEnum MapDifficulty {
      get { return mapDifficulty_; }
      set {
        mapDifficulty_ = value;
      }
    }

    /// <summary>Field number for the "skillsData" field.</summary>
    public const int SkillsDataFieldNumber = 12;
    private static readonly pbc::MapField<int, global::Thetan.Shared.V1.SkillData>.Codec _map_skillsData_codec
        = new pbc::MapField<int, global::Thetan.Shared.V1.SkillData>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Thetan.Shared.V1.SkillData.Parser), 98);
    private readonly pbc::MapField<int, global::Thetan.Shared.V1.SkillData> skillsData_ = new pbc::MapField<int, global::Thetan.Shared.V1.SkillData>();
    /// <summary>
    /// &lt;SkillTypeEnum, SkillData>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::Thetan.Shared.V1.SkillData> SkillsData {
      get { return skillsData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Round);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Round other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapID != other.MapID) return false;
      if (MapDifficulty != other.MapDifficulty) return false;
      if (!SkillsData.Equals(other.SkillsData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MapID != 0) hash ^= MapID.GetHashCode();
      if (MapDifficulty != global::Thetan.Shared.V1.MapDifficultyEnum.None) hash ^= MapDifficulty.GetHashCode();
      hash ^= SkillsData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MapID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapID);
      }
      if (MapDifficulty != global::Thetan.Shared.V1.MapDifficultyEnum.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MapDifficulty);
      }
      skillsData_.WriteTo(output, _map_skillsData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MapID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapID);
      }
      if (MapDifficulty != global::Thetan.Shared.V1.MapDifficultyEnum.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MapDifficulty);
      }
      skillsData_.WriteTo(ref output, _map_skillsData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MapID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapID);
      }
      if (MapDifficulty != global::Thetan.Shared.V1.MapDifficultyEnum.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MapDifficulty);
      }
      size += skillsData_.CalculateSize(_map_skillsData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Round other) {
      if (other == null) {
        return;
      }
      if (other.MapID != 0) {
        MapID = other.MapID;
      }
      if (other.MapDifficulty != global::Thetan.Shared.V1.MapDifficultyEnum.None) {
        MapDifficulty = other.MapDifficulty;
      }
      skillsData_.Add(other.skillsData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapID = input.ReadInt32();
            break;
          }
          case 16: {
            MapDifficulty = (global::Thetan.Shared.V1.MapDifficultyEnum) input.ReadEnum();
            break;
          }
          case 98: {
            skillsData_.AddEntriesFrom(input, _map_skillsData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapID = input.ReadInt32();
            break;
          }
          case 16: {
            MapDifficulty = (global::Thetan.Shared.V1.MapDifficultyEnum) input.ReadEnum();
            break;
          }
          case 98: {
            skillsData_.AddEntriesFrom(ref input, _map_skillsData_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SkillData : pb::IMessage<SkillData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkillData> _parser = new pb::MessageParser<SkillData>(() => new SkillData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SkillData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillData(SkillData other) : this() {
      skills_ = other.skills_.Clone();
      rollLimit_ = other.rollLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillData Clone() {
      return new SkillData(this);
    }

    /// <summary>Field number for the "skills" field.</summary>
    public const int SkillsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Thetan.Shared.V1.Skill> _repeated_skills_codec
        = pb::FieldCodec.ForMessage(10, global::Thetan.Shared.V1.Skill.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Shared.V1.Skill> skills_ = new pbc::RepeatedField<global::Thetan.Shared.V1.Skill>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Shared.V1.Skill> Skills {
      get { return skills_; }
    }

    /// <summary>Field number for the "rollLimit" field.</summary>
    public const int RollLimitFieldNumber = 2;
    private int rollLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RollLimit {
      get { return rollLimit_; }
      set {
        rollLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SkillData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SkillData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!skills_.Equals(other.skills_)) return false;
      if (RollLimit != other.RollLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= skills_.GetHashCode();
      if (RollLimit != 0) hash ^= RollLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      skills_.WriteTo(output, _repeated_skills_codec);
      if (RollLimit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RollLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      skills_.WriteTo(ref output, _repeated_skills_codec);
      if (RollLimit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RollLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += skills_.CalculateSize(_repeated_skills_codec);
      if (RollLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RollLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SkillData other) {
      if (other == null) {
        return;
      }
      skills_.Add(other.skills_);
      if (other.RollLimit != 0) {
        RollLimit = other.RollLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            skills_.AddEntriesFrom(input, _repeated_skills_codec);
            break;
          }
          case 16: {
            RollLimit = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            skills_.AddEntriesFrom(ref input, _repeated_skills_codec);
            break;
          }
          case 16: {
            RollLimit = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Skill : pb::IMessage<Skill>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Skill> _parser = new pb::MessageParser<Skill>(() => new Skill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Skill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill(Skill other) : this() {
      id_ = other.id_;
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill Clone() {
      return new Skill(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Skill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Skill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Skill other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.ObsoleteAttribute]
  public sealed partial class MapSkills : pb::IMessage<MapSkills>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapSkills> _parser = new pb::MessageParser<MapSkills>(() => new MapSkills());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MapSkills> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapSkills() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapSkills(MapSkills other) : this() {
      skills_ = other.skills_.Clone();
      rollLimit_ = other.rollLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapSkills Clone() {
      return new MapSkills(this);
    }

    /// <summary>Field number for the "skills" field.</summary>
    public const int SkillsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Thetan.Shared.V1.SkillInfo> _repeated_skills_codec
        = pb::FieldCodec.ForMessage(10, global::Thetan.Shared.V1.SkillInfo.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Shared.V1.SkillInfo> skills_ = new pbc::RepeatedField<global::Thetan.Shared.V1.SkillInfo>();
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Shared.V1.SkillInfo> Skills {
      get { return skills_; }
    }

    /// <summary>Field number for the "rollLimit" field.</summary>
    public const int RollLimitFieldNumber = 2;
    private int rollLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RollLimit {
      get { return rollLimit_; }
      set {
        rollLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MapSkills);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MapSkills other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!skills_.Equals(other.skills_)) return false;
      if (RollLimit != other.RollLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= skills_.GetHashCode();
      if (RollLimit != 0) hash ^= RollLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      skills_.WriteTo(output, _repeated_skills_codec);
      if (RollLimit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RollLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      skills_.WriteTo(ref output, _repeated_skills_codec);
      if (RollLimit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RollLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += skills_.CalculateSize(_repeated_skills_codec);
      if (RollLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RollLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MapSkills other) {
      if (other == null) {
        return;
      }
      skills_.Add(other.skills_);
      if (other.RollLimit != 0) {
        RollLimit = other.RollLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            skills_.AddEntriesFrom(input, _repeated_skills_codec);
            break;
          }
          case 16: {
            RollLimit = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            skills_.AddEntriesFrom(ref input, _repeated_skills_codec);
            break;
          }
          case 16: {
            RollLimit = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.ObsoleteAttribute]
  public sealed partial class SkillInfo : pb::IMessage<SkillInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkillInfo> _parser = new pb::MessageParser<SkillInfo>(() => new SkillInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SkillInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillInfo(SkillInfo other) : this() {
      skillID_ = other.skillID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillInfo Clone() {
      return new SkillInfo(this);
    }

    /// <summary>Field number for the "skillID" field.</summary>
    public const int SkillIDFieldNumber = 1;
    private int skillID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkillID {
      get { return skillID_; }
      set {
        skillID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SkillInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SkillInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SkillID != other.SkillID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SkillID != 0) hash ^= SkillID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SkillID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SkillID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SkillID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SkillID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SkillID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SkillInfo other) {
      if (other == null) {
        return;
      }
      if (other.SkillID != 0) {
        SkillID = other.SkillID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SkillID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SkillID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.ObsoleteAttribute]
  public sealed partial class PlayerStat : pb::IMessage<PlayerStat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerStat> _parser = new pb::MessageParser<PlayerStat>(() => new PlayerStat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerStat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerStat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerStat(PlayerStat other) : this() {
      roundScoreAll_ = other.roundScoreAll_;
      raceScoreAll_ = other.raceScoreAll_;
      qualifyScoreAll_ = other.qualifyScoreAll_;
      playerScore_ = other.playerScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerStat Clone() {
      return new PlayerStat(this);
    }

    /// <summary>Field number for the "roundScoreAll" field.</summary>
    public const int RoundScoreAllFieldNumber = 1;
    private int roundScoreAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoundScoreAll {
      get { return roundScoreAll_; }
      set {
        roundScoreAll_ = value;
      }
    }

    /// <summary>Field number for the "raceScoreAll" field.</summary>
    public const int RaceScoreAllFieldNumber = 2;
    private float raceScoreAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RaceScoreAll {
      get { return raceScoreAll_; }
      set {
        raceScoreAll_ = value;
      }
    }

    /// <summary>Field number for the "qualifyScoreAll" field.</summary>
    public const int QualifyScoreAllFieldNumber = 3;
    private int qualifyScoreAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int QualifyScoreAll {
      get { return qualifyScoreAll_; }
      set {
        qualifyScoreAll_ = value;
      }
    }

    /// <summary>Field number for the "playerScore" field.</summary>
    public const int PlayerScoreFieldNumber = 4;
    private float playerScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PlayerScore {
      get { return playerScore_; }
      set {
        playerScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerStat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerStat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoundScoreAll != other.RoundScoreAll) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RaceScoreAll, other.RaceScoreAll)) return false;
      if (QualifyScoreAll != other.QualifyScoreAll) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PlayerScore, other.PlayerScore)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoundScoreAll != 0) hash ^= RoundScoreAll.GetHashCode();
      if (RaceScoreAll != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RaceScoreAll);
      if (QualifyScoreAll != 0) hash ^= QualifyScoreAll.GetHashCode();
      if (PlayerScore != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PlayerScore);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoundScoreAll != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoundScoreAll);
      }
      if (RaceScoreAll != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(RaceScoreAll);
      }
      if (QualifyScoreAll != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(QualifyScoreAll);
      }
      if (PlayerScore != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PlayerScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoundScoreAll != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoundScoreAll);
      }
      if (RaceScoreAll != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(RaceScoreAll);
      }
      if (QualifyScoreAll != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(QualifyScoreAll);
      }
      if (PlayerScore != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PlayerScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoundScoreAll != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoundScoreAll);
      }
      if (RaceScoreAll != 0F) {
        size += 1 + 4;
      }
      if (QualifyScoreAll != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QualifyScoreAll);
      }
      if (PlayerScore != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerStat other) {
      if (other == null) {
        return;
      }
      if (other.RoundScoreAll != 0) {
        RoundScoreAll = other.RoundScoreAll;
      }
      if (other.RaceScoreAll != 0F) {
        RaceScoreAll = other.RaceScoreAll;
      }
      if (other.QualifyScoreAll != 0) {
        QualifyScoreAll = other.QualifyScoreAll;
      }
      if (other.PlayerScore != 0F) {
        PlayerScore = other.PlayerScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoundScoreAll = input.ReadInt32();
            break;
          }
          case 21: {
            RaceScoreAll = input.ReadFloat();
            break;
          }
          case 24: {
            QualifyScoreAll = input.ReadInt32();
            break;
          }
          case 37: {
            PlayerScore = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoundScoreAll = input.ReadInt32();
            break;
          }
          case 21: {
            RaceScoreAll = input.ReadFloat();
            break;
          }
          case 24: {
            QualifyScoreAll = input.ReadInt32();
            break;
          }
          case 37: {
            PlayerScore = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.ObsoleteAttribute]
  public sealed partial class MapDataProto : pb::IMessage<MapDataProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapDataProto> _parser = new pb::MessageParser<MapDataProto>(() => new MapDataProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MapDataProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapDataProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapDataProto(MapDataProto other) : this() {
      mapId_ = other.mapId_;
      mapDifficulty_ = other.mapDifficulty_;
      mapSkills_ = other.mapSkills_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapDataProto Clone() {
      return new MapDataProto(this);
    }

    /// <summary>Field number for the "mapId" field.</summary>
    public const int MapIdFieldNumber = 1;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "mapDifficulty" field.</summary>
    public const int MapDifficultyFieldNumber = 2;
    private global::Thetan.Shared.V1.MapDifficultyEnum mapDifficulty_ = global::Thetan.Shared.V1.MapDifficultyEnum.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.MapDifficultyEnum MapDifficulty {
      get { return mapDifficulty_; }
      set {
        mapDifficulty_ = value;
      }
    }

    /// <summary>Field number for the "mapSkills" field.</summary>
    public const int MapSkillsFieldNumber = 12;
    private static readonly pbc::MapField<int, global::Thetan.Shared.V1.MapSkills>.Codec _map_mapSkills_codec
        = new pbc::MapField<int, global::Thetan.Shared.V1.MapSkills>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Thetan.Shared.V1.MapSkills.Parser), 98);
    private readonly pbc::MapField<int, global::Thetan.Shared.V1.MapSkills> mapSkills_ = new pbc::MapField<int, global::Thetan.Shared.V1.MapSkills>();
    /// <summary>
    /// key: SkillTypeEnum
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::Thetan.Shared.V1.MapSkills> MapSkills {
      get { return mapSkills_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MapDataProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MapDataProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (MapDifficulty != other.MapDifficulty) return false;
      if (!MapSkills.Equals(other.MapSkills)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (MapDifficulty != global::Thetan.Shared.V1.MapDifficultyEnum.None) hash ^= MapDifficulty.GetHashCode();
      hash ^= MapSkills.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapId);
      }
      if (MapDifficulty != global::Thetan.Shared.V1.MapDifficultyEnum.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MapDifficulty);
      }
      mapSkills_.WriteTo(output, _map_mapSkills_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapId);
      }
      if (MapDifficulty != global::Thetan.Shared.V1.MapDifficultyEnum.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MapDifficulty);
      }
      mapSkills_.WriteTo(ref output, _map_mapSkills_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (MapDifficulty != global::Thetan.Shared.V1.MapDifficultyEnum.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MapDifficulty);
      }
      size += mapSkills_.CalculateSize(_map_mapSkills_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MapDataProto other) {
      if (other == null) {
        return;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.MapDifficulty != global::Thetan.Shared.V1.MapDifficultyEnum.None) {
        MapDifficulty = other.MapDifficulty;
      }
      mapSkills_.Add(other.mapSkills_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapId = input.ReadInt32();
            break;
          }
          case 16: {
            MapDifficulty = (global::Thetan.Shared.V1.MapDifficultyEnum) input.ReadEnum();
            break;
          }
          case 98: {
            mapSkills_.AddEntriesFrom(input, _map_mapSkills_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapId = input.ReadInt32();
            break;
          }
          case 16: {
            MapDifficulty = (global::Thetan.Shared.V1.MapDifficultyEnum) input.ReadEnum();
            break;
          }
          case 98: {
            mapSkills_.AddEntriesFrom(ref input, _map_mapSkills_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchDataBattleLogProto : pb::IMessage<MatchDataBattleLogProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchDataBattleLogProto> _parser = new pb::MessageParser<MatchDataBattleLogProto>(() => new MatchDataBattleLogProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchDataBattleLogProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataBattleLogProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataBattleLogProto(MatchDataBattleLogProto other) : this() {
      timeEndGame_ = other.timeEndGame_;
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataBattleLogProto Clone() {
      return new MatchDataBattleLogProto(this);
    }

    /// <summary>Field number for the "timeEndGame" field.</summary>
    public const int TimeEndGameFieldNumber = 1;
    private int timeEndGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TimeEndGame {
      get { return timeEndGame_; }
      set {
        timeEndGame_ = value;
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Thetan.Shared.V1.PlayerInfoEndMatchProto> _repeated_players_codec
        = pb::FieldCodec.ForMessage(18, global::Thetan.Shared.V1.PlayerInfoEndMatchProto.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoEndMatchProto> players_ = new pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoEndMatchProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoEndMatchProto> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchDataBattleLogProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchDataBattleLogProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeEndGame != other.TimeEndGame) return false;
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeEndGame != 0) hash ^= TimeEndGame.GetHashCode();
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TimeEndGame != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TimeEndGame);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TimeEndGame != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TimeEndGame);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TimeEndGame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeEndGame);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchDataBattleLogProto other) {
      if (other == null) {
        return;
      }
      if (other.TimeEndGame != 0) {
        TimeEndGame = other.TimeEndGame;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimeEndGame = input.ReadInt32();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TimeEndGame = input.ReadInt32();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchStartRequestProto : pb::IMessage<MatchStartRequestProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchStartRequestProto> _parser = new pb::MessageParser<MatchStartRequestProto>(() => new MatchStartRequestProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchStartRequestProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchStartRequestProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchStartRequestProto(MatchStartRequestProto other) : this() {
      bestRegion_ = other.bestRegion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchStartRequestProto Clone() {
      return new MatchStartRequestProto(this);
    }

    /// <summary>Field number for the "bestRegion" field.</summary>
    public const int BestRegionFieldNumber = 1;
    private int bestRegion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BestRegion {
      get { return bestRegion_; }
      set {
        bestRegion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchStartRequestProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchStartRequestProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BestRegion != other.BestRegion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BestRegion != 0) hash ^= BestRegion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BestRegion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BestRegion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BestRegion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BestRegion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BestRegion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BestRegion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchStartRequestProto other) {
      if (other == null) {
        return;
      }
      if (other.BestRegion != 0) {
        BestRegion = other.BestRegion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BestRegion = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BestRegion = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchEndRequestProto : pb::IMessage<MatchEndRequestProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchEndRequestProto> _parser = new pb::MessageParser<MatchEndRequestProto>(() => new MatchEndRequestProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchEndRequestProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchEndRequestProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchEndRequestProto(MatchEndRequestProto other) : this() {
      matchId_ = other.matchId_;
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchEndRequestProto Clone() {
      return new MatchEndRequestProto(this);
    }

    /// <summary>Field number for the "matchId" field.</summary>
    public const int MatchIdFieldNumber = 1;
    private string matchId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MatchId {
      get { return matchId_; }
      set {
        matchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Thetan.Shared.V1.PlayerInfoEndMatchProto> _repeated_players_codec
        = pb::FieldCodec.ForMessage(18, global::Thetan.Shared.V1.PlayerInfoEndMatchProto.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoEndMatchProto> players_ = new pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoEndMatchProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoEndMatchProto> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchEndRequestProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchEndRequestProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchId != other.MatchId) return false;
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchId.Length != 0) hash ^= MatchId.GetHashCode();
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MatchId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchId);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchEndRequestProto other) {
      if (other == null) {
        return;
      }
      if (other.MatchId.Length != 0) {
        MatchId = other.MatchId;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerInfoEndMatchProto : pb::IMessage<PlayerInfoEndMatchProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerInfoEndMatchProto> _parser = new pb::MessageParser<PlayerInfoEndMatchProto>(() => new PlayerInfoEndMatchProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerInfoEndMatchProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInfoEndMatchProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInfoEndMatchProto(PlayerInfoEndMatchProto other) : this() {
      playerId_ = other.playerId_;
      teamId_ = other.teamId_;
      hasSuperStar_ = other.hasSuperStar_;
      isBot_ = other.isBot_;
      score_ = other.score_;
      rank_ = other.rank_;
      collections_ = other.collections_.Clone();
      hero_ = other.hero_;
      skill1_ = other.skill1_;
      skill2_ = other.skill2_;
      skin_ = other.skin_;
      playerName_ = other.playerName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInfoEndMatchProto Clone() {
      return new PlayerInfoEndMatchProto(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "teamId" field.</summary>
    public const int TeamIdFieldNumber = 2;
    private int teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TeamId {
      get { return teamId_; }
      set {
        teamId_ = value;
      }
    }

    /// <summary>Field number for the "hasSuperStar" field.</summary>
    public const int HasSuperStarFieldNumber = 3;
    private bool hasSuperStar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperStar {
      get { return hasSuperStar_; }
      set {
        hasSuperStar_ = value;
      }
    }

    /// <summary>Field number for the "isBot" field.</summary>
    public const int IsBotFieldNumber = 4;
    private bool isBot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBot {
      get { return isBot_; }
      set {
        isBot_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 5;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 6;
    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "collections" field.</summary>
    public const int CollectionsFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_collections_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> collections_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///MVP - team MVP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Collections {
      get { return collections_; }
    }

    /// <summary>Field number for the "hero" field.</summary>
    public const int HeroFieldNumber = 8;
    private int hero_;
    /// <summary>
    ///for battle log
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Hero {
      get { return hero_; }
      set {
        hero_ = value;
      }
    }

    /// <summary>Field number for the "skill1" field.</summary>
    public const int Skill1FieldNumber = 9;
    private int skill1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skill1 {
      get { return skill1_; }
      set {
        skill1_ = value;
      }
    }

    /// <summary>Field number for the "skill2" field.</summary>
    public const int Skill2FieldNumber = 10;
    private int skill2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skill2 {
      get { return skill2_; }
      set {
        skill2_ = value;
      }
    }

    /// <summary>Field number for the "skin" field.</summary>
    public const int SkinFieldNumber = 11;
    private int skin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skin {
      get { return skin_; }
      set {
        skin_ = value;
      }
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 12;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfoEndMatchProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerInfoEndMatchProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (TeamId != other.TeamId) return false;
      if (HasSuperStar != other.HasSuperStar) return false;
      if (IsBot != other.IsBot) return false;
      if (Score != other.Score) return false;
      if (Rank != other.Rank) return false;
      if(!collections_.Equals(other.collections_)) return false;
      if (Hero != other.Hero) return false;
      if (Skill1 != other.Skill1) return false;
      if (Skill2 != other.Skill2) return false;
      if (Skin != other.Skin) return false;
      if (PlayerName != other.PlayerName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (TeamId != 0) hash ^= TeamId.GetHashCode();
      if (HasSuperStar != false) hash ^= HasSuperStar.GetHashCode();
      if (IsBot != false) hash ^= IsBot.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (Rank != 0) hash ^= Rank.GetHashCode();
      hash ^= collections_.GetHashCode();
      if (Hero != 0) hash ^= Hero.GetHashCode();
      if (Skill1 != 0) hash ^= Skill1.GetHashCode();
      if (Skill2 != 0) hash ^= Skill2.GetHashCode();
      if (Skin != 0) hash ^= Skin.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (TeamId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TeamId);
      }
      if (HasSuperStar != false) {
        output.WriteRawTag(24);
        output.WriteBool(HasSuperStar);
      }
      if (IsBot != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsBot);
      }
      if (Score != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Score);
      }
      if (Rank != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Rank);
      }
      collections_.WriteTo(output, _repeated_collections_codec);
      if (Hero != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Hero);
      }
      if (Skill1 != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Skill1);
      }
      if (Skill2 != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Skill2);
      }
      if (Skin != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Skin);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PlayerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (TeamId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TeamId);
      }
      if (HasSuperStar != false) {
        output.WriteRawTag(24);
        output.WriteBool(HasSuperStar);
      }
      if (IsBot != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsBot);
      }
      if (Score != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Score);
      }
      if (Rank != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Rank);
      }
      collections_.WriteTo(ref output, _repeated_collections_codec);
      if (Hero != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Hero);
      }
      if (Skill1 != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Skill1);
      }
      if (Skill2 != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Skill2);
      }
      if (Skin != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Skin);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PlayerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (TeamId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamId);
      }
      if (HasSuperStar != false) {
        size += 1 + 1;
      }
      if (IsBot != false) {
        size += 1 + 1;
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (Rank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      size += collections_.CalculateSize(_repeated_collections_codec);
      if (Hero != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hero);
      }
      if (Skill1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skill1);
      }
      if (Skill2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skill2);
      }
      if (Skin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skin);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerInfoEndMatchProto other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.TeamId != 0) {
        TeamId = other.TeamId;
      }
      if (other.HasSuperStar != false) {
        HasSuperStar = other.HasSuperStar;
      }
      if (other.IsBot != false) {
        IsBot = other.IsBot;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      collections_.Add(other.collections_);
      if (other.Hero != 0) {
        Hero = other.Hero;
      }
      if (other.Skill1 != 0) {
        Skill1 = other.Skill1;
      }
      if (other.Skill2 != 0) {
        Skill2 = other.Skill2;
      }
      if (other.Skin != 0) {
        Skin = other.Skin;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 16: {
            TeamId = input.ReadInt32();
            break;
          }
          case 24: {
            HasSuperStar = input.ReadBool();
            break;
          }
          case 32: {
            IsBot = input.ReadBool();
            break;
          }
          case 40: {
            Score = input.ReadInt32();
            break;
          }
          case 48: {
            Rank = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            collections_.AddEntriesFrom(input, _repeated_collections_codec);
            break;
          }
          case 64: {
            Hero = input.ReadInt32();
            break;
          }
          case 72: {
            Skill1 = input.ReadInt32();
            break;
          }
          case 80: {
            Skill2 = input.ReadInt32();
            break;
          }
          case 88: {
            Skin = input.ReadInt32();
            break;
          }
          case 98: {
            PlayerName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 16: {
            TeamId = input.ReadInt32();
            break;
          }
          case 24: {
            HasSuperStar = input.ReadBool();
            break;
          }
          case 32: {
            IsBot = input.ReadBool();
            break;
          }
          case 40: {
            Score = input.ReadInt32();
            break;
          }
          case 48: {
            Rank = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            collections_.AddEntriesFrom(ref input, _repeated_collections_codec);
            break;
          }
          case 64: {
            Hero = input.ReadInt32();
            break;
          }
          case 72: {
            Skill1 = input.ReadInt32();
            break;
          }
          case 80: {
            Skill2 = input.ReadInt32();
            break;
          }
          case 88: {
            Skin = input.ReadInt32();
            break;
          }
          case 98: {
            PlayerName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchDataResponseProto : pb::IMessage<MatchDataResponseProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchDataResponseProto> _parser = new pb::MessageParser<MatchDataResponseProto>(() => new MatchDataResponseProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchDataResponseProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataResponseProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataResponseProto(MatchDataResponseProto other) : this() {
      matchId_ = other.matchId_;
      gameMode_ = other.gameMode_;
      inGameMode_ = other.inGameMode_;
      switch (other.DataMatchCase) {
        case DataMatchOneofCase.BattleLog:
          BattleLog = other.BattleLog.Clone();
          break;
        case DataMatchOneofCase.DataReconnect:
          DataReconnect = other.DataReconnect.Clone();
          break;
        case DataMatchOneofCase.MatchNotStart:
          MatchNotStart = other.MatchNotStart;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataResponseProto Clone() {
      return new MatchDataResponseProto(this);
    }

    /// <summary>Field number for the "matchId" field.</summary>
    public const int MatchIdFieldNumber = 1;
    private string matchId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MatchId {
      get { return matchId_; }
      set {
        matchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "battleLog" field.</summary>
    public const int BattleLogFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.MatchDataBattleLogProto BattleLog {
      get { return dataMatchCase_ == DataMatchOneofCase.BattleLog ? (global::Thetan.Shared.V1.MatchDataBattleLogProto) dataMatch_ : null; }
      set {
        dataMatch_ = value;
        dataMatchCase_ = value == null ? DataMatchOneofCase.None : DataMatchOneofCase.BattleLog;
      }
    }

    /// <summary>Field number for the "dataReconnect" field.</summary>
    public const int DataReconnectFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.MatchDataReconnect DataReconnect {
      get { return dataMatchCase_ == DataMatchOneofCase.DataReconnect ? (global::Thetan.Shared.V1.MatchDataReconnect) dataMatch_ : null; }
      set {
        dataMatch_ = value;
        dataMatchCase_ = value == null ? DataMatchOneofCase.None : DataMatchOneofCase.DataReconnect;
      }
    }

    /// <summary>Field number for the "matchNotStart" field.</summary>
    public const int MatchNotStartFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MatchNotStart {
      get { return dataMatchCase_ == DataMatchOneofCase.MatchNotStart ? (bool) dataMatch_ : false; }
      set {
        dataMatch_ = value;
        dataMatchCase_ = DataMatchOneofCase.MatchNotStart;
      }
    }

    /// <summary>Field number for the "gameMode" field.</summary>
    public const int GameModeFieldNumber = 5;
    private global::Thetan.Shared.V1.GameMode gameMode_ = global::Thetan.Shared.V1.GameMode.Ranked;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.GameMode GameMode {
      get { return gameMode_; }
      set {
        gameMode_ = value;
      }
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 6;
    private global::Thetan.Shared.V1.InGameMode inGameMode_ = global::Thetan.Shared.V1.InGameMode.TeamCollectStar;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.InGameMode InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    private object dataMatch_;
    /// <summary>Enum of possible cases for the "dataMatch" oneof.</summary>
    public enum DataMatchOneofCase {
      None = 0,
      BattleLog = 2,
      DataReconnect = 3,
      MatchNotStart = 4,
    }
    private DataMatchOneofCase dataMatchCase_ = DataMatchOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataMatchOneofCase DataMatchCase {
      get { return dataMatchCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDataMatch() {
      dataMatchCase_ = DataMatchOneofCase.None;
      dataMatch_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchDataResponseProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchDataResponseProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchId != other.MatchId) return false;
      if (!object.Equals(BattleLog, other.BattleLog)) return false;
      if (!object.Equals(DataReconnect, other.DataReconnect)) return false;
      if (MatchNotStart != other.MatchNotStart) return false;
      if (GameMode != other.GameMode) return false;
      if (InGameMode != other.InGameMode) return false;
      if (DataMatchCase != other.DataMatchCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchId.Length != 0) hash ^= MatchId.GetHashCode();
      if (dataMatchCase_ == DataMatchOneofCase.BattleLog) hash ^= BattleLog.GetHashCode();
      if (dataMatchCase_ == DataMatchOneofCase.DataReconnect) hash ^= DataReconnect.GetHashCode();
      if (dataMatchCase_ == DataMatchOneofCase.MatchNotStart) hash ^= MatchNotStart.GetHashCode();
      if (GameMode != global::Thetan.Shared.V1.GameMode.Ranked) hash ^= GameMode.GetHashCode();
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) hash ^= InGameMode.GetHashCode();
      hash ^= (int) dataMatchCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      if (dataMatchCase_ == DataMatchOneofCase.BattleLog) {
        output.WriteRawTag(18);
        output.WriteMessage(BattleLog);
      }
      if (dataMatchCase_ == DataMatchOneofCase.DataReconnect) {
        output.WriteRawTag(26);
        output.WriteMessage(DataReconnect);
      }
      if (dataMatchCase_ == DataMatchOneofCase.MatchNotStart) {
        output.WriteRawTag(32);
        output.WriteBool(MatchNotStart);
      }
      if (GameMode != global::Thetan.Shared.V1.GameMode.Ranked) {
        output.WriteRawTag(40);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        output.WriteRawTag(48);
        output.WriteEnum((int) InGameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      if (dataMatchCase_ == DataMatchOneofCase.BattleLog) {
        output.WriteRawTag(18);
        output.WriteMessage(BattleLog);
      }
      if (dataMatchCase_ == DataMatchOneofCase.DataReconnect) {
        output.WriteRawTag(26);
        output.WriteMessage(DataReconnect);
      }
      if (dataMatchCase_ == DataMatchOneofCase.MatchNotStart) {
        output.WriteRawTag(32);
        output.WriteBool(MatchNotStart);
      }
      if (GameMode != global::Thetan.Shared.V1.GameMode.Ranked) {
        output.WriteRawTag(40);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        output.WriteRawTag(48);
        output.WriteEnum((int) InGameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MatchId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchId);
      }
      if (dataMatchCase_ == DataMatchOneofCase.BattleLog) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BattleLog);
      }
      if (dataMatchCase_ == DataMatchOneofCase.DataReconnect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataReconnect);
      }
      if (dataMatchCase_ == DataMatchOneofCase.MatchNotStart) {
        size += 1 + 1;
      }
      if (GameMode != global::Thetan.Shared.V1.GameMode.Ranked) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InGameMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchDataResponseProto other) {
      if (other == null) {
        return;
      }
      if (other.MatchId.Length != 0) {
        MatchId = other.MatchId;
      }
      if (other.GameMode != global::Thetan.Shared.V1.GameMode.Ranked) {
        GameMode = other.GameMode;
      }
      if (other.InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        InGameMode = other.InGameMode;
      }
      switch (other.DataMatchCase) {
        case DataMatchOneofCase.BattleLog:
          if (BattleLog == null) {
            BattleLog = new global::Thetan.Shared.V1.MatchDataBattleLogProto();
          }
          BattleLog.MergeFrom(other.BattleLog);
          break;
        case DataMatchOneofCase.DataReconnect:
          if (DataReconnect == null) {
            DataReconnect = new global::Thetan.Shared.V1.MatchDataReconnect();
          }
          DataReconnect.MergeFrom(other.DataReconnect);
          break;
        case DataMatchOneofCase.MatchNotStart:
          MatchNotStart = other.MatchNotStart;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 18: {
            global::Thetan.Shared.V1.MatchDataBattleLogProto subBuilder = new global::Thetan.Shared.V1.MatchDataBattleLogProto();
            if (dataMatchCase_ == DataMatchOneofCase.BattleLog) {
              subBuilder.MergeFrom(BattleLog);
            }
            input.ReadMessage(subBuilder);
            BattleLog = subBuilder;
            break;
          }
          case 26: {
            global::Thetan.Shared.V1.MatchDataReconnect subBuilder = new global::Thetan.Shared.V1.MatchDataReconnect();
            if (dataMatchCase_ == DataMatchOneofCase.DataReconnect) {
              subBuilder.MergeFrom(DataReconnect);
            }
            input.ReadMessage(subBuilder);
            DataReconnect = subBuilder;
            break;
          }
          case 32: {
            MatchNotStart = input.ReadBool();
            break;
          }
          case 40: {
            GameMode = (global::Thetan.Shared.V1.GameMode) input.ReadEnum();
            break;
          }
          case 48: {
            InGameMode = (global::Thetan.Shared.V1.InGameMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 18: {
            global::Thetan.Shared.V1.MatchDataBattleLogProto subBuilder = new global::Thetan.Shared.V1.MatchDataBattleLogProto();
            if (dataMatchCase_ == DataMatchOneofCase.BattleLog) {
              subBuilder.MergeFrom(BattleLog);
            }
            input.ReadMessage(subBuilder);
            BattleLog = subBuilder;
            break;
          }
          case 26: {
            global::Thetan.Shared.V1.MatchDataReconnect subBuilder = new global::Thetan.Shared.V1.MatchDataReconnect();
            if (dataMatchCase_ == DataMatchOneofCase.DataReconnect) {
              subBuilder.MergeFrom(DataReconnect);
            }
            input.ReadMessage(subBuilder);
            DataReconnect = subBuilder;
            break;
          }
          case 32: {
            MatchNotStart = input.ReadBool();
            break;
          }
          case 40: {
            GameMode = (global::Thetan.Shared.V1.GameMode) input.ReadEnum();
            break;
          }
          case 48: {
            InGameMode = (global::Thetan.Shared.V1.InGameMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchDataReconnect : pb::IMessage<MatchDataReconnect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchDataReconnect> _parser = new pb::MessageParser<MatchDataReconnect>(() => new MatchDataReconnect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchDataReconnect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataReconnect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataReconnect(MatchDataReconnect other) : this() {
      timeStart_ = other.timeStart_;
      region_ = other.region_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataReconnect Clone() {
      return new MatchDataReconnect(this);
    }

    /// <summary>Field number for the "timeStart" field.</summary>
    public const int TimeStartFieldNumber = 1;
    private int timeStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TimeStart {
      get { return timeStart_; }
      set {
        timeStart_ = value;
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 2;
    private int region_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Region {
      get { return region_; }
      set {
        region_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchDataReconnect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchDataReconnect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeStart != other.TimeStart) return false;
      if (Region != other.Region) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeStart != 0) hash ^= TimeStart.GetHashCode();
      if (Region != 0) hash ^= Region.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TimeStart != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TimeStart);
      }
      if (Region != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TimeStart != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TimeStart);
      }
      if (Region != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TimeStart != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeStart);
      }
      if (Region != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Region);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchDataReconnect other) {
      if (other == null) {
        return;
      }
      if (other.TimeStart != 0) {
        TimeStart = other.TimeStart;
      }
      if (other.Region != 0) {
        Region = other.Region;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimeStart = input.ReadInt32();
            break;
          }
          case 16: {
            Region = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TimeStart = input.ReadInt32();
            break;
          }
          case 16: {
            Region = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerInfoMatchProto : pb::IMessage<PlayerInfoMatchProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerInfoMatchProto> _parser = new pb::MessageParser<PlayerInfoMatchProto>(() => new PlayerInfoMatchProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerInfoMatchProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInfoMatchProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInfoMatchProto(PlayerInfoMatchProto other) : this() {
      playerId_ = other.playerId_;
      partyId_ = other.partyId_;
      heroTypeId_ = other.heroTypeId_;
      skill1_ = other.skill1_;
      skill2_ = other.skill2_;
      skin_ = other.skin_;
      trophies_ = other.trophies_;
      heroLevel_ = other.heroLevel_;
      skill1Level_ = other.skill1Level_;
      skill2Level_ = other.skill2Level_;
      regions_ = other.regions_.Clone();
      playerName_ = other.playerName_;
      avatarId_ = other.avatarId_;
      frameId_ = other.frameId_;
      guildId_ = other.guildId_;
      heroId_ = other.heroId_;
      isSpecialEvent_ = other.isSpecialEvent_;
      behaviorPoint_ = other.behaviorPoint_;
      trophyMatching_ = other.trophyMatching_;
      brainType_ = other.brainType_;
      teamID_ = other.teamID_;
      battleCount_ = other.battleCount_;
      cosmeticUsing_ = other.cosmeticUsing_ != null ? other.cosmeticUsing_.Clone() : null;
      nameColorId_ = other.nameColorId_;
      playerScore_ = other.playerScore_;
      mapIDs_ = other.mapIDs_.Clone();
      rank_ = other.rank_;
      cosmeticUsingV2_ = other.cosmeticUsingV2_ != null ? other.cosmeticUsingV2_.Clone() : null;
      roundPlayed_ = other.roundPlayed_.Clone();
      customized_ = other.customized_ != null ? other.customized_.Clone() : null;
      countryCode_ = other.countryCode_;
      guildName_ = other.guildName_;
      skills_ = other.skills_.Clone();
      selectedSkills_ = other.selectedSkills_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInfoMatchProto Clone() {
      return new PlayerInfoMatchProto(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    /// <summary>
    /// heroId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partyId" field.</summary>
    public const int PartyIdFieldNumber = 2;
    private string partyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PartyId {
      get { return partyId_; }
      set {
        partyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "heroTypeId" field.</summary>
    public const int HeroTypeIdFieldNumber = 3;
    private int heroTypeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HeroTypeId {
      get { return heroTypeId_; }
      set {
        heroTypeId_ = value;
      }
    }

    /// <summary>Field number for the "skill1" field.</summary>
    public const int Skill1FieldNumber = 4;
    private int skill1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skill1 {
      get { return skill1_; }
      set {
        skill1_ = value;
      }
    }

    /// <summary>Field number for the "skill2" field.</summary>
    public const int Skill2FieldNumber = 5;
    private int skill2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skill2 {
      get { return skill2_; }
      set {
        skill2_ = value;
      }
    }

    /// <summary>Field number for the "skin" field.</summary>
    public const int SkinFieldNumber = 6;
    private int skin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skin {
      get { return skin_; }
      set {
        skin_ = value;
      }
    }

    /// <summary>Field number for the "trophies" field.</summary>
    public const int TrophiesFieldNumber = 7;
    private int trophies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Trophies {
      get { return trophies_; }
      set {
        trophies_ = value;
      }
    }

    /// <summary>Field number for the "heroLevel" field.</summary>
    public const int HeroLevelFieldNumber = 8;
    private int heroLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HeroLevel {
      get { return heroLevel_; }
      set {
        heroLevel_ = value;
      }
    }

    /// <summary>Field number for the "skill1Level" field.</summary>
    public const int Skill1LevelFieldNumber = 9;
    private int skill1Level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skill1Level {
      get { return skill1Level_; }
      set {
        skill1Level_ = value;
      }
    }

    /// <summary>Field number for the "skill2Level" field.</summary>
    public const int Skill2LevelFieldNumber = 10;
    private int skill2Level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skill2Level {
      get { return skill2Level_; }
      set {
        skill2Level_ = value;
      }
    }

    /// <summary>Field number for the "regions" field.</summary>
    public const int RegionsFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_regions_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> regions_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Regions {
      get { return regions_; }
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 12;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatarId" field.</summary>
    public const int AvatarIdFieldNumber = 13;
    private int avatarId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AvatarId {
      get { return avatarId_; }
      set {
        avatarId_ = value;
      }
    }

    /// <summary>Field number for the "frameId" field.</summary>
    public const int FrameIdFieldNumber = 14;
    private int frameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FrameId {
      get { return frameId_; }
      set {
        frameId_ = value;
      }
    }

    /// <summary>Field number for the "guildId" field.</summary>
    public const int GuildIdFieldNumber = 15;
    private string guildId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GuildId {
      get { return guildId_; }
      set {
        guildId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "heroId" field.</summary>
    public const int HeroIdFieldNumber = 16;
    private string heroId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HeroId {
      get { return heroId_; }
      set {
        heroId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isSpecialEvent" field.</summary>
    public const int IsSpecialEventFieldNumber = 17;
    private bool isSpecialEvent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSpecialEvent {
      get { return isSpecialEvent_; }
      set {
        isSpecialEvent_ = value;
      }
    }

    /// <summary>Field number for the "behaviorPoint" field.</summary>
    public const int BehaviorPointFieldNumber = 18;
    private int behaviorPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BehaviorPoint {
      get { return behaviorPoint_; }
      set {
        behaviorPoint_ = value;
      }
    }

    /// <summary>Field number for the "trophyMatching" field.</summary>
    public const int TrophyMatchingFieldNumber = 19;
    private int trophyMatching_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrophyMatching {
      get { return trophyMatching_; }
      set {
        trophyMatching_ = value;
      }
    }

    /// <summary>Field number for the "brainType" field.</summary>
    public const int BrainTypeFieldNumber = 20;
    private int brainType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BrainType {
      get { return brainType_; }
      set {
        brainType_ = value;
      }
    }

    /// <summary>Field number for the "teamID" field.</summary>
    public const int TeamIDFieldNumber = 21;
    private int teamID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TeamID {
      get { return teamID_; }
      set {
        teamID_ = value;
      }
    }

    /// <summary>Field number for the "battleCount" field.</summary>
    public const int BattleCountFieldNumber = 22;
    private int battleCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BattleCount {
      get { return battleCount_; }
      set {
        battleCount_ = value;
      }
    }

    /// <summary>Field number for the "cosmeticUsing" field.</summary>
    public const int CosmeticUsingFieldNumber = 23;
    private global::Thetan.Shared.V1.CosmeticUsingProto cosmeticUsing_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.CosmeticUsingProto CosmeticUsing {
      get { return cosmeticUsing_; }
      set {
        cosmeticUsing_ = value;
      }
    }

    /// <summary>Field number for the "NameColorId" field.</summary>
    public const int NameColorIdFieldNumber = 24;
    private int nameColorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NameColorId {
      get { return nameColorId_; }
      set {
        nameColorId_ = value;
      }
    }

    /// <summary>Field number for the "PlayerScore" field.</summary>
    public const int PlayerScoreFieldNumber = 25;
    private double playerScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PlayerScore {
      get { return playerScore_; }
      set {
        playerScore_ = value;
      }
    }

    /// <summary>Field number for the "MapIDs" field.</summary>
    public const int MapIDsFieldNumber = 26;
    private static readonly pb::FieldCodec<int> _repeated_mapIDs_codec
        = pb::FieldCodec.ForInt32(210);
    private readonly pbc::RepeatedField<int> mapIDs_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MapIDs {
      get { return mapIDs_; }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 27;
    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "cosmeticUsingV2" field.</summary>
    public const int CosmeticUsingV2FieldNumber = 28;
    private global::Thetan.Shared.V1.CosmeticUsingProtoV2 cosmeticUsingV2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.CosmeticUsingProtoV2 CosmeticUsingV2 {
      get { return cosmeticUsingV2_; }
      set {
        cosmeticUsingV2_ = value;
      }
    }

    /// <summary>Field number for the "roundPlayed" field.</summary>
    public const int RoundPlayedFieldNumber = 29;
    private static readonly pbc::MapField<string, int>.Codec _map_roundPlayed_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 234);
    private readonly pbc::MapField<string, int> roundPlayed_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, int> RoundPlayed {
      get { return roundPlayed_; }
    }

    /// <summary>Field number for the "customized" field.</summary>
    public const int CustomizedFieldNumber = 30;
    private global::Thetan.Shared.V1.Customized customized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.Customized Customized {
      get { return customized_; }
      set {
        customized_ = value;
      }
    }

    /// <summary>Field number for the "countryCode" field.</summary>
    public const int CountryCodeFieldNumber = 31;
    private string countryCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CountryCode {
      get { return countryCode_; }
      set {
        countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guildName" field.</summary>
    public const int GuildNameFieldNumber = 32;
    private string guildName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GuildName {
      get { return guildName_; }
      set {
        guildName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skills" field.</summary>
    public const int SkillsFieldNumber = 33;
    private static readonly pb::FieldCodec<global::Thetan.Shared.V1.Skill> _repeated_skills_codec
        = pb::FieldCodec.ForMessage(266, global::Thetan.Shared.V1.Skill.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Shared.V1.Skill> skills_ = new pbc::RepeatedField<global::Thetan.Shared.V1.Skill>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Shared.V1.Skill> Skills {
      get { return skills_; }
    }

    /// <summary>Field number for the "selectedSkills" field.</summary>
    public const int SelectedSkillsFieldNumber = 34;
    private static readonly pb::FieldCodec<global::Thetan.Shared.V1.SelectedSkillsPerRound> _repeated_selectedSkills_codec
        = pb::FieldCodec.ForMessage(274, global::Thetan.Shared.V1.SelectedSkillsPerRound.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Shared.V1.SelectedSkillsPerRound> selectedSkills_ = new pbc::RepeatedField<global::Thetan.Shared.V1.SelectedSkillsPerRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Shared.V1.SelectedSkillsPerRound> SelectedSkills {
      get { return selectedSkills_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfoMatchProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerInfoMatchProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PartyId != other.PartyId) return false;
      if (HeroTypeId != other.HeroTypeId) return false;
      if (Skill1 != other.Skill1) return false;
      if (Skill2 != other.Skill2) return false;
      if (Skin != other.Skin) return false;
      if (Trophies != other.Trophies) return false;
      if (HeroLevel != other.HeroLevel) return false;
      if (Skill1Level != other.Skill1Level) return false;
      if (Skill2Level != other.Skill2Level) return false;
      if(!regions_.Equals(other.regions_)) return false;
      if (PlayerName != other.PlayerName) return false;
      if (AvatarId != other.AvatarId) return false;
      if (FrameId != other.FrameId) return false;
      if (GuildId != other.GuildId) return false;
      if (HeroId != other.HeroId) return false;
      if (IsSpecialEvent != other.IsSpecialEvent) return false;
      if (BehaviorPoint != other.BehaviorPoint) return false;
      if (TrophyMatching != other.TrophyMatching) return false;
      if (BrainType != other.BrainType) return false;
      if (TeamID != other.TeamID) return false;
      if (BattleCount != other.BattleCount) return false;
      if (!object.Equals(CosmeticUsing, other.CosmeticUsing)) return false;
      if (NameColorId != other.NameColorId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PlayerScore, other.PlayerScore)) return false;
      if(!mapIDs_.Equals(other.mapIDs_)) return false;
      if (Rank != other.Rank) return false;
      if (!object.Equals(CosmeticUsingV2, other.CosmeticUsingV2)) return false;
      if (!RoundPlayed.Equals(other.RoundPlayed)) return false;
      if (!object.Equals(Customized, other.Customized)) return false;
      if (CountryCode != other.CountryCode) return false;
      if (GuildName != other.GuildName) return false;
      if(!skills_.Equals(other.skills_)) return false;
      if(!selectedSkills_.Equals(other.selectedSkills_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (PartyId.Length != 0) hash ^= PartyId.GetHashCode();
      if (HeroTypeId != 0) hash ^= HeroTypeId.GetHashCode();
      if (Skill1 != 0) hash ^= Skill1.GetHashCode();
      if (Skill2 != 0) hash ^= Skill2.GetHashCode();
      if (Skin != 0) hash ^= Skin.GetHashCode();
      if (Trophies != 0) hash ^= Trophies.GetHashCode();
      if (HeroLevel != 0) hash ^= HeroLevel.GetHashCode();
      if (Skill1Level != 0) hash ^= Skill1Level.GetHashCode();
      if (Skill2Level != 0) hash ^= Skill2Level.GetHashCode();
      hash ^= regions_.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (AvatarId != 0) hash ^= AvatarId.GetHashCode();
      if (FrameId != 0) hash ^= FrameId.GetHashCode();
      if (GuildId.Length != 0) hash ^= GuildId.GetHashCode();
      if (HeroId.Length != 0) hash ^= HeroId.GetHashCode();
      if (IsSpecialEvent != false) hash ^= IsSpecialEvent.GetHashCode();
      if (BehaviorPoint != 0) hash ^= BehaviorPoint.GetHashCode();
      if (TrophyMatching != 0) hash ^= TrophyMatching.GetHashCode();
      if (BrainType != 0) hash ^= BrainType.GetHashCode();
      if (TeamID != 0) hash ^= TeamID.GetHashCode();
      if (BattleCount != 0) hash ^= BattleCount.GetHashCode();
      if (cosmeticUsing_ != null) hash ^= CosmeticUsing.GetHashCode();
      if (NameColorId != 0) hash ^= NameColorId.GetHashCode();
      if (PlayerScore != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PlayerScore);
      hash ^= mapIDs_.GetHashCode();
      if (Rank != 0) hash ^= Rank.GetHashCode();
      if (cosmeticUsingV2_ != null) hash ^= CosmeticUsingV2.GetHashCode();
      hash ^= RoundPlayed.GetHashCode();
      if (customized_ != null) hash ^= Customized.GetHashCode();
      if (CountryCode.Length != 0) hash ^= CountryCode.GetHashCode();
      if (GuildName.Length != 0) hash ^= GuildName.GetHashCode();
      hash ^= skills_.GetHashCode();
      hash ^= selectedSkills_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (PartyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PartyId);
      }
      if (HeroTypeId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HeroTypeId);
      }
      if (Skill1 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Skill1);
      }
      if (Skill2 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Skill2);
      }
      if (Skin != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Skin);
      }
      if (Trophies != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Trophies);
      }
      if (HeroLevel != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(HeroLevel);
      }
      if (Skill1Level != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Skill1Level);
      }
      if (Skill2Level != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Skill2Level);
      }
      regions_.WriteTo(output, _repeated_regions_codec);
      if (PlayerName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PlayerName);
      }
      if (AvatarId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(AvatarId);
      }
      if (FrameId != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(FrameId);
      }
      if (GuildId.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(GuildId);
      }
      if (HeroId.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(HeroId);
      }
      if (IsSpecialEvent != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsSpecialEvent);
      }
      if (BehaviorPoint != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(BehaviorPoint);
      }
      if (TrophyMatching != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(TrophyMatching);
      }
      if (BrainType != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(BrainType);
      }
      if (TeamID != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(TeamID);
      }
      if (BattleCount != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(BattleCount);
      }
      if (cosmeticUsing_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(CosmeticUsing);
      }
      if (NameColorId != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(NameColorId);
      }
      if (PlayerScore != 0D) {
        output.WriteRawTag(201, 1);
        output.WriteDouble(PlayerScore);
      }
      mapIDs_.WriteTo(output, _repeated_mapIDs_codec);
      if (Rank != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(Rank);
      }
      if (cosmeticUsingV2_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(CosmeticUsingV2);
      }
      roundPlayed_.WriteTo(output, _map_roundPlayed_codec);
      if (customized_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Customized);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(CountryCode);
      }
      if (GuildName.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(GuildName);
      }
      skills_.WriteTo(output, _repeated_skills_codec);
      selectedSkills_.WriteTo(output, _repeated_selectedSkills_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (PartyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PartyId);
      }
      if (HeroTypeId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HeroTypeId);
      }
      if (Skill1 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Skill1);
      }
      if (Skill2 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Skill2);
      }
      if (Skin != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Skin);
      }
      if (Trophies != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Trophies);
      }
      if (HeroLevel != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(HeroLevel);
      }
      if (Skill1Level != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Skill1Level);
      }
      if (Skill2Level != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Skill2Level);
      }
      regions_.WriteTo(ref output, _repeated_regions_codec);
      if (PlayerName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PlayerName);
      }
      if (AvatarId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(AvatarId);
      }
      if (FrameId != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(FrameId);
      }
      if (GuildId.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(GuildId);
      }
      if (HeroId.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(HeroId);
      }
      if (IsSpecialEvent != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsSpecialEvent);
      }
      if (BehaviorPoint != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(BehaviorPoint);
      }
      if (TrophyMatching != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(TrophyMatching);
      }
      if (BrainType != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(BrainType);
      }
      if (TeamID != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(TeamID);
      }
      if (BattleCount != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(BattleCount);
      }
      if (cosmeticUsing_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(CosmeticUsing);
      }
      if (NameColorId != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(NameColorId);
      }
      if (PlayerScore != 0D) {
        output.WriteRawTag(201, 1);
        output.WriteDouble(PlayerScore);
      }
      mapIDs_.WriteTo(ref output, _repeated_mapIDs_codec);
      if (Rank != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(Rank);
      }
      if (cosmeticUsingV2_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(CosmeticUsingV2);
      }
      roundPlayed_.WriteTo(ref output, _map_roundPlayed_codec);
      if (customized_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Customized);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(CountryCode);
      }
      if (GuildName.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(GuildName);
      }
      skills_.WriteTo(ref output, _repeated_skills_codec);
      selectedSkills_.WriteTo(ref output, _repeated_selectedSkills_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (PartyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartyId);
      }
      if (HeroTypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroTypeId);
      }
      if (Skill1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skill1);
      }
      if (Skill2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skill2);
      }
      if (Skin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skin);
      }
      if (Trophies != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Trophies);
      }
      if (HeroLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroLevel);
      }
      if (Skill1Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skill1Level);
      }
      if (Skill2Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skill2Level);
      }
      size += regions_.CalculateSize(_repeated_regions_codec);
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (AvatarId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarId);
      }
      if (FrameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameId);
      }
      if (GuildId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GuildId);
      }
      if (HeroId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HeroId);
      }
      if (IsSpecialEvent != false) {
        size += 2 + 1;
      }
      if (BehaviorPoint != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BehaviorPoint);
      }
      if (TrophyMatching != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TrophyMatching);
      }
      if (BrainType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BrainType);
      }
      if (TeamID != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TeamID);
      }
      if (BattleCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BattleCount);
      }
      if (cosmeticUsing_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CosmeticUsing);
      }
      if (NameColorId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NameColorId);
      }
      if (PlayerScore != 0D) {
        size += 2 + 8;
      }
      size += mapIDs_.CalculateSize(_repeated_mapIDs_codec);
      if (Rank != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (cosmeticUsingV2_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CosmeticUsingV2);
      }
      size += roundPlayed_.CalculateSize(_map_roundPlayed_codec);
      if (customized_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Customized);
      }
      if (CountryCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
      }
      if (GuildName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GuildName);
      }
      size += skills_.CalculateSize(_repeated_skills_codec);
      size += selectedSkills_.CalculateSize(_repeated_selectedSkills_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerInfoMatchProto other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PartyId.Length != 0) {
        PartyId = other.PartyId;
      }
      if (other.HeroTypeId != 0) {
        HeroTypeId = other.HeroTypeId;
      }
      if (other.Skill1 != 0) {
        Skill1 = other.Skill1;
      }
      if (other.Skill2 != 0) {
        Skill2 = other.Skill2;
      }
      if (other.Skin != 0) {
        Skin = other.Skin;
      }
      if (other.Trophies != 0) {
        Trophies = other.Trophies;
      }
      if (other.HeroLevel != 0) {
        HeroLevel = other.HeroLevel;
      }
      if (other.Skill1Level != 0) {
        Skill1Level = other.Skill1Level;
      }
      if (other.Skill2Level != 0) {
        Skill2Level = other.Skill2Level;
      }
      regions_.Add(other.regions_);
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.AvatarId != 0) {
        AvatarId = other.AvatarId;
      }
      if (other.FrameId != 0) {
        FrameId = other.FrameId;
      }
      if (other.GuildId.Length != 0) {
        GuildId = other.GuildId;
      }
      if (other.HeroId.Length != 0) {
        HeroId = other.HeroId;
      }
      if (other.IsSpecialEvent != false) {
        IsSpecialEvent = other.IsSpecialEvent;
      }
      if (other.BehaviorPoint != 0) {
        BehaviorPoint = other.BehaviorPoint;
      }
      if (other.TrophyMatching != 0) {
        TrophyMatching = other.TrophyMatching;
      }
      if (other.BrainType != 0) {
        BrainType = other.BrainType;
      }
      if (other.TeamID != 0) {
        TeamID = other.TeamID;
      }
      if (other.BattleCount != 0) {
        BattleCount = other.BattleCount;
      }
      if (other.cosmeticUsing_ != null) {
        if (cosmeticUsing_ == null) {
          CosmeticUsing = new global::Thetan.Shared.V1.CosmeticUsingProto();
        }
        CosmeticUsing.MergeFrom(other.CosmeticUsing);
      }
      if (other.NameColorId != 0) {
        NameColorId = other.NameColorId;
      }
      if (other.PlayerScore != 0D) {
        PlayerScore = other.PlayerScore;
      }
      mapIDs_.Add(other.mapIDs_);
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      if (other.cosmeticUsingV2_ != null) {
        if (cosmeticUsingV2_ == null) {
          CosmeticUsingV2 = new global::Thetan.Shared.V1.CosmeticUsingProtoV2();
        }
        CosmeticUsingV2.MergeFrom(other.CosmeticUsingV2);
      }
      roundPlayed_.Add(other.roundPlayed_);
      if (other.customized_ != null) {
        if (customized_ == null) {
          Customized = new global::Thetan.Shared.V1.Customized();
        }
        Customized.MergeFrom(other.Customized);
      }
      if (other.CountryCode.Length != 0) {
        CountryCode = other.CountryCode;
      }
      if (other.GuildName.Length != 0) {
        GuildName = other.GuildName;
      }
      skills_.Add(other.skills_);
      selectedSkills_.Add(other.selectedSkills_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            PartyId = input.ReadString();
            break;
          }
          case 24: {
            HeroTypeId = input.ReadInt32();
            break;
          }
          case 32: {
            Skill1 = input.ReadInt32();
            break;
          }
          case 40: {
            Skill2 = input.ReadInt32();
            break;
          }
          case 48: {
            Skin = input.ReadInt32();
            break;
          }
          case 56: {
            Trophies = input.ReadInt32();
            break;
          }
          case 64: {
            HeroLevel = input.ReadInt32();
            break;
          }
          case 72: {
            Skill1Level = input.ReadInt32();
            break;
          }
          case 80: {
            Skill2Level = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            regions_.AddEntriesFrom(input, _repeated_regions_codec);
            break;
          }
          case 98: {
            PlayerName = input.ReadString();
            break;
          }
          case 104: {
            AvatarId = input.ReadInt32();
            break;
          }
          case 112: {
            FrameId = input.ReadInt32();
            break;
          }
          case 122: {
            GuildId = input.ReadString();
            break;
          }
          case 130: {
            HeroId = input.ReadString();
            break;
          }
          case 136: {
            IsSpecialEvent = input.ReadBool();
            break;
          }
          case 144: {
            BehaviorPoint = input.ReadInt32();
            break;
          }
          case 152: {
            TrophyMatching = input.ReadInt32();
            break;
          }
          case 160: {
            BrainType = input.ReadInt32();
            break;
          }
          case 168: {
            TeamID = input.ReadInt32();
            break;
          }
          case 176: {
            BattleCount = input.ReadInt32();
            break;
          }
          case 186: {
            if (cosmeticUsing_ == null) {
              CosmeticUsing = new global::Thetan.Shared.V1.CosmeticUsingProto();
            }
            input.ReadMessage(CosmeticUsing);
            break;
          }
          case 192: {
            NameColorId = input.ReadInt32();
            break;
          }
          case 201: {
            PlayerScore = input.ReadDouble();
            break;
          }
          case 210:
          case 208: {
            mapIDs_.AddEntriesFrom(input, _repeated_mapIDs_codec);
            break;
          }
          case 216: {
            Rank = input.ReadInt32();
            break;
          }
          case 226: {
            if (cosmeticUsingV2_ == null) {
              CosmeticUsingV2 = new global::Thetan.Shared.V1.CosmeticUsingProtoV2();
            }
            input.ReadMessage(CosmeticUsingV2);
            break;
          }
          case 234: {
            roundPlayed_.AddEntriesFrom(input, _map_roundPlayed_codec);
            break;
          }
          case 242: {
            if (customized_ == null) {
              Customized = new global::Thetan.Shared.V1.Customized();
            }
            input.ReadMessage(Customized);
            break;
          }
          case 250: {
            CountryCode = input.ReadString();
            break;
          }
          case 258: {
            GuildName = input.ReadString();
            break;
          }
          case 266: {
            skills_.AddEntriesFrom(input, _repeated_skills_codec);
            break;
          }
          case 274: {
            selectedSkills_.AddEntriesFrom(input, _repeated_selectedSkills_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            PartyId = input.ReadString();
            break;
          }
          case 24: {
            HeroTypeId = input.ReadInt32();
            break;
          }
          case 32: {
            Skill1 = input.ReadInt32();
            break;
          }
          case 40: {
            Skill2 = input.ReadInt32();
            break;
          }
          case 48: {
            Skin = input.ReadInt32();
            break;
          }
          case 56: {
            Trophies = input.ReadInt32();
            break;
          }
          case 64: {
            HeroLevel = input.ReadInt32();
            break;
          }
          case 72: {
            Skill1Level = input.ReadInt32();
            break;
          }
          case 80: {
            Skill2Level = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            regions_.AddEntriesFrom(ref input, _repeated_regions_codec);
            break;
          }
          case 98: {
            PlayerName = input.ReadString();
            break;
          }
          case 104: {
            AvatarId = input.ReadInt32();
            break;
          }
          case 112: {
            FrameId = input.ReadInt32();
            break;
          }
          case 122: {
            GuildId = input.ReadString();
            break;
          }
          case 130: {
            HeroId = input.ReadString();
            break;
          }
          case 136: {
            IsSpecialEvent = input.ReadBool();
            break;
          }
          case 144: {
            BehaviorPoint = input.ReadInt32();
            break;
          }
          case 152: {
            TrophyMatching = input.ReadInt32();
            break;
          }
          case 160: {
            BrainType = input.ReadInt32();
            break;
          }
          case 168: {
            TeamID = input.ReadInt32();
            break;
          }
          case 176: {
            BattleCount = input.ReadInt32();
            break;
          }
          case 186: {
            if (cosmeticUsing_ == null) {
              CosmeticUsing = new global::Thetan.Shared.V1.CosmeticUsingProto();
            }
            input.ReadMessage(CosmeticUsing);
            break;
          }
          case 192: {
            NameColorId = input.ReadInt32();
            break;
          }
          case 201: {
            PlayerScore = input.ReadDouble();
            break;
          }
          case 210:
          case 208: {
            mapIDs_.AddEntriesFrom(ref input, _repeated_mapIDs_codec);
            break;
          }
          case 216: {
            Rank = input.ReadInt32();
            break;
          }
          case 226: {
            if (cosmeticUsingV2_ == null) {
              CosmeticUsingV2 = new global::Thetan.Shared.V1.CosmeticUsingProtoV2();
            }
            input.ReadMessage(CosmeticUsingV2);
            break;
          }
          case 234: {
            roundPlayed_.AddEntriesFrom(ref input, _map_roundPlayed_codec);
            break;
          }
          case 242: {
            if (customized_ == null) {
              Customized = new global::Thetan.Shared.V1.Customized();
            }
            input.ReadMessage(Customized);
            break;
          }
          case 250: {
            CountryCode = input.ReadString();
            break;
          }
          case 258: {
            GuildName = input.ReadString();
            break;
          }
          case 266: {
            skills_.AddEntriesFrom(ref input, _repeated_skills_codec);
            break;
          }
          case 274: {
            selectedSkills_.AddEntriesFrom(ref input, _repeated_selectedSkills_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SelectedSkillsPerRound : pb::IMessage<SelectedSkillsPerRound>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SelectedSkillsPerRound> _parser = new pb::MessageParser<SelectedSkillsPerRound>(() => new SelectedSkillsPerRound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SelectedSkillsPerRound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SelectedSkillsPerRound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SelectedSkillsPerRound(SelectedSkillsPerRound other) : this() {
      selected_ = other.selected_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SelectedSkillsPerRound Clone() {
      return new SelectedSkillsPerRound(this);
    }

    /// <summary>Field number for the "selected" field.</summary>
    public const int SelectedFieldNumber = 1;
    private static readonly pbc::MapField<int, global::Thetan.Shared.V1.Skill>.Codec _map_selected_codec
        = new pbc::MapField<int, global::Thetan.Shared.V1.Skill>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Thetan.Shared.V1.Skill.Parser), 10);
    private readonly pbc::MapField<int, global::Thetan.Shared.V1.Skill> selected_ = new pbc::MapField<int, global::Thetan.Shared.V1.Skill>();
    /// <summary>
    /// &lt;SkillTypeEnum, Skill>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::Thetan.Shared.V1.Skill> Selected {
      get { return selected_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SelectedSkillsPerRound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SelectedSkillsPerRound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Selected.Equals(other.Selected)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Selected.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      selected_.WriteTo(output, _map_selected_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      selected_.WriteTo(ref output, _map_selected_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += selected_.CalculateSize(_map_selected_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SelectedSkillsPerRound other) {
      if (other == null) {
        return;
      }
      selected_.Add(other.selected_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            selected_.AddEntriesFrom(input, _map_selected_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            selected_.AddEntriesFrom(ref input, _map_selected_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.ObsoleteAttribute]
  public sealed partial class CosmeticUsingProto : pb::IMessage<CosmeticUsingProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CosmeticUsingProto> _parser = new pb::MessageParser<CosmeticUsingProto>(() => new CosmeticUsingProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CosmeticUsingProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CosmeticUsingProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CosmeticUsingProto(CosmeticUsingProto other) : this() {
      backBling_ = other.backBling_;
      dance_ = other.dance_;
      flyCraft_ = other.flyCraft_;
      footprint_ = other.footprint_;
      glow_ = other.glow_;
      spray_ = other.spray_;
      voice_ = other.voice_;
      vehicle_ = other.vehicle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CosmeticUsingProto Clone() {
      return new CosmeticUsingProto(this);
    }

    /// <summary>Field number for the "backBling" field.</summary>
    public const int BackBlingFieldNumber = 1;
    private int backBling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BackBling {
      get { return backBling_; }
      set {
        backBling_ = value;
      }
    }

    /// <summary>Field number for the "dance" field.</summary>
    public const int DanceFieldNumber = 2;
    private int dance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dance {
      get { return dance_; }
      set {
        dance_ = value;
      }
    }

    /// <summary>Field number for the "flyCraft" field.</summary>
    public const int FlyCraftFieldNumber = 3;
    private int flyCraft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FlyCraft {
      get { return flyCraft_; }
      set {
        flyCraft_ = value;
      }
    }

    /// <summary>Field number for the "footprint" field.</summary>
    public const int FootprintFieldNumber = 4;
    private int footprint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Footprint {
      get { return footprint_; }
      set {
        footprint_ = value;
      }
    }

    /// <summary>Field number for the "glow" field.</summary>
    public const int GlowFieldNumber = 5;
    private int glow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Glow {
      get { return glow_; }
      set {
        glow_ = value;
      }
    }

    /// <summary>Field number for the "spray" field.</summary>
    public const int SprayFieldNumber = 6;
    private int spray_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Spray {
      get { return spray_; }
      set {
        spray_ = value;
      }
    }

    /// <summary>Field number for the "voice" field.</summary>
    public const int VoiceFieldNumber = 7;
    private int voice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Voice {
      get { return voice_; }
      set {
        voice_ = value;
      }
    }

    /// <summary>Field number for the "vehicle" field.</summary>
    public const int VehicleFieldNumber = 8;
    private int vehicle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Vehicle {
      get { return vehicle_; }
      set {
        vehicle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CosmeticUsingProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CosmeticUsingProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BackBling != other.BackBling) return false;
      if (Dance != other.Dance) return false;
      if (FlyCraft != other.FlyCraft) return false;
      if (Footprint != other.Footprint) return false;
      if (Glow != other.Glow) return false;
      if (Spray != other.Spray) return false;
      if (Voice != other.Voice) return false;
      if (Vehicle != other.Vehicle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BackBling != 0) hash ^= BackBling.GetHashCode();
      if (Dance != 0) hash ^= Dance.GetHashCode();
      if (FlyCraft != 0) hash ^= FlyCraft.GetHashCode();
      if (Footprint != 0) hash ^= Footprint.GetHashCode();
      if (Glow != 0) hash ^= Glow.GetHashCode();
      if (Spray != 0) hash ^= Spray.GetHashCode();
      if (Voice != 0) hash ^= Voice.GetHashCode();
      if (Vehicle != 0) hash ^= Vehicle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BackBling != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BackBling);
      }
      if (Dance != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Dance);
      }
      if (FlyCraft != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FlyCraft);
      }
      if (Footprint != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Footprint);
      }
      if (Glow != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Glow);
      }
      if (Spray != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Spray);
      }
      if (Voice != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Voice);
      }
      if (Vehicle != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Vehicle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BackBling != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BackBling);
      }
      if (Dance != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Dance);
      }
      if (FlyCraft != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FlyCraft);
      }
      if (Footprint != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Footprint);
      }
      if (Glow != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Glow);
      }
      if (Spray != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Spray);
      }
      if (Voice != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Voice);
      }
      if (Vehicle != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Vehicle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BackBling != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BackBling);
      }
      if (Dance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dance);
      }
      if (FlyCraft != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FlyCraft);
      }
      if (Footprint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Footprint);
      }
      if (Glow != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Glow);
      }
      if (Spray != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Spray);
      }
      if (Voice != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Voice);
      }
      if (Vehicle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vehicle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CosmeticUsingProto other) {
      if (other == null) {
        return;
      }
      if (other.BackBling != 0) {
        BackBling = other.BackBling;
      }
      if (other.Dance != 0) {
        Dance = other.Dance;
      }
      if (other.FlyCraft != 0) {
        FlyCraft = other.FlyCraft;
      }
      if (other.Footprint != 0) {
        Footprint = other.Footprint;
      }
      if (other.Glow != 0) {
        Glow = other.Glow;
      }
      if (other.Spray != 0) {
        Spray = other.Spray;
      }
      if (other.Voice != 0) {
        Voice = other.Voice;
      }
      if (other.Vehicle != 0) {
        Vehicle = other.Vehicle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BackBling = input.ReadInt32();
            break;
          }
          case 16: {
            Dance = input.ReadInt32();
            break;
          }
          case 24: {
            FlyCraft = input.ReadInt32();
            break;
          }
          case 32: {
            Footprint = input.ReadInt32();
            break;
          }
          case 40: {
            Glow = input.ReadInt32();
            break;
          }
          case 48: {
            Spray = input.ReadInt32();
            break;
          }
          case 56: {
            Voice = input.ReadInt32();
            break;
          }
          case 64: {
            Vehicle = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BackBling = input.ReadInt32();
            break;
          }
          case 16: {
            Dance = input.ReadInt32();
            break;
          }
          case 24: {
            FlyCraft = input.ReadInt32();
            break;
          }
          case 32: {
            Footprint = input.ReadInt32();
            break;
          }
          case 40: {
            Glow = input.ReadInt32();
            break;
          }
          case 48: {
            Spray = input.ReadInt32();
            break;
          }
          case 56: {
            Voice = input.ReadInt32();
            break;
          }
          case 64: {
            Vehicle = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///khi delete ticket thanh cong
  ///se goi len MatchChannel de get party hoac player va send
  /// </summary>
  public sealed partial class DeleteTicketSuccess : pb::IMessage<DeleteTicketSuccess>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteTicketSuccess> _parser = new pb::MessageParser<DeleteTicketSuccess>(() => new DeleteTicketSuccess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteTicketSuccess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteTicketSuccess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteTicketSuccess(DeleteTicketSuccess other) : this() {
      playerId_ = other.playerId_;
      ticketId_ = other.ticketId_;
      partyId_ = other.partyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteTicketSuccess Clone() {
      return new DeleteTicketSuccess(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ticketId" field.</summary>
    public const int TicketIdFieldNumber = 2;
    private string ticketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TicketId {
      get { return ticketId_; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partyId" field.</summary>
    public const int PartyIdFieldNumber = 3;
    private string partyId_ = "";
    /// <summary>
    /// dung de broadcast party
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PartyId {
      get { return partyId_; }
      set {
        partyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteTicketSuccess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteTicketSuccess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (TicketId != other.TicketId) return false;
      if (PartyId != other.PartyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (TicketId.Length != 0) hash ^= TicketId.GetHashCode();
      if (PartyId.Length != 0) hash ^= PartyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (TicketId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TicketId);
      }
      if (PartyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PartyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (TicketId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TicketId);
      }
      if (PartyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PartyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (TicketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (PartyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteTicketSuccess other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.TicketId.Length != 0) {
        TicketId = other.TicketId;
      }
      if (other.PartyId.Length != 0) {
        PartyId = other.PartyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            TicketId = input.ReadString();
            break;
          }
          case 26: {
            PartyId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            TicketId = input.ReadString();
            break;
          }
          case 26: {
            PartyId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///message dung chung
  /// </summary>
  public sealed partial class MatchProtoPackage : pb::IMessage<MatchProtoPackage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchProtoPackage> _parser = new pb::MessageParser<MatchProtoPackage>(() => new MatchProtoPackage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchProtoPackage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchProtoPackage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchProtoPackage(MatchProtoPackage other) : this() {
      playerId_ = other.playerId_;
      partyId_ = other.partyId_;
      switch (other.ResCase) {
        case ResOneofCase.Data:
          Data = other.Data;
          break;
        case ResOneofCase.ListErrorPlayer:
          ListErrorPlayer = other.ListErrorPlayer.Clone();
          break;
        case ResOneofCase.ErrorCode:
          ErrorCode = other.ErrorCode;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchProtoPackage Clone() {
      return new MatchProtoPackage(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partyId" field.</summary>
    public const int PartyIdFieldNumber = 5;
    private string partyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PartyId {
      get { return partyId_; }
      set {
        partyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return resCase_ == ResOneofCase.Data ? (pb::ByteString) res_ : pb::ByteString.Empty; }
      set {
        res_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        resCase_ = ResOneofCase.Data;
      }
    }

    /// <summary>Field number for the "listErrorPlayer" field.</summary>
    public const int ListErrorPlayerFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.ListErrorPlayer ListErrorPlayer {
      get { return resCase_ == ResOneofCase.ListErrorPlayer ? (global::Thetan.Shared.V1.ListErrorPlayer) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.ListErrorPlayer;
      }
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ErrorCode {
      get { return resCase_ == ResOneofCase.ErrorCode ? (int) res_ : 0; }
      set {
        res_ = value;
        resCase_ = ResOneofCase.ErrorCode;
      }
    }

    private object res_;
    /// <summary>Enum of possible cases for the "res" oneof.</summary>
    public enum ResOneofCase {
      None = 0,
      Data = 2,
      ListErrorPlayer = 3,
      ErrorCode = 4,
    }
    private ResOneofCase resCase_ = ResOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResOneofCase ResCase {
      get { return resCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRes() {
      resCase_ = ResOneofCase.None;
      res_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchProtoPackage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchProtoPackage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PartyId != other.PartyId) return false;
      if (Data != other.Data) return false;
      if (!object.Equals(ListErrorPlayer, other.ListErrorPlayer)) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (ResCase != other.ResCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (PartyId.Length != 0) hash ^= PartyId.GetHashCode();
      if (resCase_ == ResOneofCase.Data) hash ^= Data.GetHashCode();
      if (resCase_ == ResOneofCase.ListErrorPlayer) hash ^= ListErrorPlayer.GetHashCode();
      if (resCase_ == ResOneofCase.ErrorCode) hash ^= ErrorCode.GetHashCode();
      hash ^= (int) resCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (resCase_ == ResOneofCase.Data) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (resCase_ == ResOneofCase.ListErrorPlayer) {
        output.WriteRawTag(26);
        output.WriteMessage(ListErrorPlayer);
      }
      if (resCase_ == ResOneofCase.ErrorCode) {
        output.WriteRawTag(32);
        output.WriteInt32(ErrorCode);
      }
      if (PartyId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PartyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (resCase_ == ResOneofCase.Data) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (resCase_ == ResOneofCase.ListErrorPlayer) {
        output.WriteRawTag(26);
        output.WriteMessage(ListErrorPlayer);
      }
      if (resCase_ == ResOneofCase.ErrorCode) {
        output.WriteRawTag(32);
        output.WriteInt32(ErrorCode);
      }
      if (PartyId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PartyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (PartyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartyId);
      }
      if (resCase_ == ResOneofCase.Data) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (resCase_ == ResOneofCase.ListErrorPlayer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ListErrorPlayer);
      }
      if (resCase_ == ResOneofCase.ErrorCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchProtoPackage other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PartyId.Length != 0) {
        PartyId = other.PartyId;
      }
      switch (other.ResCase) {
        case ResOneofCase.Data:
          Data = other.Data;
          break;
        case ResOneofCase.ListErrorPlayer:
          if (ListErrorPlayer == null) {
            ListErrorPlayer = new global::Thetan.Shared.V1.ListErrorPlayer();
          }
          ListErrorPlayer.MergeFrom(other.ListErrorPlayer);
          break;
        case ResOneofCase.ErrorCode:
          ErrorCode = other.ErrorCode;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 26: {
            global::Thetan.Shared.V1.ListErrorPlayer subBuilder = new global::Thetan.Shared.V1.ListErrorPlayer();
            if (resCase_ == ResOneofCase.ListErrorPlayer) {
              subBuilder.MergeFrom(ListErrorPlayer);
            }
            input.ReadMessage(subBuilder);
            ListErrorPlayer = subBuilder;
            break;
          }
          case 32: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 42: {
            PartyId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 26: {
            global::Thetan.Shared.V1.ListErrorPlayer subBuilder = new global::Thetan.Shared.V1.ListErrorPlayer();
            if (resCase_ == ResOneofCase.ListErrorPlayer) {
              subBuilder.MergeFrom(ListErrorPlayer);
            }
            input.ReadMessage(subBuilder);
            ListErrorPlayer = subBuilder;
            break;
          }
          case 32: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 42: {
            PartyId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TicketDataCache : pb::IMessage<TicketDataCache>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TicketDataCache> _parser = new pb::MessageParser<TicketDataCache>(() => new TicketDataCache());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TicketDataCache> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketDataCache() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketDataCache(TicketDataCache other) : this() {
      inGameMode_ = other.inGameMode_;
      trophies_ = other.trophies_;
      playerIds_ = other.playerIds_.Clone();
      ticketId_ = other.ticketId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketDataCache Clone() {
      return new TicketDataCache(this);
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 1;
    private global::Thetan.Shared.V1.InGameMode inGameMode_ = global::Thetan.Shared.V1.InGameMode.TeamCollectStar;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.InGameMode InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    /// <summary>Field number for the "trophies" field.</summary>
    public const int TrophiesFieldNumber = 2;
    private int trophies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Trophies {
      get { return trophies_; }
      set {
        trophies_ = value;
      }
    }

    /// <summary>Field number for the "playerIds" field.</summary>
    public const int PlayerIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_playerIds_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> playerIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> PlayerIds {
      get { return playerIds_; }
    }

    /// <summary>Field number for the "ticketId" field.</summary>
    public const int TicketIdFieldNumber = 4;
    private string ticketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TicketId {
      get { return ticketId_; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TicketDataCache);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TicketDataCache other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InGameMode != other.InGameMode) return false;
      if (Trophies != other.Trophies) return false;
      if(!playerIds_.Equals(other.playerIds_)) return false;
      if (TicketId != other.TicketId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) hash ^= InGameMode.GetHashCode();
      if (Trophies != 0) hash ^= Trophies.GetHashCode();
      hash ^= playerIds_.GetHashCode();
      if (TicketId.Length != 0) hash ^= TicketId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        output.WriteRawTag(8);
        output.WriteEnum((int) InGameMode);
      }
      if (Trophies != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Trophies);
      }
      playerIds_.WriteTo(output, _repeated_playerIds_codec);
      if (TicketId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TicketId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        output.WriteRawTag(8);
        output.WriteEnum((int) InGameMode);
      }
      if (Trophies != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Trophies);
      }
      playerIds_.WriteTo(ref output, _repeated_playerIds_codec);
      if (TicketId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TicketId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InGameMode);
      }
      if (Trophies != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Trophies);
      }
      size += playerIds_.CalculateSize(_repeated_playerIds_codec);
      if (TicketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TicketDataCache other) {
      if (other == null) {
        return;
      }
      if (other.InGameMode != global::Thetan.Shared.V1.InGameMode.TeamCollectStar) {
        InGameMode = other.InGameMode;
      }
      if (other.Trophies != 0) {
        Trophies = other.Trophies;
      }
      playerIds_.Add(other.playerIds_);
      if (other.TicketId.Length != 0) {
        TicketId = other.TicketId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InGameMode = (global::Thetan.Shared.V1.InGameMode) input.ReadEnum();
            break;
          }
          case 16: {
            Trophies = input.ReadInt32();
            break;
          }
          case 26: {
            playerIds_.AddEntriesFrom(input, _repeated_playerIds_codec);
            break;
          }
          case 34: {
            TicketId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InGameMode = (global::Thetan.Shared.V1.InGameMode) input.ReadEnum();
            break;
          }
          case 16: {
            Trophies = input.ReadInt32();
            break;
          }
          case 26: {
            playerIds_.AddEntriesFrom(ref input, _repeated_playerIds_codec);
            break;
          }
          case 34: {
            TicketId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TicketCacheWSOnly : pb::IMessage<TicketCacheWSOnly>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TicketCacheWSOnly> _parser = new pb::MessageParser<TicketCacheWSOnly>(() => new TicketCacheWSOnly());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TicketCacheWSOnly> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketCacheWSOnly() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketCacheWSOnly(TicketCacheWSOnly other) : this() {
      ticketID_ = other.ticketID_;
      inGameMode_ = other.inGameMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketCacheWSOnly Clone() {
      return new TicketCacheWSOnly(this);
    }

    /// <summary>Field number for the "ticketID" field.</summary>
    public const int TicketIDFieldNumber = 1;
    private string ticketID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TicketID {
      get { return ticketID_; }
      set {
        ticketID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 2;
    private int inGameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TicketCacheWSOnly);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TicketCacheWSOnly other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TicketID != other.TicketID) return false;
      if (InGameMode != other.InGameMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TicketID.Length != 0) hash ^= TicketID.GetHashCode();
      if (InGameMode != 0) hash ^= InGameMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TicketID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TicketID);
      }
      if (InGameMode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(InGameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TicketID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TicketID);
      }
      if (InGameMode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(InGameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TicketID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketID);
      }
      if (InGameMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InGameMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TicketCacheWSOnly other) {
      if (other == null) {
        return;
      }
      if (other.TicketID.Length != 0) {
        TicketID = other.TicketID;
      }
      if (other.InGameMode != 0) {
        InGameMode = other.InGameMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TicketID = input.ReadString();
            break;
          }
          case 16: {
            InGameMode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TicketID = input.ReadString();
            break;
          }
          case 16: {
            InGameMode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListErrorPlayer : pb::IMessage<ListErrorPlayer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListErrorPlayer> _parser = new pb::MessageParser<ListErrorPlayer>(() => new ListErrorPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListErrorPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListErrorPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListErrorPlayer(ListErrorPlayer other) : this() {
      errorPlayers_ = other.errorPlayers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListErrorPlayer Clone() {
      return new ListErrorPlayer(this);
    }

    /// <summary>Field number for the "errorPlayers" field.</summary>
    public const int ErrorPlayersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Thetan.Shared.V1.ListErrorPlayer.Types.ErrorPlayer> _repeated_errorPlayers_codec
        = pb::FieldCodec.ForMessage(10, global::Thetan.Shared.V1.ListErrorPlayer.Types.ErrorPlayer.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Shared.V1.ListErrorPlayer.Types.ErrorPlayer> errorPlayers_ = new pbc::RepeatedField<global::Thetan.Shared.V1.ListErrorPlayer.Types.ErrorPlayer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Shared.V1.ListErrorPlayer.Types.ErrorPlayer> ErrorPlayers {
      get { return errorPlayers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListErrorPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListErrorPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!errorPlayers_.Equals(other.errorPlayers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= errorPlayers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      errorPlayers_.WriteTo(output, _repeated_errorPlayers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      errorPlayers_.WriteTo(ref output, _repeated_errorPlayers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += errorPlayers_.CalculateSize(_repeated_errorPlayers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListErrorPlayer other) {
      if (other == null) {
        return;
      }
      errorPlayers_.Add(other.errorPlayers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            errorPlayers_.AddEntriesFrom(input, _repeated_errorPlayers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            errorPlayers_.AddEntriesFrom(ref input, _repeated_errorPlayers_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ListErrorPlayer message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class ErrorPlayer : pb::IMessage<ErrorPlayer>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ErrorPlayer> _parser = new pb::MessageParser<ErrorPlayer>(() => new ErrorPlayer());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ErrorPlayer> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Thetan.Shared.V1.ListErrorPlayer.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ErrorPlayer() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ErrorPlayer(ErrorPlayer other) : this() {
          userId_ = other.userId_;
          matchErrorCode_ = other.matchErrorCode_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ErrorPlayer Clone() {
          return new ErrorPlayer(this);
        }

        /// <summary>Field number for the "userId" field.</summary>
        public const int UserIdFieldNumber = 1;
        private string userId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "matchErrorCode" field.</summary>
        public const int MatchErrorCodeFieldNumber = 2;
        private global::Thetan.Shared.V1.MatchErrorCode matchErrorCode_ = global::Thetan.Shared.V1.MatchErrorCode.MSuccess;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Thetan.Shared.V1.MatchErrorCode MatchErrorCode {
          get { return matchErrorCode_; }
          set {
            matchErrorCode_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ErrorPlayer);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ErrorPlayer other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UserId != other.UserId) return false;
          if (MatchErrorCode != other.MatchErrorCode) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (UserId.Length != 0) hash ^= UserId.GetHashCode();
          if (MatchErrorCode != global::Thetan.Shared.V1.MatchErrorCode.MSuccess) hash ^= MatchErrorCode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (UserId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(UserId);
          }
          if (MatchErrorCode != global::Thetan.Shared.V1.MatchErrorCode.MSuccess) {
            output.WriteRawTag(16);
            output.WriteEnum((int) MatchErrorCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (UserId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(UserId);
          }
          if (MatchErrorCode != global::Thetan.Shared.V1.MatchErrorCode.MSuccess) {
            output.WriteRawTag(16);
            output.WriteEnum((int) MatchErrorCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (UserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
          }
          if (MatchErrorCode != global::Thetan.Shared.V1.MatchErrorCode.MSuccess) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MatchErrorCode);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ErrorPlayer other) {
          if (other == null) {
            return;
          }
          if (other.UserId.Length != 0) {
            UserId = other.UserId;
          }
          if (other.MatchErrorCode != global::Thetan.Shared.V1.MatchErrorCode.MSuccess) {
            MatchErrorCode = other.MatchErrorCode;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                UserId = input.ReadString();
                break;
              }
              case 16: {
                MatchErrorCode = (global::Thetan.Shared.V1.MatchErrorCode) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                UserId = input.ReadString();
                break;
              }
              case 16: {
                MatchErrorCode = (global::Thetan.Shared.V1.MatchErrorCode) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class MatchProtoVersionPackage : pb::IMessage<MatchProtoVersionPackage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchProtoVersionPackage> _parser = new pb::MessageParser<MatchProtoVersionPackage>(() => new MatchProtoVersionPackage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchProtoVersionPackage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchProtoVersionPackage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchProtoVersionPackage(MatchProtoVersionPackage other) : this() {
      playerId_ = other.playerId_;
      version_ = other.version_;
      switch (other.ResCase) {
        case ResOneofCase.Data:
          Data = other.Data;
          break;
        case ResOneofCase.ErrorCode:
          ErrorCode = other.ErrorCode;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchProtoVersionPackage Clone() {
      return new MatchProtoVersionPackage(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    /// <summary>
    ///data nay la proto khac
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return resCase_ == ResOneofCase.Data ? (pb::ByteString) res_ : pb::ByteString.Empty; }
      set {
        res_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        resCase_ = ResOneofCase.Data;
      }
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 3;
    /// <summary>
    ///neu khac 0 tuc la co loi. luc nay khong parse cai data nua
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ErrorCode {
      get { return resCase_ == ResOneofCase.ErrorCode ? (int) res_ : 0; }
      set {
        res_ = value;
        resCase_ = ResOneofCase.ErrorCode;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 4;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    private object res_;
    /// <summary>Enum of possible cases for the "res" oneof.</summary>
    public enum ResOneofCase {
      None = 0,
      Data = 2,
      ErrorCode = 3,
    }
    private ResOneofCase resCase_ = ResOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResOneofCase ResCase {
      get { return resCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRes() {
      resCase_ = ResOneofCase.None;
      res_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchProtoVersionPackage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchProtoVersionPackage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Data != other.Data) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (Version != other.Version) return false;
      if (ResCase != other.ResCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (resCase_ == ResOneofCase.Data) hash ^= Data.GetHashCode();
      if (resCase_ == ResOneofCase.ErrorCode) hash ^= ErrorCode.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      hash ^= (int) resCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (resCase_ == ResOneofCase.Data) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (resCase_ == ResOneofCase.ErrorCode) {
        output.WriteRawTag(24);
        output.WriteInt32(ErrorCode);
      }
      if (Version != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (resCase_ == ResOneofCase.Data) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (resCase_ == ResOneofCase.ErrorCode) {
        output.WriteRawTag(24);
        output.WriteInt32(ErrorCode);
      }
      if (Version != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (resCase_ == ResOneofCase.Data) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (resCase_ == ResOneofCase.ErrorCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchProtoVersionPackage other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      switch (other.ResCase) {
        case ResOneofCase.Data:
          Data = other.Data;
          break;
        case ResOneofCase.ErrorCode:
          ErrorCode = other.ErrorCode;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 24: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 32: {
            Version = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 24: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 32: {
            Version = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CancelMatchRequest : pb::IMessage<CancelMatchRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelMatchRequest> _parser = new pb::MessageParser<CancelMatchRequest>(() => new CancelMatchRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CancelMatchRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelMatchRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelMatchRequest(CancelMatchRequest other) : this() {
      playerId_ = other.playerId_;
      ticketId_ = other.ticketId_;
      trophy_ = other.trophy_;
      inGameMode_ = other.inGameMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelMatchRequest Clone() {
      return new CancelMatchRequest(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    /// <summary>
    /// A Ticket object with SearchFields defined.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ticketId" field.</summary>
    public const int TicketIdFieldNumber = 2;
    private string ticketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TicketId {
      get { return ticketId_; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trophy" field.</summary>
    public const int TrophyFieldNumber = 3;
    private int trophy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Trophy {
      get { return trophy_; }
      set {
        trophy_ = value;
      }
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 4;
    private int inGameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CancelMatchRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CancelMatchRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (TicketId != other.TicketId) return false;
      if (Trophy != other.Trophy) return false;
      if (InGameMode != other.InGameMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (TicketId.Length != 0) hash ^= TicketId.GetHashCode();
      if (Trophy != 0) hash ^= Trophy.GetHashCode();
      if (InGameMode != 0) hash ^= InGameMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (TicketId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TicketId);
      }
      if (Trophy != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Trophy);
      }
      if (InGameMode != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(InGameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (TicketId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TicketId);
      }
      if (Trophy != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Trophy);
      }
      if (InGameMode != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(InGameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (TicketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (Trophy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Trophy);
      }
      if (InGameMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InGameMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CancelMatchRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.TicketId.Length != 0) {
        TicketId = other.TicketId;
      }
      if (other.Trophy != 0) {
        Trophy = other.Trophy;
      }
      if (other.InGameMode != 0) {
        InGameMode = other.InGameMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            TicketId = input.ReadString();
            break;
          }
          case 24: {
            Trophy = input.ReadInt32();
            break;
          }
          case 32: {
            InGameMode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            TicketId = input.ReadString();
            break;
          }
          case 24: {
            Trophy = input.ReadInt32();
            break;
          }
          case 32: {
            InGameMode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchExtension : pb::IMessage<MatchExtension>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchExtension> _parser = new pb::MessageParser<MatchExtension>(() => new MatchExtension());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchExtension> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchExtension() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchExtension(MatchExtension other) : this() {
      minTrophies_ = other.minTrophies_;
      maxTrophies_ = other.maxTrophies_;
      minPlayers_ = other.minPlayers_;
      maxPlayers_ = other.maxPlayers_;
      maxTeam_ = other.maxTeam_;
      countPlayers_ = other.countPlayers_;
      numBot_ = other.numBot_;
      playerPerTeam_ = other.playerPerTeam_;
      matchFoundTimestamp_ = other.matchFoundTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchExtension Clone() {
      return new MatchExtension(this);
    }

    /// <summary>Field number for the "minTrophies" field.</summary>
    public const int MinTrophiesFieldNumber = 1;
    private int minTrophies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinTrophies {
      get { return minTrophies_; }
      set {
        minTrophies_ = value;
      }
    }

    /// <summary>Field number for the "maxTrophies" field.</summary>
    public const int MaxTrophiesFieldNumber = 2;
    private int maxTrophies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxTrophies {
      get { return maxTrophies_; }
      set {
        maxTrophies_ = value;
      }
    }

    /// <summary>Field number for the "minPlayers" field.</summary>
    public const int MinPlayersFieldNumber = 3;
    private int minPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinPlayers {
      get { return minPlayers_; }
      set {
        minPlayers_ = value;
      }
    }

    /// <summary>Field number for the "maxPlayers" field.</summary>
    public const int MaxPlayersFieldNumber = 4;
    private int maxPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxPlayers {
      get { return maxPlayers_; }
      set {
        maxPlayers_ = value;
      }
    }

    /// <summary>Field number for the "maxTeam" field.</summary>
    public const int MaxTeamFieldNumber = 5;
    private int maxTeam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxTeam {
      get { return maxTeam_; }
      set {
        maxTeam_ = value;
      }
    }

    /// <summary>Field number for the "countPlayers" field.</summary>
    public const int CountPlayersFieldNumber = 6;
    private int countPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CountPlayers {
      get { return countPlayers_; }
      set {
        countPlayers_ = value;
      }
    }

    /// <summary>Field number for the "numBot" field.</summary>
    public const int NumBotFieldNumber = 7;
    private int numBot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumBot {
      get { return numBot_; }
      set {
        numBot_ = value;
      }
    }

    /// <summary>Field number for the "playerPerTeam" field.</summary>
    public const int PlayerPerTeamFieldNumber = 8;
    private int playerPerTeam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerPerTeam {
      get { return playerPerTeam_; }
      set {
        playerPerTeam_ = value;
      }
    }

    /// <summary>Field number for the "matchFoundTimestamp" field.</summary>
    public const int MatchFoundTimestampFieldNumber = 9;
    private long matchFoundTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MatchFoundTimestamp {
      get { return matchFoundTimestamp_; }
      set {
        matchFoundTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchExtension);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchExtension other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MinTrophies != other.MinTrophies) return false;
      if (MaxTrophies != other.MaxTrophies) return false;
      if (MinPlayers != other.MinPlayers) return false;
      if (MaxPlayers != other.MaxPlayers) return false;
      if (MaxTeam != other.MaxTeam) return false;
      if (CountPlayers != other.CountPlayers) return false;
      if (NumBot != other.NumBot) return false;
      if (PlayerPerTeam != other.PlayerPerTeam) return false;
      if (MatchFoundTimestamp != other.MatchFoundTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MinTrophies != 0) hash ^= MinTrophies.GetHashCode();
      if (MaxTrophies != 0) hash ^= MaxTrophies.GetHashCode();
      if (MinPlayers != 0) hash ^= MinPlayers.GetHashCode();
      if (MaxPlayers != 0) hash ^= MaxPlayers.GetHashCode();
      if (MaxTeam != 0) hash ^= MaxTeam.GetHashCode();
      if (CountPlayers != 0) hash ^= CountPlayers.GetHashCode();
      if (NumBot != 0) hash ^= NumBot.GetHashCode();
      if (PlayerPerTeam != 0) hash ^= PlayerPerTeam.GetHashCode();
      if (MatchFoundTimestamp != 0L) hash ^= MatchFoundTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MinTrophies != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MinTrophies);
      }
      if (MaxTrophies != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxTrophies);
      }
      if (MinPlayers != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MinPlayers);
      }
      if (MaxPlayers != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxPlayers);
      }
      if (MaxTeam != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxTeam);
      }
      if (CountPlayers != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CountPlayers);
      }
      if (NumBot != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(NumBot);
      }
      if (PlayerPerTeam != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PlayerPerTeam);
      }
      if (MatchFoundTimestamp != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(MatchFoundTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MinTrophies != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MinTrophies);
      }
      if (MaxTrophies != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxTrophies);
      }
      if (MinPlayers != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MinPlayers);
      }
      if (MaxPlayers != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxPlayers);
      }
      if (MaxTeam != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxTeam);
      }
      if (CountPlayers != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CountPlayers);
      }
      if (NumBot != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(NumBot);
      }
      if (PlayerPerTeam != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PlayerPerTeam);
      }
      if (MatchFoundTimestamp != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(MatchFoundTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MinTrophies != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinTrophies);
      }
      if (MaxTrophies != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxTrophies);
      }
      if (MinPlayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinPlayers);
      }
      if (MaxPlayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayers);
      }
      if (MaxTeam != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxTeam);
      }
      if (CountPlayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountPlayers);
      }
      if (NumBot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumBot);
      }
      if (PlayerPerTeam != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerPerTeam);
      }
      if (MatchFoundTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MatchFoundTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchExtension other) {
      if (other == null) {
        return;
      }
      if (other.MinTrophies != 0) {
        MinTrophies = other.MinTrophies;
      }
      if (other.MaxTrophies != 0) {
        MaxTrophies = other.MaxTrophies;
      }
      if (other.MinPlayers != 0) {
        MinPlayers = other.MinPlayers;
      }
      if (other.MaxPlayers != 0) {
        MaxPlayers = other.MaxPlayers;
      }
      if (other.MaxTeam != 0) {
        MaxTeam = other.MaxTeam;
      }
      if (other.CountPlayers != 0) {
        CountPlayers = other.CountPlayers;
      }
      if (other.NumBot != 0) {
        NumBot = other.NumBot;
      }
      if (other.PlayerPerTeam != 0) {
        PlayerPerTeam = other.PlayerPerTeam;
      }
      if (other.MatchFoundTimestamp != 0L) {
        MatchFoundTimestamp = other.MatchFoundTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MinTrophies = input.ReadInt32();
            break;
          }
          case 16: {
            MaxTrophies = input.ReadInt32();
            break;
          }
          case 24: {
            MinPlayers = input.ReadInt32();
            break;
          }
          case 32: {
            MaxPlayers = input.ReadInt32();
            break;
          }
          case 40: {
            MaxTeam = input.ReadInt32();
            break;
          }
          case 48: {
            CountPlayers = input.ReadInt32();
            break;
          }
          case 56: {
            NumBot = input.ReadInt32();
            break;
          }
          case 64: {
            PlayerPerTeam = input.ReadInt32();
            break;
          }
          case 72: {
            MatchFoundTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MinTrophies = input.ReadInt32();
            break;
          }
          case 16: {
            MaxTrophies = input.ReadInt32();
            break;
          }
          case 24: {
            MinPlayers = input.ReadInt32();
            break;
          }
          case 32: {
            MaxPlayers = input.ReadInt32();
            break;
          }
          case 40: {
            MaxTeam = input.ReadInt32();
            break;
          }
          case 48: {
            CountPlayers = input.ReadInt32();
            break;
          }
          case 56: {
            NumBot = input.ReadInt32();
            break;
          }
          case 64: {
            PlayerPerTeam = input.ReadInt32();
            break;
          }
          case 72: {
            MatchFoundTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EmptyResponse : pb::IMessage<EmptyResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EmptyResponse> _parser = new pb::MessageParser<EmptyResponse>(() => new EmptyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EmptyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EmptyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EmptyResponse(EmptyResponse other) : this() {
      errorCode_ = other.errorCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EmptyResponse Clone() {
      return new EmptyResponse(this);
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private int errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EmptyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EmptyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EmptyResponse other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BotsResponse : pb::IMessage<BotsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BotsResponse> _parser = new pb::MessageParser<BotsResponse>(() => new BotsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BotsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BotsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BotsResponse(BotsResponse other) : this() {
      errorCode_ = other.errorCode_;
      bots_ = other.bots_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BotsResponse Clone() {
      return new BotsResponse(this);
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private int errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "bots" field.</summary>
    public const int BotsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Thetan.Shared.V1.PlayerInfoMatchProto> _repeated_bots_codec
        = pb::FieldCodec.ForMessage(18, global::Thetan.Shared.V1.PlayerInfoMatchProto.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoMatchProto> bots_ = new pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoMatchProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Shared.V1.PlayerInfoMatchProto> Bots {
      get { return bots_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BotsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BotsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if(!bots_.Equals(other.bots_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      hash ^= bots_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrorCode);
      }
      bots_.WriteTo(output, _repeated_bots_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrorCode);
      }
      bots_.WriteTo(ref output, _repeated_bots_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      size += bots_.CalculateSize(_repeated_bots_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BotsResponse other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      bots_.Add(other.bots_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 18: {
            bots_.AddEntriesFrom(input, _repeated_bots_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 18: {
            bots_.AddEntriesFrom(ref input, _repeated_bots_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetBotsRequest : pb::IMessage<GetBotsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBotsRequest> _parser = new pb::MessageParser<GetBotsRequest>(() => new GetBotsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetBotsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBotsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBotsRequest(GetBotsRequest other) : this() {
      gameId_ = other.gameId_;
      isNewbie_ = other.isNewbie_;
      numbers_ = other.numbers_;
      trophyRank_ = other.trophyRank_;
      region_ = other.region_;
      battle_ = other.battle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBotsRequest Clone() {
      return new GetBotsRequest(this);
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 1;
    private int gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameId {
      get { return gameId_; }
      set {
        gameId_ = value;
      }
    }

    /// <summary>Field number for the "isNewbie" field.</summary>
    public const int IsNewbieFieldNumber = 2;
    private bool isNewbie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsNewbie {
      get { return isNewbie_; }
      set {
        isNewbie_ = value;
      }
    }

    /// <summary>Field number for the "numbers" field.</summary>
    public const int NumbersFieldNumber = 3;
    private int numbers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Numbers {
      get { return numbers_; }
      set {
        numbers_ = value;
      }
    }

    /// <summary>Field number for the "trophyRank" field.</summary>
    public const int TrophyRankFieldNumber = 4;
    private int trophyRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrophyRank {
      get { return trophyRank_; }
      set {
        trophyRank_ = value;
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 5;
    private int region_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Region {
      get { return region_; }
      set {
        region_ = value;
      }
    }

    /// <summary>Field number for the "battle" field.</summary>
    public const int BattleFieldNumber = 6;
    private int battle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Battle {
      get { return battle_; }
      set {
        battle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetBotsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetBotsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if (IsNewbie != other.IsNewbie) return false;
      if (Numbers != other.Numbers) return false;
      if (TrophyRank != other.TrophyRank) return false;
      if (Region != other.Region) return false;
      if (Battle != other.Battle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GameId != 0) hash ^= GameId.GetHashCode();
      if (IsNewbie != false) hash ^= IsNewbie.GetHashCode();
      if (Numbers != 0) hash ^= Numbers.GetHashCode();
      if (TrophyRank != 0) hash ^= TrophyRank.GetHashCode();
      if (Region != 0) hash ^= Region.GetHashCode();
      if (Battle != 0) hash ^= Battle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameId);
      }
      if (IsNewbie != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsNewbie);
      }
      if (Numbers != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Numbers);
      }
      if (TrophyRank != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TrophyRank);
      }
      if (Region != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Region);
      }
      if (Battle != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Battle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameId);
      }
      if (IsNewbie != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsNewbie);
      }
      if (Numbers != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Numbers);
      }
      if (TrophyRank != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TrophyRank);
      }
      if (Region != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Region);
      }
      if (Battle != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Battle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameId);
      }
      if (IsNewbie != false) {
        size += 1 + 1;
      }
      if (Numbers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Numbers);
      }
      if (TrophyRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrophyRank);
      }
      if (Region != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Region);
      }
      if (Battle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Battle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetBotsRequest other) {
      if (other == null) {
        return;
      }
      if (other.GameId != 0) {
        GameId = other.GameId;
      }
      if (other.IsNewbie != false) {
        IsNewbie = other.IsNewbie;
      }
      if (other.Numbers != 0) {
        Numbers = other.Numbers;
      }
      if (other.TrophyRank != 0) {
        TrophyRank = other.TrophyRank;
      }
      if (other.Region != 0) {
        Region = other.Region;
      }
      if (other.Battle != 0) {
        Battle = other.Battle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadInt32();
            break;
          }
          case 16: {
            IsNewbie = input.ReadBool();
            break;
          }
          case 24: {
            Numbers = input.ReadInt32();
            break;
          }
          case 32: {
            TrophyRank = input.ReadInt32();
            break;
          }
          case 40: {
            Region = input.ReadInt32();
            break;
          }
          case 48: {
            Battle = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadInt32();
            break;
          }
          case 16: {
            IsNewbie = input.ReadBool();
            break;
          }
          case 24: {
            Numbers = input.ReadInt32();
            break;
          }
          case 32: {
            TrophyRank = input.ReadInt32();
            break;
          }
          case 40: {
            Region = input.ReadInt32();
            break;
          }
          case 48: {
            Battle = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CosmeticUsingProtoV2 : pb::IMessage<CosmeticUsingProtoV2>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CosmeticUsingProtoV2> _parser = new pb::MessageParser<CosmeticUsingProtoV2>(() => new CosmeticUsingProtoV2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CosmeticUsingProtoV2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CosmeticUsingProtoV2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CosmeticUsingProtoV2(CosmeticUsingProtoV2 other) : this() {
      cosmeticInUsed_ = other.cosmeticInUsed_.Clone();
      customized_ = other.customized_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CosmeticUsingProtoV2 Clone() {
      return new CosmeticUsingProtoV2(this);
    }

    /// <summary>Field number for the "cosmeticInUsed" field.</summary>
    public const int CosmeticInUsedFieldNumber = 1;
    private static readonly pbc::MapField<string, long>.Codec _map_cosmeticInUsed_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 10);
    private readonly pbc::MapField<string, long> cosmeticInUsed_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, long> CosmeticInUsed {
      get { return cosmeticInUsed_; }
    }

    /// <summary>Field number for the "customized" field.</summary>
    public const int CustomizedFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Thetan.Shared.V1.Customized>.Codec _map_customized_codec
        = new pbc::MapField<string, global::Thetan.Shared.V1.Customized>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Thetan.Shared.V1.Customized.Parser), 18);
    private readonly pbc::MapField<string, global::Thetan.Shared.V1.Customized> customized_ = new pbc::MapField<string, global::Thetan.Shared.V1.Customized>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Thetan.Shared.V1.Customized> Customized {
      get { return customized_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CosmeticUsingProtoV2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CosmeticUsingProtoV2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!CosmeticInUsed.Equals(other.CosmeticInUsed)) return false;
      if (!Customized.Equals(other.Customized)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= CosmeticInUsed.GetHashCode();
      hash ^= Customized.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      cosmeticInUsed_.WriteTo(output, _map_cosmeticInUsed_codec);
      customized_.WriteTo(output, _map_customized_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      cosmeticInUsed_.WriteTo(ref output, _map_cosmeticInUsed_codec);
      customized_.WriteTo(ref output, _map_customized_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += cosmeticInUsed_.CalculateSize(_map_cosmeticInUsed_codec);
      size += customized_.CalculateSize(_map_customized_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CosmeticUsingProtoV2 other) {
      if (other == null) {
        return;
      }
      cosmeticInUsed_.Add(other.cosmeticInUsed_);
      customized_.Add(other.customized_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cosmeticInUsed_.AddEntriesFrom(input, _map_cosmeticInUsed_codec);
            break;
          }
          case 18: {
            customized_.AddEntriesFrom(input, _map_customized_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            cosmeticInUsed_.AddEntriesFrom(ref input, _map_cosmeticInUsed_codec);
            break;
          }
          case 18: {
            customized_.AddEntriesFrom(ref input, _map_customized_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateMatchOnboardRequest : pb::IMessage<CreateMatchOnboardRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateMatchOnboardRequest> _parser = new pb::MessageParser<CreateMatchOnboardRequest>(() => new CreateMatchOnboardRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateMatchOnboardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateMatchOnboardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateMatchOnboardRequest(CreateMatchOnboardRequest other) : this() {
      userID_ = other.userID_;
      lastRound_ = other.lastRound_ != null ? other.lastRound_.Clone() : null;
      operationSystem_ = other.operationSystem_;
      appVersion_ = other.appVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateMatchOnboardRequest Clone() {
      return new CreateMatchOnboardRequest(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private string userID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserID {
      get { return userID_; }
      set {
        userID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastRound" field.</summary>
    public const int LastRoundFieldNumber = 2;
    private global::Thetan.Shared.V1.RoundStat lastRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Shared.V1.RoundStat LastRound {
      get { return lastRound_; }
      set {
        lastRound_ = value;
      }
    }

    /// <summary>Field number for the "operationSystem" field.</summary>
    public const int OperationSystemFieldNumber = 3;
    private string operationSystem_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OperationSystem {
      get { return operationSystem_; }
      set {
        operationSystem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "appVersion" field.</summary>
    public const int AppVersionFieldNumber = 4;
    private string appVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AppVersion {
      get { return appVersion_; }
      set {
        appVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateMatchOnboardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateMatchOnboardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (!object.Equals(LastRound, other.LastRound)) return false;
      if (OperationSystem != other.OperationSystem) return false;
      if (AppVersion != other.AppVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID.Length != 0) hash ^= UserID.GetHashCode();
      if (lastRound_ != null) hash ^= LastRound.GetHashCode();
      if (OperationSystem.Length != 0) hash ^= OperationSystem.GetHashCode();
      if (AppVersion.Length != 0) hash ^= AppVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserID);
      }
      if (lastRound_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LastRound);
      }
      if (OperationSystem.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OperationSystem);
      }
      if (AppVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AppVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserID);
      }
      if (lastRound_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LastRound);
      }
      if (OperationSystem.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OperationSystem);
      }
      if (AppVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AppVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserID);
      }
      if (lastRound_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastRound);
      }
      if (OperationSystem.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperationSystem);
      }
      if (AppVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateMatchOnboardRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserID.Length != 0) {
        UserID = other.UserID;
      }
      if (other.lastRound_ != null) {
        if (lastRound_ == null) {
          LastRound = new global::Thetan.Shared.V1.RoundStat();
        }
        LastRound.MergeFrom(other.LastRound);
      }
      if (other.OperationSystem.Length != 0) {
        OperationSystem = other.OperationSystem;
      }
      if (other.AppVersion.Length != 0) {
        AppVersion = other.AppVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserID = input.ReadString();
            break;
          }
          case 18: {
            if (lastRound_ == null) {
              LastRound = new global::Thetan.Shared.V1.RoundStat();
            }
            input.ReadMessage(LastRound);
            break;
          }
          case 26: {
            OperationSystem = input.ReadString();
            break;
          }
          case 34: {
            AppVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserID = input.ReadString();
            break;
          }
          case 18: {
            if (lastRound_ == null) {
              LastRound = new global::Thetan.Shared.V1.RoundStat();
            }
            input.ReadMessage(LastRound);
            break;
          }
          case 26: {
            OperationSystem = input.ReadString();
            break;
          }
          case 34: {
            AppVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RoundStat : pb::IMessage<RoundStat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoundStat> _parser = new pb::MessageParser<RoundStat>(() => new RoundStat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoundStat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Shared.V1.MatchReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundStat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundStat(RoundStat other) : this() {
      roundId_ = other.roundId_;
      mapId_ = other.mapId_;
      mapDifficulty_ = other.mapDifficulty_;
      timeInRound_ = other.timeInRound_;
      roundComplete_ = other.roundComplete_;
      controlDoubleJump_ = other.controlDoubleJump_;
      controlMoveCamera_ = other.controlMoveCamera_;
      passedCP_ = other.passedCP_;
      maxCP_ = other.maxCP_;
      death_ = other.death_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundStat Clone() {
      return new RoundStat(this);
    }

    /// <summary>Field number for the "roundId" field.</summary>
    public const int RoundIdFieldNumber = 1;
    private int roundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoundId {
      get { return roundId_; }
      set {
        roundId_ = value;
      }
    }

    /// <summary>Field number for the "mapId" field.</summary>
    public const int MapIdFieldNumber = 2;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "mapDifficulty" field.</summary>
    public const int MapDifficultyFieldNumber = 3;
    private int mapDifficulty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapDifficulty {
      get { return mapDifficulty_; }
      set {
        mapDifficulty_ = value;
      }
    }

    /// <summary>Field number for the "timeInRound" field.</summary>
    public const int TimeInRoundFieldNumber = 4;
    private float timeInRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TimeInRound {
      get { return timeInRound_; }
      set {
        timeInRound_ = value;
      }
    }

    /// <summary>Field number for the "roundComplete" field.</summary>
    public const int RoundCompleteFieldNumber = 5;
    private bool roundComplete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RoundComplete {
      get { return roundComplete_; }
      set {
        roundComplete_ = value;
      }
    }

    /// <summary>Field number for the "controlDoubleJump" field.</summary>
    public const int ControlDoubleJumpFieldNumber = 6;
    private int controlDoubleJump_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ControlDoubleJump {
      get { return controlDoubleJump_; }
      set {
        controlDoubleJump_ = value;
      }
    }

    /// <summary>Field number for the "controlMoveCamera" field.</summary>
    public const int ControlMoveCameraFieldNumber = 7;
    private int controlMoveCamera_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ControlMoveCamera {
      get { return controlMoveCamera_; }
      set {
        controlMoveCamera_ = value;
      }
    }

    /// <summary>Field number for the "passedCP" field.</summary>
    public const int PassedCPFieldNumber = 8;
    private int passedCP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PassedCP {
      get { return passedCP_; }
      set {
        passedCP_ = value;
      }
    }

    /// <summary>Field number for the "maxCP" field.</summary>
    public const int MaxCPFieldNumber = 9;
    private int maxCP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxCP {
      get { return maxCP_; }
      set {
        maxCP_ = value;
      }
    }

    /// <summary>Field number for the "Death" field.</summary>
    public const int DeathFieldNumber = 10;
    private int death_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Death {
      get { return death_; }
      set {
        death_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoundStat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoundStat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoundId != other.RoundId) return false;
      if (MapId != other.MapId) return false;
      if (MapDifficulty != other.MapDifficulty) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TimeInRound, other.TimeInRound)) return false;
      if (RoundComplete != other.RoundComplete) return false;
      if (ControlDoubleJump != other.ControlDoubleJump) return false;
      if (ControlMoveCamera != other.ControlMoveCamera) return false;
      if (PassedCP != other.PassedCP) return false;
      if (MaxCP != other.MaxCP) return false;
      if (Death != other.Death) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoundId != 0) hash ^= RoundId.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (MapDifficulty != 0) hash ^= MapDifficulty.GetHashCode();
      if (TimeInRound != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TimeInRound);
      if (RoundComplete != false) hash ^= RoundComplete.GetHashCode();
      if (ControlDoubleJump != 0) hash ^= ControlDoubleJump.GetHashCode();
      if (ControlMoveCamera != 0) hash ^= ControlMoveCamera.GetHashCode();
      if (PassedCP != 0) hash ^= PassedCP.GetHashCode();
      if (MaxCP != 0) hash ^= MaxCP.GetHashCode();
      if (Death != 0) hash ^= Death.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoundId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoundId);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MapId);
      }
      if (MapDifficulty != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MapDifficulty);
      }
      if (TimeInRound != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(TimeInRound);
      }
      if (RoundComplete != false) {
        output.WriteRawTag(40);
        output.WriteBool(RoundComplete);
      }
      if (ControlDoubleJump != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ControlDoubleJump);
      }
      if (ControlMoveCamera != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ControlMoveCamera);
      }
      if (PassedCP != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PassedCP);
      }
      if (MaxCP != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MaxCP);
      }
      if (Death != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Death);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoundId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoundId);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MapId);
      }
      if (MapDifficulty != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MapDifficulty);
      }
      if (TimeInRound != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(TimeInRound);
      }
      if (RoundComplete != false) {
        output.WriteRawTag(40);
        output.WriteBool(RoundComplete);
      }
      if (ControlDoubleJump != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ControlDoubleJump);
      }
      if (ControlMoveCamera != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ControlMoveCamera);
      }
      if (PassedCP != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PassedCP);
      }
      if (MaxCP != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MaxCP);
      }
      if (Death != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Death);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoundId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoundId);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (MapDifficulty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapDifficulty);
      }
      if (TimeInRound != 0F) {
        size += 1 + 4;
      }
      if (RoundComplete != false) {
        size += 1 + 1;
      }
      if (ControlDoubleJump != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ControlDoubleJump);
      }
      if (ControlMoveCamera != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ControlMoveCamera);
      }
      if (PassedCP != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PassedCP);
      }
      if (MaxCP != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxCP);
      }
      if (Death != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Death);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoundStat other) {
      if (other == null) {
        return;
      }
      if (other.RoundId != 0) {
        RoundId = other.RoundId;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.MapDifficulty != 0) {
        MapDifficulty = other.MapDifficulty;
      }
      if (other.TimeInRound != 0F) {
        TimeInRound = other.TimeInRound;
      }
      if (other.RoundComplete != false) {
        RoundComplete = other.RoundComplete;
      }
      if (other.ControlDoubleJump != 0) {
        ControlDoubleJump = other.ControlDoubleJump;
      }
      if (other.ControlMoveCamera != 0) {
        ControlMoveCamera = other.ControlMoveCamera;
      }
      if (other.PassedCP != 0) {
        PassedCP = other.PassedCP;
      }
      if (other.MaxCP != 0) {
        MaxCP = other.MaxCP;
      }
      if (other.Death != 0) {
        Death = other.Death;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoundId = input.ReadInt32();
            break;
          }
          case 16: {
            MapId = input.ReadInt32();
            break;
          }
          case 24: {
            MapDifficulty = input.ReadInt32();
            break;
          }
          case 37: {
            TimeInRound = input.ReadFloat();
            break;
          }
          case 40: {
            RoundComplete = input.ReadBool();
            break;
          }
          case 48: {
            ControlDoubleJump = input.ReadInt32();
            break;
          }
          case 56: {
            ControlMoveCamera = input.ReadInt32();
            break;
          }
          case 64: {
            PassedCP = input.ReadInt32();
            break;
          }
          case 72: {
            MaxCP = input.ReadInt32();
            break;
          }
          case 80: {
            Death = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoundId = input.ReadInt32();
            break;
          }
          case 16: {
            MapId = input.ReadInt32();
            break;
          }
          case 24: {
            MapDifficulty = input.ReadInt32();
            break;
          }
          case 37: {
            TimeInRound = input.ReadFloat();
            break;
          }
          case 40: {
            RoundComplete = input.ReadBool();
            break;
          }
          case 48: {
            ControlDoubleJump = input.ReadInt32();
            break;
          }
          case 56: {
            ControlMoveCamera = input.ReadInt32();
            break;
          }
          case 64: {
            PassedCP = input.ReadInt32();
            break;
          }
          case 72: {
            MaxCP = input.ReadInt32();
            break;
          }
          case 80: {
            Death = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
