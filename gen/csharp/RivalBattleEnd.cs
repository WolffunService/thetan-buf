// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RivalBattleEnd.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Core.Proto {

  /// <summary>Holder for reflection information generated from RivalBattleEnd.proto</summary>
  public static partial class RivalBattleEndReflection {

    #region Descriptor
    /// <summary>File descriptor for RivalBattleEnd.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RivalBattleEndReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRSaXZhbEJhdHRsZUVuZC5wcm90bxIKY29yZS5wcm90bxoPZ2FtZV9pbmZv",
            "LnByb3RvGgttYXRjaC5wcm90byKFAQoJUm91bmRJbmZvEhgKB3JvdW5kSWQY",
            "ASABKAVSB3JvdW5kSWQSFAoFbWFwSWQYAiABKAVSBW1hcElkEiYKDmRpZmZp",
            "Y3VsdExldmVsGAMgASgFUg5kaWZmaWN1bHRMZXZlbBIgCgt0aW1lSW5Sb3Vu",
            "ZBgEIAEoAVILdGltZUluUm91bmQi5QIKFVJpdmFsQmF0dGxlRW5kUmVxdWVz",
            "dBIYCgdtYXRjaElkGAEgASgJUgdtYXRjaElkEjAKCGdhbWVNb2RlGAIgASgO",
            "MhQuY29yZS5wcm90by5HYW1lTW9kZVIIZ2FtZU1vZGUSNgoKaW5HYW1lTW9k",
            "ZRgDIAEoDjIWLmNvcmUucHJvdG8uSW5HYW1lTW9kZVIKaW5HYW1lTW9kZRIU",
            "CgVpc012cBgEIAEoCFIFaXNNdnASEgoEcmFuaxgFIAEoBVIEcmFuaxIkCg1o",
            "YXNUcmlwbGVLaWxsGAYgASgIUg1oYXNUcmlwbGVLaWxsEiAKC2hhc01lZ2FL",
            "aWxsGAcgASgIUgtoYXNNZWdhS2lsbBJWChNwbGF5ZXJCYXR0bGVFbmREYXRh",
            "GAggAygLMiQuY29yZS5wcm90by5SaXZhbFBsYXllckJhdHRsZUVuZERhdGFS",
            "E3BsYXllckJhdHRsZUVuZERhdGEilgQKEVJpdmFsQmF0dGxlTG9nTXNnEhgK",
            "B21hdGNoSWQYASABKAlSB21hdGNoSWQSGgoIcGxheWVySWQYAiABKAlSCHBs",
            "YXllcklkEh4KCnRpbWVTdWJtaXQYAyABKANSCnRpbWVTdWJtaXQSKAoPb3Bl",
            "cmF0aW9uU3lzdGVtGAQgASgJUg9vcGVyYXRpb25TeXN0ZW0SHgoKYXBwVmVy",
            "c2lvbhgFIAEoCVIKYXBwVmVyc2lvbhIiCgx0cm9waHlSZXdhcmQYBiABKAVS",
            "DHRyb3BoeVJld2FyZBIQCgNleHAYByABKAVSA2V4cBJWChNwbGF5ZXJCYXR0",
            "bGVFbmREYXRhGAggAygLMiQuY29yZS5wcm90by5SaXZhbFBsYXllckJhdHRs",
            "ZUVuZERhdGFSE3BsYXllckJhdHRsZUVuZERhdGESOwoNTGlzdFJvdW5kSW5m",
            "bxgJIAMoCzIVLmNvcmUucHJvdG8uUm91bmRJbmZvUg1MaXN0Um91bmRJbmZv",
            "EhgKB2NvdW50cnkYCiABKAlSB2NvdW50cnkSFgoGYmF0dGxlGAsgASgFUgZi",
            "YXR0bGUSIgoMdGltZUluQmF0dGxlGAwgASgDUgx0aW1lSW5CYXR0bGUSHgoK",
            "dHJvcGh5UmFuaxgNIAEoBVIKdHJvcGh5UmFuaxIgCgt1c2VyUmFua2luZxgO",
            "IAEoBVILdXNlclJhbmtpbmcizgEKGFJpdmFsUGxheWVyQmF0dGxlRW5kRGF0",
            "YRIaCghwbGF5ZXJJZBgBIAEoCVIIcGxheWVySWQSHgoKYmF0dGxlUmFuaxgC",
            "IAEoBVIKYmF0dGxlUmFuaxIaCghtaW5pb25JZBgDIAEoCVIIbWluaW9uSWQS",
            "RAoNY29zbWV0aWNVc2luZxgEIAEoCzIeLmNvcmUucHJvdG8uQ29zbWV0aWNV",
            "c2luZ1Byb3RvUg1jb3NtZXRpY1VzaW5nEhQKBWJyYWluGAUgASgFUgVicmFp",
            "bkKBAQoOY29tLmNvcmUucHJvdG9CE1JpdmFsQmF0dGxlRW5kUHJvdG9QAVoR",
            "dGhldGFuLWJ1Zi9nZW4vZ2+iAgNDUFiqAgpDb3JlLlByb3RvygIKQ29yZVxQ",
            "cm90b+ICFkNvcmVcUHJvdG9cR1BCTWV0YWRhdGHqAgtDb3JlOjpQcm90b2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Core.Proto.GameInfoReflection.Descriptor, global::Core.Proto.MatchReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.RoundInfo), global::Core.Proto.RoundInfo.Parser, new[]{ "RoundId", "MapId", "DifficultLevel", "TimeInRound" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.RivalBattleEndRequest), global::Core.Proto.RivalBattleEndRequest.Parser, new[]{ "MatchId", "GameMode", "InGameMode", "IsMvp", "Rank", "HasTripleKill", "HasMegaKill", "PlayerBattleEndData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.RivalBattleLogMsg), global::Core.Proto.RivalBattleLogMsg.Parser, new[]{ "MatchId", "PlayerId", "TimeSubmit", "OperationSystem", "AppVersion", "TrophyReward", "Exp", "PlayerBattleEndData", "ListRoundInfo", "Country", "Battle", "TimeInBattle", "TrophyRank", "UserRanking" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.RivalPlayerBattleEndData), global::Core.Proto.RivalPlayerBattleEndData.Parser, new[]{ "PlayerId", "BattleRank", "MinionId", "CosmeticUsing", "Brain" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RoundInfo : pb::IMessage<RoundInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoundInfo> _parser = new pb::MessageParser<RoundInfo>(() => new RoundInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoundInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.RivalBattleEndReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo(RoundInfo other) : this() {
      roundId_ = other.roundId_;
      mapId_ = other.mapId_;
      difficultLevel_ = other.difficultLevel_;
      timeInRound_ = other.timeInRound_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo Clone() {
      return new RoundInfo(this);
    }

    /// <summary>Field number for the "roundId" field.</summary>
    public const int RoundIdFieldNumber = 1;
    private int roundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoundId {
      get { return roundId_; }
      set {
        roundId_ = value;
      }
    }

    /// <summary>Field number for the "mapId" field.</summary>
    public const int MapIdFieldNumber = 2;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "difficultLevel" field.</summary>
    public const int DifficultLevelFieldNumber = 3;
    private int difficultLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DifficultLevel {
      get { return difficultLevel_; }
      set {
        difficultLevel_ = value;
      }
    }

    /// <summary>Field number for the "timeInRound" field.</summary>
    public const int TimeInRoundFieldNumber = 4;
    private double timeInRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TimeInRound {
      get { return timeInRound_; }
      set {
        timeInRound_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoundInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoundInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoundId != other.RoundId) return false;
      if (MapId != other.MapId) return false;
      if (DifficultLevel != other.DifficultLevel) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimeInRound, other.TimeInRound)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoundId != 0) hash ^= RoundId.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (DifficultLevel != 0) hash ^= DifficultLevel.GetHashCode();
      if (TimeInRound != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimeInRound);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoundId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoundId);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MapId);
      }
      if (DifficultLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DifficultLevel);
      }
      if (TimeInRound != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(TimeInRound);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoundId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoundId);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MapId);
      }
      if (DifficultLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DifficultLevel);
      }
      if (TimeInRound != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(TimeInRound);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoundId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoundId);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (DifficultLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DifficultLevel);
      }
      if (TimeInRound != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoundInfo other) {
      if (other == null) {
        return;
      }
      if (other.RoundId != 0) {
        RoundId = other.RoundId;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.DifficultLevel != 0) {
        DifficultLevel = other.DifficultLevel;
      }
      if (other.TimeInRound != 0D) {
        TimeInRound = other.TimeInRound;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoundId = input.ReadInt32();
            break;
          }
          case 16: {
            MapId = input.ReadInt32();
            break;
          }
          case 24: {
            DifficultLevel = input.ReadInt32();
            break;
          }
          case 33: {
            TimeInRound = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoundId = input.ReadInt32();
            break;
          }
          case 16: {
            MapId = input.ReadInt32();
            break;
          }
          case 24: {
            DifficultLevel = input.ReadInt32();
            break;
          }
          case 33: {
            TimeInRound = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RivalBattleEndRequest : pb::IMessage<RivalBattleEndRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RivalBattleEndRequest> _parser = new pb::MessageParser<RivalBattleEndRequest>(() => new RivalBattleEndRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RivalBattleEndRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.RivalBattleEndReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RivalBattleEndRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RivalBattleEndRequest(RivalBattleEndRequest other) : this() {
      matchId_ = other.matchId_;
      gameMode_ = other.gameMode_;
      inGameMode_ = other.inGameMode_;
      isMvp_ = other.isMvp_;
      rank_ = other.rank_;
      hasTripleKill_ = other.hasTripleKill_;
      hasMegaKill_ = other.hasMegaKill_;
      playerBattleEndData_ = other.playerBattleEndData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RivalBattleEndRequest Clone() {
      return new RivalBattleEndRequest(this);
    }

    /// <summary>Field number for the "matchId" field.</summary>
    public const int MatchIdFieldNumber = 1;
    private string matchId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MatchId {
      get { return matchId_; }
      set {
        matchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameMode" field.</summary>
    public const int GameModeFieldNumber = 2;
    private global::Core.Proto.GameMode gameMode_ = global::Core.Proto.GameMode.Ranked;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.GameMode GameMode {
      get { return gameMode_; }
      set {
        gameMode_ = value;
      }
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 3;
    private global::Core.Proto.InGameMode inGameMode_ = global::Core.Proto.InGameMode.TeamCollectStar;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.InGameMode InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    /// <summary>Field number for the "isMvp" field.</summary>
    public const int IsMvpFieldNumber = 4;
    private bool isMvp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMvp {
      get { return isMvp_; }
      set {
        isMvp_ = value;
      }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 5;
    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "hasTripleKill" field.</summary>
    public const int HasTripleKillFieldNumber = 6;
    private bool hasTripleKill_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTripleKill {
      get { return hasTripleKill_; }
      set {
        hasTripleKill_ = value;
      }
    }

    /// <summary>Field number for the "hasMegaKill" field.</summary>
    public const int HasMegaKillFieldNumber = 7;
    private bool hasMegaKill_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMegaKill {
      get { return hasMegaKill_; }
      set {
        hasMegaKill_ = value;
      }
    }

    /// <summary>Field number for the "playerBattleEndData" field.</summary>
    public const int PlayerBattleEndDataFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Core.Proto.RivalPlayerBattleEndData> _repeated_playerBattleEndData_codec
        = pb::FieldCodec.ForMessage(66, global::Core.Proto.RivalPlayerBattleEndData.Parser);
    private readonly pbc::RepeatedField<global::Core.Proto.RivalPlayerBattleEndData> playerBattleEndData_ = new pbc::RepeatedField<global::Core.Proto.RivalPlayerBattleEndData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Core.Proto.RivalPlayerBattleEndData> PlayerBattleEndData {
      get { return playerBattleEndData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RivalBattleEndRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RivalBattleEndRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchId != other.MatchId) return false;
      if (GameMode != other.GameMode) return false;
      if (InGameMode != other.InGameMode) return false;
      if (IsMvp != other.IsMvp) return false;
      if (Rank != other.Rank) return false;
      if (HasTripleKill != other.HasTripleKill) return false;
      if (HasMegaKill != other.HasMegaKill) return false;
      if(!playerBattleEndData_.Equals(other.playerBattleEndData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchId.Length != 0) hash ^= MatchId.GetHashCode();
      if (GameMode != global::Core.Proto.GameMode.Ranked) hash ^= GameMode.GetHashCode();
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) hash ^= InGameMode.GetHashCode();
      if (IsMvp != false) hash ^= IsMvp.GetHashCode();
      if (Rank != 0) hash ^= Rank.GetHashCode();
      if (HasTripleKill != false) hash ^= HasTripleKill.GetHashCode();
      if (HasMegaKill != false) hash ^= HasMegaKill.GetHashCode();
      hash ^= playerBattleEndData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      if (GameMode != global::Core.Proto.GameMode.Ranked) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        output.WriteRawTag(24);
        output.WriteEnum((int) InGameMode);
      }
      if (IsMvp != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsMvp);
      }
      if (Rank != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Rank);
      }
      if (HasTripleKill != false) {
        output.WriteRawTag(48);
        output.WriteBool(HasTripleKill);
      }
      if (HasMegaKill != false) {
        output.WriteRawTag(56);
        output.WriteBool(HasMegaKill);
      }
      playerBattleEndData_.WriteTo(output, _repeated_playerBattleEndData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      if (GameMode != global::Core.Proto.GameMode.Ranked) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        output.WriteRawTag(24);
        output.WriteEnum((int) InGameMode);
      }
      if (IsMvp != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsMvp);
      }
      if (Rank != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Rank);
      }
      if (HasTripleKill != false) {
        output.WriteRawTag(48);
        output.WriteBool(HasTripleKill);
      }
      if (HasMegaKill != false) {
        output.WriteRawTag(56);
        output.WriteBool(HasMegaKill);
      }
      playerBattleEndData_.WriteTo(ref output, _repeated_playerBattleEndData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MatchId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchId);
      }
      if (GameMode != global::Core.Proto.GameMode.Ranked) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InGameMode);
      }
      if (IsMvp != false) {
        size += 1 + 1;
      }
      if (Rank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (HasTripleKill != false) {
        size += 1 + 1;
      }
      if (HasMegaKill != false) {
        size += 1 + 1;
      }
      size += playerBattleEndData_.CalculateSize(_repeated_playerBattleEndData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RivalBattleEndRequest other) {
      if (other == null) {
        return;
      }
      if (other.MatchId.Length != 0) {
        MatchId = other.MatchId;
      }
      if (other.GameMode != global::Core.Proto.GameMode.Ranked) {
        GameMode = other.GameMode;
      }
      if (other.InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        InGameMode = other.InGameMode;
      }
      if (other.IsMvp != false) {
        IsMvp = other.IsMvp;
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      if (other.HasTripleKill != false) {
        HasTripleKill = other.HasTripleKill;
      }
      if (other.HasMegaKill != false) {
        HasMegaKill = other.HasMegaKill;
      }
      playerBattleEndData_.Add(other.playerBattleEndData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 16: {
            GameMode = (global::Core.Proto.GameMode) input.ReadEnum();
            break;
          }
          case 24: {
            InGameMode = (global::Core.Proto.InGameMode) input.ReadEnum();
            break;
          }
          case 32: {
            IsMvp = input.ReadBool();
            break;
          }
          case 40: {
            Rank = input.ReadInt32();
            break;
          }
          case 48: {
            HasTripleKill = input.ReadBool();
            break;
          }
          case 56: {
            HasMegaKill = input.ReadBool();
            break;
          }
          case 66: {
            playerBattleEndData_.AddEntriesFrom(input, _repeated_playerBattleEndData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 16: {
            GameMode = (global::Core.Proto.GameMode) input.ReadEnum();
            break;
          }
          case 24: {
            InGameMode = (global::Core.Proto.InGameMode) input.ReadEnum();
            break;
          }
          case 32: {
            IsMvp = input.ReadBool();
            break;
          }
          case 40: {
            Rank = input.ReadInt32();
            break;
          }
          case 48: {
            HasTripleKill = input.ReadBool();
            break;
          }
          case 56: {
            HasMegaKill = input.ReadBool();
            break;
          }
          case 66: {
            playerBattleEndData_.AddEntriesFrom(ref input, _repeated_playerBattleEndData_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RivalBattleLogMsg : pb::IMessage<RivalBattleLogMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RivalBattleLogMsg> _parser = new pb::MessageParser<RivalBattleLogMsg>(() => new RivalBattleLogMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RivalBattleLogMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.RivalBattleEndReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RivalBattleLogMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RivalBattleLogMsg(RivalBattleLogMsg other) : this() {
      matchId_ = other.matchId_;
      playerId_ = other.playerId_;
      timeSubmit_ = other.timeSubmit_;
      operationSystem_ = other.operationSystem_;
      appVersion_ = other.appVersion_;
      trophyReward_ = other.trophyReward_;
      exp_ = other.exp_;
      playerBattleEndData_ = other.playerBattleEndData_.Clone();
      listRoundInfo_ = other.listRoundInfo_.Clone();
      country_ = other.country_;
      battle_ = other.battle_;
      timeInBattle_ = other.timeInBattle_;
      trophyRank_ = other.trophyRank_;
      userRanking_ = other.userRanking_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RivalBattleLogMsg Clone() {
      return new RivalBattleLogMsg(this);
    }

    /// <summary>Field number for the "matchId" field.</summary>
    public const int MatchIdFieldNumber = 1;
    private string matchId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MatchId {
      get { return matchId_; }
      set {
        matchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timeSubmit" field.</summary>
    public const int TimeSubmitFieldNumber = 3;
    private long timeSubmit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TimeSubmit {
      get { return timeSubmit_; }
      set {
        timeSubmit_ = value;
      }
    }

    /// <summary>Field number for the "operationSystem" field.</summary>
    public const int OperationSystemFieldNumber = 4;
    private string operationSystem_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OperationSystem {
      get { return operationSystem_; }
      set {
        operationSystem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "appVersion" field.</summary>
    public const int AppVersionFieldNumber = 5;
    private string appVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AppVersion {
      get { return appVersion_; }
      set {
        appVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trophyReward" field.</summary>
    public const int TrophyRewardFieldNumber = 6;
    private int trophyReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrophyReward {
      get { return trophyReward_; }
      set {
        trophyReward_ = value;
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 7;
    private int exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "playerBattleEndData" field.</summary>
    public const int PlayerBattleEndDataFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Core.Proto.RivalPlayerBattleEndData> _repeated_playerBattleEndData_codec
        = pb::FieldCodec.ForMessage(66, global::Core.Proto.RivalPlayerBattleEndData.Parser);
    private readonly pbc::RepeatedField<global::Core.Proto.RivalPlayerBattleEndData> playerBattleEndData_ = new pbc::RepeatedField<global::Core.Proto.RivalPlayerBattleEndData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Core.Proto.RivalPlayerBattleEndData> PlayerBattleEndData {
      get { return playerBattleEndData_; }
    }

    /// <summary>Field number for the "ListRoundInfo" field.</summary>
    public const int ListRoundInfoFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Core.Proto.RoundInfo> _repeated_listRoundInfo_codec
        = pb::FieldCodec.ForMessage(74, global::Core.Proto.RoundInfo.Parser);
    private readonly pbc::RepeatedField<global::Core.Proto.RoundInfo> listRoundInfo_ = new pbc::RepeatedField<global::Core.Proto.RoundInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Core.Proto.RoundInfo> ListRoundInfo {
      get { return listRoundInfo_; }
    }

    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 10;
    private string country_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "battle" field.</summary>
    public const int BattleFieldNumber = 11;
    private int battle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Battle {
      get { return battle_; }
      set {
        battle_ = value;
      }
    }

    /// <summary>Field number for the "timeInBattle" field.</summary>
    public const int TimeInBattleFieldNumber = 12;
    private long timeInBattle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TimeInBattle {
      get { return timeInBattle_; }
      set {
        timeInBattle_ = value;
      }
    }

    /// <summary>Field number for the "trophyRank" field.</summary>
    public const int TrophyRankFieldNumber = 13;
    private int trophyRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrophyRank {
      get { return trophyRank_; }
      set {
        trophyRank_ = value;
      }
    }

    /// <summary>Field number for the "userRanking" field.</summary>
    public const int UserRankingFieldNumber = 14;
    private int userRanking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserRanking {
      get { return userRanking_; }
      set {
        userRanking_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RivalBattleLogMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RivalBattleLogMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchId != other.MatchId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (TimeSubmit != other.TimeSubmit) return false;
      if (OperationSystem != other.OperationSystem) return false;
      if (AppVersion != other.AppVersion) return false;
      if (TrophyReward != other.TrophyReward) return false;
      if (Exp != other.Exp) return false;
      if(!playerBattleEndData_.Equals(other.playerBattleEndData_)) return false;
      if(!listRoundInfo_.Equals(other.listRoundInfo_)) return false;
      if (Country != other.Country) return false;
      if (Battle != other.Battle) return false;
      if (TimeInBattle != other.TimeInBattle) return false;
      if (TrophyRank != other.TrophyRank) return false;
      if (UserRanking != other.UserRanking) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchId.Length != 0) hash ^= MatchId.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (TimeSubmit != 0L) hash ^= TimeSubmit.GetHashCode();
      if (OperationSystem.Length != 0) hash ^= OperationSystem.GetHashCode();
      if (AppVersion.Length != 0) hash ^= AppVersion.GetHashCode();
      if (TrophyReward != 0) hash ^= TrophyReward.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      hash ^= playerBattleEndData_.GetHashCode();
      hash ^= listRoundInfo_.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (Battle != 0) hash ^= Battle.GetHashCode();
      if (TimeInBattle != 0L) hash ^= TimeInBattle.GetHashCode();
      if (TrophyRank != 0) hash ^= TrophyRank.GetHashCode();
      if (UserRanking != 0) hash ^= UserRanking.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerId);
      }
      if (TimeSubmit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TimeSubmit);
      }
      if (OperationSystem.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OperationSystem);
      }
      if (AppVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AppVersion);
      }
      if (TrophyReward != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TrophyReward);
      }
      if (Exp != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Exp);
      }
      playerBattleEndData_.WriteTo(output, _repeated_playerBattleEndData_codec);
      listRoundInfo_.WriteTo(output, _repeated_listRoundInfo_codec);
      if (Country.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Country);
      }
      if (Battle != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Battle);
      }
      if (TimeInBattle != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(TimeInBattle);
      }
      if (TrophyRank != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(TrophyRank);
      }
      if (UserRanking != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(UserRanking);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerId);
      }
      if (TimeSubmit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TimeSubmit);
      }
      if (OperationSystem.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OperationSystem);
      }
      if (AppVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AppVersion);
      }
      if (TrophyReward != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TrophyReward);
      }
      if (Exp != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Exp);
      }
      playerBattleEndData_.WriteTo(ref output, _repeated_playerBattleEndData_codec);
      listRoundInfo_.WriteTo(ref output, _repeated_listRoundInfo_codec);
      if (Country.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Country);
      }
      if (Battle != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Battle);
      }
      if (TimeInBattle != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(TimeInBattle);
      }
      if (TrophyRank != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(TrophyRank);
      }
      if (UserRanking != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(UserRanking);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MatchId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchId);
      }
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (TimeSubmit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeSubmit);
      }
      if (OperationSystem.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperationSystem);
      }
      if (AppVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVersion);
      }
      if (TrophyReward != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrophyReward);
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      size += playerBattleEndData_.CalculateSize(_repeated_playerBattleEndData_codec);
      size += listRoundInfo_.CalculateSize(_repeated_listRoundInfo_codec);
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (Battle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Battle);
      }
      if (TimeInBattle != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeInBattle);
      }
      if (TrophyRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrophyRank);
      }
      if (UserRanking != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserRanking);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RivalBattleLogMsg other) {
      if (other == null) {
        return;
      }
      if (other.MatchId.Length != 0) {
        MatchId = other.MatchId;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.TimeSubmit != 0L) {
        TimeSubmit = other.TimeSubmit;
      }
      if (other.OperationSystem.Length != 0) {
        OperationSystem = other.OperationSystem;
      }
      if (other.AppVersion.Length != 0) {
        AppVersion = other.AppVersion;
      }
      if (other.TrophyReward != 0) {
        TrophyReward = other.TrophyReward;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      playerBattleEndData_.Add(other.playerBattleEndData_);
      listRoundInfo_.Add(other.listRoundInfo_);
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.Battle != 0) {
        Battle = other.Battle;
      }
      if (other.TimeInBattle != 0L) {
        TimeInBattle = other.TimeInBattle;
      }
      if (other.TrophyRank != 0) {
        TrophyRank = other.TrophyRank;
      }
      if (other.UserRanking != 0) {
        UserRanking = other.UserRanking;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 18: {
            PlayerId = input.ReadString();
            break;
          }
          case 24: {
            TimeSubmit = input.ReadInt64();
            break;
          }
          case 34: {
            OperationSystem = input.ReadString();
            break;
          }
          case 42: {
            AppVersion = input.ReadString();
            break;
          }
          case 48: {
            TrophyReward = input.ReadInt32();
            break;
          }
          case 56: {
            Exp = input.ReadInt32();
            break;
          }
          case 66: {
            playerBattleEndData_.AddEntriesFrom(input, _repeated_playerBattleEndData_codec);
            break;
          }
          case 74: {
            listRoundInfo_.AddEntriesFrom(input, _repeated_listRoundInfo_codec);
            break;
          }
          case 82: {
            Country = input.ReadString();
            break;
          }
          case 88: {
            Battle = input.ReadInt32();
            break;
          }
          case 96: {
            TimeInBattle = input.ReadInt64();
            break;
          }
          case 104: {
            TrophyRank = input.ReadInt32();
            break;
          }
          case 112: {
            UserRanking = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 18: {
            PlayerId = input.ReadString();
            break;
          }
          case 24: {
            TimeSubmit = input.ReadInt64();
            break;
          }
          case 34: {
            OperationSystem = input.ReadString();
            break;
          }
          case 42: {
            AppVersion = input.ReadString();
            break;
          }
          case 48: {
            TrophyReward = input.ReadInt32();
            break;
          }
          case 56: {
            Exp = input.ReadInt32();
            break;
          }
          case 66: {
            playerBattleEndData_.AddEntriesFrom(ref input, _repeated_playerBattleEndData_codec);
            break;
          }
          case 74: {
            listRoundInfo_.AddEntriesFrom(ref input, _repeated_listRoundInfo_codec);
            break;
          }
          case 82: {
            Country = input.ReadString();
            break;
          }
          case 88: {
            Battle = input.ReadInt32();
            break;
          }
          case 96: {
            TimeInBattle = input.ReadInt64();
            break;
          }
          case 104: {
            TrophyRank = input.ReadInt32();
            break;
          }
          case 112: {
            UserRanking = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RivalPlayerBattleEndData : pb::IMessage<RivalPlayerBattleEndData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RivalPlayerBattleEndData> _parser = new pb::MessageParser<RivalPlayerBattleEndData>(() => new RivalPlayerBattleEndData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RivalPlayerBattleEndData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.RivalBattleEndReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RivalPlayerBattleEndData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RivalPlayerBattleEndData(RivalPlayerBattleEndData other) : this() {
      playerId_ = other.playerId_;
      battleRank_ = other.battleRank_;
      minionId_ = other.minionId_;
      cosmeticUsing_ = other.cosmeticUsing_ != null ? other.cosmeticUsing_.Clone() : null;
      brain_ = other.brain_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RivalPlayerBattleEndData Clone() {
      return new RivalPlayerBattleEndData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "battleRank" field.</summary>
    public const int BattleRankFieldNumber = 2;
    private int battleRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BattleRank {
      get { return battleRank_; }
      set {
        battleRank_ = value;
      }
    }

    /// <summary>Field number for the "minionId" field.</summary>
    public const int MinionIdFieldNumber = 3;
    private string minionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MinionId {
      get { return minionId_; }
      set {
        minionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cosmeticUsing" field.</summary>
    public const int CosmeticUsingFieldNumber = 4;
    private global::Core.Proto.CosmeticUsingProto cosmeticUsing_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.CosmeticUsingProto CosmeticUsing {
      get { return cosmeticUsing_; }
      set {
        cosmeticUsing_ = value;
      }
    }

    /// <summary>Field number for the "brain" field.</summary>
    public const int BrainFieldNumber = 5;
    private int brain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Brain {
      get { return brain_; }
      set {
        brain_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RivalPlayerBattleEndData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RivalPlayerBattleEndData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (BattleRank != other.BattleRank) return false;
      if (MinionId != other.MinionId) return false;
      if (!object.Equals(CosmeticUsing, other.CosmeticUsing)) return false;
      if (Brain != other.Brain) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (BattleRank != 0) hash ^= BattleRank.GetHashCode();
      if (MinionId.Length != 0) hash ^= MinionId.GetHashCode();
      if (cosmeticUsing_ != null) hash ^= CosmeticUsing.GetHashCode();
      if (Brain != 0) hash ^= Brain.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (BattleRank != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BattleRank);
      }
      if (MinionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MinionId);
      }
      if (cosmeticUsing_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CosmeticUsing);
      }
      if (Brain != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Brain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (BattleRank != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BattleRank);
      }
      if (MinionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MinionId);
      }
      if (cosmeticUsing_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CosmeticUsing);
      }
      if (Brain != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Brain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (BattleRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BattleRank);
      }
      if (MinionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MinionId);
      }
      if (cosmeticUsing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CosmeticUsing);
      }
      if (Brain != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Brain);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RivalPlayerBattleEndData other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.BattleRank != 0) {
        BattleRank = other.BattleRank;
      }
      if (other.MinionId.Length != 0) {
        MinionId = other.MinionId;
      }
      if (other.cosmeticUsing_ != null) {
        if (cosmeticUsing_ == null) {
          CosmeticUsing = new global::Core.Proto.CosmeticUsingProto();
        }
        CosmeticUsing.MergeFrom(other.CosmeticUsing);
      }
      if (other.Brain != 0) {
        Brain = other.Brain;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 16: {
            BattleRank = input.ReadInt32();
            break;
          }
          case 26: {
            MinionId = input.ReadString();
            break;
          }
          case 34: {
            if (cosmeticUsing_ == null) {
              CosmeticUsing = new global::Core.Proto.CosmeticUsingProto();
            }
            input.ReadMessage(CosmeticUsing);
            break;
          }
          case 40: {
            Brain = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 16: {
            BattleRank = input.ReadInt32();
            break;
          }
          case 26: {
            MinionId = input.ReadString();
            break;
          }
          case 34: {
            if (cosmeticUsing_ == null) {
              CosmeticUsing = new global::Core.Proto.CosmeticUsingProto();
            }
            input.ReadMessage(CosmeticUsing);
            break;
          }
          case 40: {
            Brain = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
