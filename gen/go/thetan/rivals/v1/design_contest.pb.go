// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: thetan/rivals/v1/design_contest.proto

package thetan_rivals_v1

import (
	_ "github.com/srikrsna/protoc-gen-gotag/tagger"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	v1 "thetan-buf/gen/go/thetan/shared/v1"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Design struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item   *v1.ItemCustomized `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty" bson:"item"`
	PoseID int32              `protobuf:"varint,2,opt,name=poseID,proto3" json:"poseID,omitempty" bson:"poseId"`
	SkinID int32              `protobuf:"varint,3,opt,name=skinID,proto3" json:"skinID,omitempty" bson:"-"`
}

func (x *Design) Reset() {
	*x = Design{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thetan_rivals_v1_design_contest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Design) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Design) ProtoMessage() {}

func (x *Design) ProtoReflect() protoreflect.Message {
	mi := &file_thetan_rivals_v1_design_contest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Design.ProtoReflect.Descriptor instead.
func (*Design) Descriptor() ([]byte, []int) {
	return file_thetan_rivals_v1_design_contest_proto_rawDescGZIP(), []int{0}
}

func (x *Design) GetItem() *v1.ItemCustomized {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *Design) GetPoseID() int32 {
	if x != nil {
		return x.PoseID
	}
	return 0
}

func (x *Design) GetSkinID() int32 {
	if x != nil {
		return x.SkinID
	}
	return 0
}

type SyncDesign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Design *Design `protobuf:"bytes,1,opt,name=design,proto3" json:"design,omitempty"`
	UserID string  `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *SyncDesign) Reset() {
	*x = SyncDesign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thetan_rivals_v1_design_contest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncDesign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncDesign) ProtoMessage() {}

func (x *SyncDesign) ProtoReflect() protoreflect.Message {
	mi := &file_thetan_rivals_v1_design_contest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncDesign.ProtoReflect.Descriptor instead.
func (*SyncDesign) Descriptor() ([]byte, []int) {
	return file_thetan_rivals_v1_design_contest_proto_rawDescGZIP(), []int{1}
}

func (x *SyncDesign) GetDesign() *Design {
	if x != nil {
		return x.Design
	}
	return nil
}

func (x *SyncDesign) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

var File_thetan_rivals_v1_design_contest_proto protoreflect.FileDescriptor

var file_thetan_rivals_v1_design_contest_proto_rawDesc = []byte{
	0x0a, 0x25, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2f, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e,
	0x72, 0x69, 0x76, 0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x21, 0x74, 0x68, 0x65, 0x74, 0x61,
	0x6e, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x61,
	0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x46, 0x0a, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x68, 0x65,
	0x74, 0x61, 0x6e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x42, 0x10, 0x9a, 0x84,
	0x9e, 0x03, 0x0b, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x52, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x12, 0x2a, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x65, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x12, 0x9a, 0x84, 0x9e, 0x03, 0x0d, 0x62, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x70, 0x6f, 0x73, 0x65, 0x49, 0x64, 0x22, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x65, 0x49, 0x44,
	0x12, 0x25, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0d, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x2d, 0x22, 0x52,
	0x06, 0x73, 0x6b, 0x69, 0x6e, 0x49, 0x44, 0x22, 0x56, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x44,
	0x65, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x52,
	0x06, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42,
	0xc1, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x12, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x33,
	0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2d, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67,
	0x6f, 0x2f, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2f, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x73, 0x2f,
	0x76, 0x31, 0x3b, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x5f, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x73,
	0x5f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x52, 0x58, 0xaa, 0x02, 0x10, 0x54, 0x68, 0x65, 0x74,
	0x61, 0x6e, 0x2e, 0x52, 0x69, 0x76, 0x61, 0x6c, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x10, 0x54,
	0x68, 0x65, 0x74, 0x61, 0x6e, 0x5c, 0x52, 0x69, 0x76, 0x61, 0x6c, 0x73, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x1c, 0x54, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x5c, 0x52, 0x69, 0x76, 0x61, 0x6c, 0x73, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x12, 0x54, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x3a, 0x3a, 0x52, 0x69, 0x76, 0x61, 0x6c, 0x73, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_thetan_rivals_v1_design_contest_proto_rawDescOnce sync.Once
	file_thetan_rivals_v1_design_contest_proto_rawDescData = file_thetan_rivals_v1_design_contest_proto_rawDesc
)

func file_thetan_rivals_v1_design_contest_proto_rawDescGZIP() []byte {
	file_thetan_rivals_v1_design_contest_proto_rawDescOnce.Do(func() {
		file_thetan_rivals_v1_design_contest_proto_rawDescData = protoimpl.X.CompressGZIP(file_thetan_rivals_v1_design_contest_proto_rawDescData)
	})
	return file_thetan_rivals_v1_design_contest_proto_rawDescData
}

var file_thetan_rivals_v1_design_contest_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_thetan_rivals_v1_design_contest_proto_goTypes = []interface{}{
	(*Design)(nil),            // 0: thetan.rivals.v1.Design
	(*SyncDesign)(nil),        // 1: thetan.rivals.v1.SyncDesign
	(*v1.ItemCustomized)(nil), // 2: thetan.shared.v1.ItemCustomized
}
var file_thetan_rivals_v1_design_contest_proto_depIdxs = []int32{
	2, // 0: thetan.rivals.v1.Design.item:type_name -> thetan.shared.v1.ItemCustomized
	0, // 1: thetan.rivals.v1.SyncDesign.design:type_name -> thetan.rivals.v1.Design
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_thetan_rivals_v1_design_contest_proto_init() }
func file_thetan_rivals_v1_design_contest_proto_init() {
	if File_thetan_rivals_v1_design_contest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_thetan_rivals_v1_design_contest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Design); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thetan_rivals_v1_design_contest_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncDesign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_thetan_rivals_v1_design_contest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_thetan_rivals_v1_design_contest_proto_goTypes,
		DependencyIndexes: file_thetan_rivals_v1_design_contest_proto_depIdxs,
		MessageInfos:      file_thetan_rivals_v1_design_contest_proto_msgTypes,
	}.Build()
	File_thetan_rivals_v1_design_contest_proto = out.File
	file_thetan_rivals_v1_design_contest_proto_rawDesc = nil
	file_thetan_rivals_v1_design_contest_proto_goTypes = nil
	file_thetan_rivals_v1_design_contest_proto_depIdxs = nil
}
