// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: thetan/immortal/v1/immortal_bot.proto

package thetan_immortal_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchBotRankingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIDs []string `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
}

func (x *SearchBotRankingRequest) Reset() {
	*x = SearchBotRankingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thetan_immortal_v1_immortal_bot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchBotRankingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBotRankingRequest) ProtoMessage() {}

func (x *SearchBotRankingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thetan_immortal_v1_immortal_bot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBotRankingRequest.ProtoReflect.Descriptor instead.
func (*SearchBotRankingRequest) Descriptor() ([]byte, []int) {
	return file_thetan_immortal_v1_immortal_bot_proto_rawDescGZIP(), []int{0}
}

func (x *SearchBotRankingRequest) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type SearchBotRankingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserRankingByUserID map[string]*BotRanking `protobuf:"bytes,1,rep,name=userRankingByUserID,proto3" json:"userRankingByUserID,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SearchBotRankingResponse) Reset() {
	*x = SearchBotRankingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thetan_immortal_v1_immortal_bot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchBotRankingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBotRankingResponse) ProtoMessage() {}

func (x *SearchBotRankingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thetan_immortal_v1_immortal_bot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBotRankingResponse.ProtoReflect.Descriptor instead.
func (*SearchBotRankingResponse) Descriptor() ([]byte, []int) {
	return file_thetan_immortal_v1_immortal_bot_proto_rawDescGZIP(), []int{1}
}

func (x *SearchBotRankingResponse) GetUserRankingByUserID() map[string]*BotRanking {
	if x != nil {
		return x.UserRankingByUserID
	}
	return nil
}

type BotRanking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Rank   int32  `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	Trophy int32  `protobuf:"varint,3,opt,name=trophy,proto3" json:"trophy,omitempty"`
}

func (x *BotRanking) Reset() {
	*x = BotRanking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thetan_immortal_v1_immortal_bot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotRanking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotRanking) ProtoMessage() {}

func (x *BotRanking) ProtoReflect() protoreflect.Message {
	mi := &file_thetan_immortal_v1_immortal_bot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotRanking.ProtoReflect.Descriptor instead.
func (*BotRanking) Descriptor() ([]byte, []int) {
	return file_thetan_immortal_v1_immortal_bot_proto_rawDescGZIP(), []int{2}
}

func (x *BotRanking) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *BotRanking) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *BotRanking) GetTrophy() int32 {
	if x != nil {
		return x.Trophy
	}
	return 0
}

type CreateManyBotRankingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListBotRanking []*BotRanking `protobuf:"bytes,1,rep,name=ListBotRanking,proto3" json:"ListBotRanking,omitempty"`
}

func (x *CreateManyBotRankingRequest) Reset() {
	*x = CreateManyBotRankingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thetan_immortal_v1_immortal_bot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateManyBotRankingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManyBotRankingRequest) ProtoMessage() {}

func (x *CreateManyBotRankingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thetan_immortal_v1_immortal_bot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManyBotRankingRequest.ProtoReflect.Descriptor instead.
func (*CreateManyBotRankingRequest) Descriptor() ([]byte, []int) {
	return file_thetan_immortal_v1_immortal_bot_proto_rawDescGZIP(), []int{3}
}

func (x *CreateManyBotRankingRequest) GetListBotRanking() []*BotRanking {
	if x != nil {
		return x.ListBotRanking
	}
	return nil
}

type CreateManyBotRankingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotRankingByBotID map[string]*BotRanking `protobuf:"bytes,1,rep,name=botRankingByBotID,proto3" json:"botRankingByBotID,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateManyBotRankingResponse) Reset() {
	*x = CreateManyBotRankingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thetan_immortal_v1_immortal_bot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateManyBotRankingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManyBotRankingResponse) ProtoMessage() {}

func (x *CreateManyBotRankingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thetan_immortal_v1_immortal_bot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManyBotRankingResponse.ProtoReflect.Descriptor instead.
func (*CreateManyBotRankingResponse) Descriptor() ([]byte, []int) {
	return file_thetan_immortal_v1_immortal_bot_proto_rawDescGZIP(), []int{4}
}

func (x *CreateManyBotRankingResponse) GetBotRankingByBotID() map[string]*BotRanking {
	if x != nil {
		return x.BotRankingByBotID
	}
	return nil
}

var File_thetan_immortal_v1_immortal_bot_proto protoreflect.FileDescriptor

var file_thetan_immortal_v1_immortal_bot_proto_rawDesc = []byte{
	0x0a, 0x25, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2f, 0x69, 0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x6f,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e,
	0x69, 0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x22, 0x33, 0x0a, 0x17, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73,
	0x22, 0xfb, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x6f, 0x74, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a,
	0x13, 0x75, 0x73, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x74, 0x68, 0x65,
	0x74, 0x61, 0x6e, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x66, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e, 0x69, 0x6d, 0x6d,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x50,
	0x0a, 0x0a, 0x42, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x6f, 0x70,
	0x68, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x72, 0x6f, 0x70, 0x68, 0x79,
	0x22, 0x65, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x42, 0x6f,
	0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x46, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e,
	0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x74,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x74,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0xfb, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x42, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x11, 0x62, 0x6f, 0x74, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x42, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e, 0x69, 0x6d, 0x6d,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x6e, 0x79, 0x42, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x42, 0x79, 0x42, 0x6f, 0x74, 0x49, 0x44, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x62, 0x6f,
	0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x42, 0x6f, 0x74, 0x49, 0x44, 0x1a,
	0x64, 0x0a, 0x16, 0x42, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x42,
	0x6f, 0x74, 0x49, 0x44, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x68, 0x65,
	0x74, 0x61, 0x6e, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x82, 0x02, 0x0a, 0x12, 0x42, 0x6f, 0x74, 0x49, 0x6d, 0x6d,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x10,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x2b, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x6f, 0x74, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x42, 0x6f, 0x74, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e, 0x69,
	0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x6e, 0x79, 0x42, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e,
	0x69, 0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x42, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xcd, 0x01, 0x0a, 0x16, 0x63,
	0x6f, 0x6d, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x49, 0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x42,
	0x6f, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x37, 0x74, 0x68, 0x65, 0x74, 0x61,
	0x6e, 0x2d, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x68, 0x65,
	0x74, 0x61, 0x6e, 0x2f, 0x69, 0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x3b,
	0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x5f, 0x69, 0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f,
	0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x49, 0x58, 0xaa, 0x02, 0x12, 0x54, 0x68, 0x65, 0x74, 0x61,
	0x6e, 0x2e, 0x49, 0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x12,
	0x54, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x5c, 0x49, 0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x1e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x5c, 0x49, 0x6d, 0x6d, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x54, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x3a, 0x3a, 0x49, 0x6d,
	0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_thetan_immortal_v1_immortal_bot_proto_rawDescOnce sync.Once
	file_thetan_immortal_v1_immortal_bot_proto_rawDescData = file_thetan_immortal_v1_immortal_bot_proto_rawDesc
)

func file_thetan_immortal_v1_immortal_bot_proto_rawDescGZIP() []byte {
	file_thetan_immortal_v1_immortal_bot_proto_rawDescOnce.Do(func() {
		file_thetan_immortal_v1_immortal_bot_proto_rawDescData = protoimpl.X.CompressGZIP(file_thetan_immortal_v1_immortal_bot_proto_rawDescData)
	})
	return file_thetan_immortal_v1_immortal_bot_proto_rawDescData
}

var file_thetan_immortal_v1_immortal_bot_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_thetan_immortal_v1_immortal_bot_proto_goTypes = []interface{}{
	(*SearchBotRankingRequest)(nil),      // 0: thetan.immortal.v1.SearchBotRankingRequest
	(*SearchBotRankingResponse)(nil),     // 1: thetan.immortal.v1.SearchBotRankingResponse
	(*BotRanking)(nil),                   // 2: thetan.immortal.v1.BotRanking
	(*CreateManyBotRankingRequest)(nil),  // 3: thetan.immortal.v1.CreateManyBotRankingRequest
	(*CreateManyBotRankingResponse)(nil), // 4: thetan.immortal.v1.CreateManyBotRankingResponse
	nil,                                  // 5: thetan.immortal.v1.SearchBotRankingResponse.UserRankingByUserIDEntry
	nil,                                  // 6: thetan.immortal.v1.CreateManyBotRankingResponse.BotRankingByBotIDEntry
}
var file_thetan_immortal_v1_immortal_bot_proto_depIdxs = []int32{
	5, // 0: thetan.immortal.v1.SearchBotRankingResponse.userRankingByUserID:type_name -> thetan.immortal.v1.SearchBotRankingResponse.UserRankingByUserIDEntry
	2, // 1: thetan.immortal.v1.CreateManyBotRankingRequest.ListBotRanking:type_name -> thetan.immortal.v1.BotRanking
	6, // 2: thetan.immortal.v1.CreateManyBotRankingResponse.botRankingByBotID:type_name -> thetan.immortal.v1.CreateManyBotRankingResponse.BotRankingByBotIDEntry
	2, // 3: thetan.immortal.v1.SearchBotRankingResponse.UserRankingByUserIDEntry.value:type_name -> thetan.immortal.v1.BotRanking
	2, // 4: thetan.immortal.v1.CreateManyBotRankingResponse.BotRankingByBotIDEntry.value:type_name -> thetan.immortal.v1.BotRanking
	0, // 5: thetan.immortal.v1.BotImmortalService.SearchBotRanking:input_type -> thetan.immortal.v1.SearchBotRankingRequest
	3, // 6: thetan.immortal.v1.BotImmortalService.CreateManyBotRanking:input_type -> thetan.immortal.v1.CreateManyBotRankingRequest
	1, // 7: thetan.immortal.v1.BotImmortalService.SearchBotRanking:output_type -> thetan.immortal.v1.SearchBotRankingResponse
	4, // 8: thetan.immortal.v1.BotImmortalService.CreateManyBotRanking:output_type -> thetan.immortal.v1.CreateManyBotRankingResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_thetan_immortal_v1_immortal_bot_proto_init() }
func file_thetan_immortal_v1_immortal_bot_proto_init() {
	if File_thetan_immortal_v1_immortal_bot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_thetan_immortal_v1_immortal_bot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchBotRankingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thetan_immortal_v1_immortal_bot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchBotRankingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thetan_immortal_v1_immortal_bot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotRanking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thetan_immortal_v1_immortal_bot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateManyBotRankingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thetan_immortal_v1_immortal_bot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateManyBotRankingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_thetan_immortal_v1_immortal_bot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_thetan_immortal_v1_immortal_bot_proto_goTypes,
		DependencyIndexes: file_thetan_immortal_v1_immortal_bot_proto_depIdxs,
		MessageInfos:      file_thetan_immortal_v1_immortal_bot_proto_msgTypes,
	}.Build()
	File_thetan_immortal_v1_immortal_bot_proto = out.File
	file_thetan_immortal_v1_immortal_bot_proto_rawDesc = nil
	file_thetan_immortal_v1_immortal_bot_proto_goTypes = nil
	file_thetan_immortal_v1_immortal_bot_proto_depIdxs = nil
}
