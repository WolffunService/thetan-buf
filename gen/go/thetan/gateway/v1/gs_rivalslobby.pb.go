// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: thetan/gateway/v1/gs_rivalslobby.proto

package thetan_gateway_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	v1 "thetan-buf/gen/go/thetan/rivals/v1"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTownCCURequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TownIDs []string `protobuf:"bytes,1,rep,name=townIDs,proto3" json:"townIDs,omitempty"`
}

func (x *GetTownCCURequest) Reset() {
	*x = GetTownCCURequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTownCCURequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTownCCURequest) ProtoMessage() {}

func (x *GetTownCCURequest) ProtoReflect() protoreflect.Message {
	mi := &file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTownCCURequest.ProtoReflect.Descriptor instead.
func (*GetTownCCURequest) Descriptor() ([]byte, []int) {
	return file_thetan_gateway_v1_gs_rivalslobby_proto_rawDescGZIP(), []int{0}
}

func (x *GetTownCCURequest) GetTownIDs() []string {
	if x != nil {
		return x.TownIDs
	}
	return nil
}

type GetTownCCUResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ccu map[string]int32 `protobuf:"bytes,1,rep,name=ccu,proto3" json:"ccu,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetTownCCUResponse) Reset() {
	*x = GetTownCCUResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTownCCUResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTownCCUResponse) ProtoMessage() {}

func (x *GetTownCCUResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTownCCUResponse.ProtoReflect.Descriptor instead.
func (*GetTownCCUResponse) Descriptor() ([]byte, []int) {
	return file_thetan_gateway_v1_gs_rivalslobby_proto_rawDescGZIP(), []int{1}
}

func (x *GetTownCCUResponse) GetCcu() map[string]int32 {
	if x != nil {
		return x.Ccu
	}
	return nil
}

type TownAllocationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//fishnet ip+port
	ServerIP   string `protobuf:"bytes,1,opt,name=serverIP,proto3" json:"serverIP,omitempty"`
	ServerPort uint32 `protobuf:"varint,2,opt,name=serverPort,proto3" json:"serverPort,omitempty"`
	//town info
	Town string `protobuf:"bytes,3,opt,name=town,proto3" json:"town,omitempty"`
}

func (x *TownAllocationResp) Reset() {
	*x = TownAllocationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TownAllocationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TownAllocationResp) ProtoMessage() {}

func (x *TownAllocationResp) ProtoReflect() protoreflect.Message {
	mi := &file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TownAllocationResp.ProtoReflect.Descriptor instead.
func (*TownAllocationResp) Descriptor() ([]byte, []int) {
	return file_thetan_gateway_v1_gs_rivalslobby_proto_rawDescGZIP(), []int{2}
}

func (x *TownAllocationResp) GetServerIP() string {
	if x != nil {
		return x.ServerIP
	}
	return ""
}

func (x *TownAllocationResp) GetServerPort() uint32 {
	if x != nil {
		return x.ServerPort
	}
	return 0
}

func (x *TownAllocationResp) GetTown() string {
	if x != nil {
		return x.Town
	}
	return ""
}

type AvailableRegionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AvailableRegionsResponse_RegionsData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AvailableRegionsResponse) Reset() {
	*x = AvailableRegionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableRegionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableRegionsResponse) ProtoMessage() {}

func (x *AvailableRegionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableRegionsResponse.ProtoReflect.Descriptor instead.
func (*AvailableRegionsResponse) Descriptor() ([]byte, []int) {
	return file_thetan_gateway_v1_gs_rivalslobby_proto_rawDescGZIP(), []int{3}
}

func (x *AvailableRegionsResponse) GetData() []*AvailableRegionsResponse_RegionsData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AvailableRegionsResponse_RegionsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameServerInfo *TownAllocationResp `protobuf:"bytes,1,opt,name=gameServerInfo,proto3" json:"gameServerInfo,omitempty"`
	Region         string              `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	RegionCode     string              `protobuf:"bytes,3,opt,name=regionCode,proto3" json:"regionCode,omitempty"`
}

func (x *AvailableRegionsResponse_RegionsData) Reset() {
	*x = AvailableRegionsResponse_RegionsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableRegionsResponse_RegionsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableRegionsResponse_RegionsData) ProtoMessage() {}

func (x *AvailableRegionsResponse_RegionsData) ProtoReflect() protoreflect.Message {
	mi := &file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableRegionsResponse_RegionsData.ProtoReflect.Descriptor instead.
func (*AvailableRegionsResponse_RegionsData) Descriptor() ([]byte, []int) {
	return file_thetan_gateway_v1_gs_rivalslobby_proto_rawDescGZIP(), []int{3, 0}
}

func (x *AvailableRegionsResponse_RegionsData) GetGameServerInfo() *TownAllocationResp {
	if x != nil {
		return x.GameServerInfo
	}
	return nil
}

func (x *AvailableRegionsResponse_RegionsData) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AvailableRegionsResponse_RegionsData) GetRegionCode() string {
	if x != nil {
		return x.RegionCode
	}
	return ""
}

var File_thetan_gateway_v1_gs_rivalslobby_proto protoreflect.FileDescriptor

var file_thetan_gateway_v1_gs_rivalslobby_proto_rawDesc = []byte{
	0x0a, 0x26, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x73, 0x5f, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x73, 0x6c, 0x6f, 0x62,
	0x62, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e,
	0x2f, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x2d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x6e, 0x43, 0x43, 0x55, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x77, 0x6e, 0x49, 0x44, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x77, 0x6e, 0x49, 0x44, 0x73, 0x22, 0x8e,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x6e, 0x43, 0x43, 0x55, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x03, 0x63, 0x63, 0x75, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x6e, 0x43, 0x43,
	0x55, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x63, 0x75, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x03, 0x63, 0x63, 0x75, 0x1a, 0x36, 0x0a, 0x08, 0x43, 0x63, 0x75, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x64, 0x0a, 0x12, 0x54, 0x6f, 0x77, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x50, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x77, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x6f, 0x77, 0x6e, 0x22, 0xfe, 0x01, 0x0a, 0x18, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x94, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x4d, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x77, 0x6e,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0e,
	0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x32, 0xab, 0x02, 0x0a, 0x18, 0x54, 0x68, 0x65, 0x74, 0x61,
	0x6e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x69, 0x76, 0x61, 0x6c, 0x73, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x12, 0x54, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x77, 0x6e, 0x12, 0x1b, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e, 0x72, 0x69, 0x76,
	0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x54, 0x6f, 0x77, 0x6e,
	0x1a, 0x25, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x77, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x77, 0x6e, 0x43, 0x43, 0x55, 0x12, 0x24, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x77, 0x6e, 0x43, 0x43, 0x55, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x6e, 0x43, 0x43, 0x55, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0xc8, 0x01, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x68, 0x65,
	0x74, 0x61, 0x6e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x12,
	0x47, 0x73, 0x52, 0x69, 0x76, 0x61, 0x6c, 0x73, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x35, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2d, 0x62, 0x75, 0x66,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x68, 0x65, 0x74, 0x61, 0x6e,
	0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x47,
	0x58, 0xaa, 0x02, 0x11, 0x54, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x11, 0x54, 0x68, 0x65, 0x74, 0x61, 0x6e, 0x5c, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1d, 0x54, 0x68, 0x65, 0x74,
	0x61, 0x6e, 0x5c, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x54, 0x68, 0x65, 0x74,
	0x61, 0x6e, 0x3a, 0x3a, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_thetan_gateway_v1_gs_rivalslobby_proto_rawDescOnce sync.Once
	file_thetan_gateway_v1_gs_rivalslobby_proto_rawDescData = file_thetan_gateway_v1_gs_rivalslobby_proto_rawDesc
)

func file_thetan_gateway_v1_gs_rivalslobby_proto_rawDescGZIP() []byte {
	file_thetan_gateway_v1_gs_rivalslobby_proto_rawDescOnce.Do(func() {
		file_thetan_gateway_v1_gs_rivalslobby_proto_rawDescData = protoimpl.X.CompressGZIP(file_thetan_gateway_v1_gs_rivalslobby_proto_rawDescData)
	})
	return file_thetan_gateway_v1_gs_rivalslobby_proto_rawDescData
}

var file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_thetan_gateway_v1_gs_rivalslobby_proto_goTypes = []interface{}{
	(*GetTownCCURequest)(nil),        // 0: thetan.gateway.v1.GetTownCCURequest
	(*GetTownCCUResponse)(nil),       // 1: thetan.gateway.v1.GetTownCCUResponse
	(*TownAllocationResp)(nil),       // 2: thetan.gateway.v1.TownAllocationResp
	(*AvailableRegionsResponse)(nil), // 3: thetan.gateway.v1.AvailableRegionsResponse
	nil,                              // 4: thetan.gateway.v1.GetTownCCUResponse.CcuEntry
	(*AvailableRegionsResponse_RegionsData)(nil), // 5: thetan.gateway.v1.AvailableRegionsResponse.RegionsData
	(*v1.LobbyTown)(nil),                         // 6: thetan.rivals.v1.LobbyTown
	(*emptypb.Empty)(nil),                        // 7: google.protobuf.Empty
}
var file_thetan_gateway_v1_gs_rivalslobby_proto_depIdxs = []int32{
	4, // 0: thetan.gateway.v1.GetTownCCUResponse.ccu:type_name -> thetan.gateway.v1.GetTownCCUResponse.CcuEntry
	5, // 1: thetan.gateway.v1.AvailableRegionsResponse.data:type_name -> thetan.gateway.v1.AvailableRegionsResponse.RegionsData
	2, // 2: thetan.gateway.v1.AvailableRegionsResponse.RegionsData.gameServerInfo:type_name -> thetan.gateway.v1.TownAllocationResp
	6, // 3: thetan.gateway.v1.ThetanGatewayRivalsLobby.AllocateTown:input_type -> thetan.rivals.v1.LobbyTown
	0, // 4: thetan.gateway.v1.ThetanGatewayRivalsLobby.GetTownCCU:input_type -> thetan.gateway.v1.GetTownCCURequest
	7, // 5: thetan.gateway.v1.ThetanGatewayRivalsLobby.GetAvailableRegions:input_type -> google.protobuf.Empty
	2, // 6: thetan.gateway.v1.ThetanGatewayRivalsLobby.AllocateTown:output_type -> thetan.gateway.v1.TownAllocationResp
	1, // 7: thetan.gateway.v1.ThetanGatewayRivalsLobby.GetTownCCU:output_type -> thetan.gateway.v1.GetTownCCUResponse
	3, // 8: thetan.gateway.v1.ThetanGatewayRivalsLobby.GetAvailableRegions:output_type -> thetan.gateway.v1.AvailableRegionsResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_thetan_gateway_v1_gs_rivalslobby_proto_init() }
func file_thetan_gateway_v1_gs_rivalslobby_proto_init() {
	if File_thetan_gateway_v1_gs_rivalslobby_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTownCCURequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTownCCUResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TownAllocationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableRegionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableRegionsResponse_RegionsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_thetan_gateway_v1_gs_rivalslobby_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_thetan_gateway_v1_gs_rivalslobby_proto_goTypes,
		DependencyIndexes: file_thetan_gateway_v1_gs_rivalslobby_proto_depIdxs,
		MessageInfos:      file_thetan_gateway_v1_gs_rivalslobby_proto_msgTypes,
	}.Build()
	File_thetan_gateway_v1_gs_rivalslobby_proto = out.File
	file_thetan_gateway_v1_gs_rivalslobby_proto_rawDesc = nil
	file_thetan_gateway_v1_gs_rivalslobby_proto_goTypes = nil
	file_thetan_gateway_v1_gs_rivalslobby_proto_depIdxs = nil
}
