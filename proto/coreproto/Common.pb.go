// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.3
// source: proto/Common.proto

package coreproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// trang thai cua player
type PlayerStatus int32

const (
	PlayerStatus_NONE           PlayerStatus = 0
	PlayerStatus_OFFLINE        PlayerStatus = 1
	PlayerStatus_ONLINE         PlayerStatus = 2
	PlayerStatus_IN_PARTY       PlayerStatus = 3
	PlayerStatus_IN_PARTY_READY PlayerStatus = 4
	PlayerStatus_FINDING_BATTLE PlayerStatus = 5
	PlayerStatus_IN_BATTLE      PlayerStatus = 6
	PlayerStatus_DIS_IN_BATTLE  PlayerStatus = 7 //bi disconnect trong khi dang inbattle
)

// Enum value maps for PlayerStatus.
var (
	PlayerStatus_name = map[int32]string{
		0: "NONE",
		1: "OFFLINE",
		2: "ONLINE",
		3: "IN_PARTY",
		4: "IN_PARTY_READY",
		5: "FINDING_BATTLE",
		6: "IN_BATTLE",
		7: "DIS_IN_BATTLE",
	}
	PlayerStatus_value = map[string]int32{
		"NONE":           0,
		"OFFLINE":        1,
		"ONLINE":         2,
		"IN_PARTY":       3,
		"IN_PARTY_READY": 4,
		"FINDING_BATTLE": 5,
		"IN_BATTLE":      6,
		"DIS_IN_BATTLE":  7,
	}
)

func (x PlayerStatus) Enum() *PlayerStatus {
	p := new(PlayerStatus)
	*p = x
	return p
}

func (x PlayerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_Common_proto_enumTypes[0].Descriptor()
}

func (PlayerStatus) Type() protoreflect.EnumType {
	return &file_proto_Common_proto_enumTypes[0]
}

func (x PlayerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerStatus.Descriptor instead.
func (PlayerStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{0}
}

// Chat share party
type ChatActionType int32

const (
	ChatActionType_NONE_ACTION      ChatActionType = 0
	ChatActionType_INVITE           ChatActionType = 1
	ChatActionType_SET_PARTY_STATUS ChatActionType = 2
	ChatActionType_SHARE_GUILD      ChatActionType = 3
	ChatActionType_SET_GUILD_STATUS ChatActionType = 4
)

// Enum value maps for ChatActionType.
var (
	ChatActionType_name = map[int32]string{
		0: "NONE_ACTION",
		1: "INVITE",
		2: "SET_PARTY_STATUS",
		3: "SHARE_GUILD",
		4: "SET_GUILD_STATUS",
	}
	ChatActionType_value = map[string]int32{
		"NONE_ACTION":      0,
		"INVITE":           1,
		"SET_PARTY_STATUS": 2,
		"SHARE_GUILD":      3,
		"SET_GUILD_STATUS": 4,
	}
)

func (x ChatActionType) Enum() *ChatActionType {
	p := new(ChatActionType)
	*p = x
	return p
}

func (x ChatActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_Common_proto_enumTypes[1].Descriptor()
}

func (ChatActionType) Type() protoreflect.EnumType {
	return &file_proto_Common_proto_enumTypes[1]
}

func (x ChatActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatActionType.Descriptor instead.
func (ChatActionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{1}
}

type ChannelChat int32

const (
	ChannelChat_COUNTRY ChannelChat = 0
	ChannelChat_GUILD   ChannelChat = 1
	ChannelChat_Party   ChannelChat = 2
)

// Enum value maps for ChannelChat.
var (
	ChannelChat_name = map[int32]string{
		0: "COUNTRY",
		1: "GUILD",
		2: "Party",
	}
	ChannelChat_value = map[string]int32{
		"COUNTRY": 0,
		"GUILD":   1,
		"Party":   2,
	}
)

func (x ChannelChat) Enum() *ChannelChat {
	p := new(ChannelChat)
	*p = x
	return p
}

func (x ChannelChat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChannelChat) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_Common_proto_enumTypes[2].Descriptor()
}

func (ChannelChat) Type() protoreflect.EnumType {
	return &file_proto_Common_proto_enumTypes[2]
}

func (x ChannelChat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChannelChat.Descriptor instead.
func (ChannelChat) EnumDescriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{2}
}

type GameMode int32

const (
	GameMode_RANKED             GameMode = 0
	GameMode_SPECIAL_EVENT      GameMode = 1
	GameMode_CUSTOM_MODE        GameMode = 2
	GameMode_THETAN_RIVALS_MODE GameMode = 3
)

// Enum value maps for GameMode.
var (
	GameMode_name = map[int32]string{
		0: "RANKED",
		1: "SPECIAL_EVENT",
		2: "CUSTOM_MODE",
		3: "THETAN_RIVALS_MODE",
	}
	GameMode_value = map[string]int32{
		"RANKED":             0,
		"SPECIAL_EVENT":      1,
		"CUSTOM_MODE":        2,
		"THETAN_RIVALS_MODE": 3,
	}
)

func (x GameMode) Enum() *GameMode {
	p := new(GameMode)
	*p = x
	return p
}

func (x GameMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_Common_proto_enumTypes[3].Descriptor()
}

func (GameMode) Type() protoreflect.EnumType {
	return &file_proto_Common_proto_enumTypes[3]
}

func (x GameMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameMode.Descriptor instead.
func (GameMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{3}
}

type InGameMode int32

const (
	InGameMode_TEAM_COLLECT_STAR        InGameMode = 0
	InGameMode_SOLO_SURVIVAL            InGameMode = 1
	InGameMode_DUAL_SURVIVAL            InGameMode = 2
	InGameMode_TEAM_COLLECT_STAR_4_VS_4 InGameMode = 3
	InGameMode_KING                     InGameMode = 5
	InGameMode_DEATH_MATCH              InGameMode = 6
	InGameMode_DEATH_MATCH_3_VS_3       InGameMode = 7
	InGameMode_FLAG                     InGameMode = 8
	InGameMode_TOWER                    InGameMode = 9
	InGameMode_BATTLE_ROYALE            InGameMode = 12
	InGameMode_SQUAD_BATTLE_ROYALE      InGameMode = 13
	InGameMode_DUO_BATTLE_ROYALE        InGameMode = 14
	InGameMode_TRIO_BATTLE_ROAYLE       InGameMode = 15
	InGameMode_THETAN_RIVALS            InGameMode = 20
	InGameMode_NONE_MODE                InGameMode = -1
)

// Enum value maps for InGameMode.
var (
	InGameMode_name = map[int32]string{
		0:  "TEAM_COLLECT_STAR",
		1:  "SOLO_SURVIVAL",
		2:  "DUAL_SURVIVAL",
		3:  "TEAM_COLLECT_STAR_4_VS_4",
		5:  "KING",
		6:  "DEATH_MATCH",
		7:  "DEATH_MATCH_3_VS_3",
		8:  "FLAG",
		9:  "TOWER",
		12: "BATTLE_ROYALE",
		13: "SQUAD_BATTLE_ROYALE",
		14: "DUO_BATTLE_ROYALE",
		15: "TRIO_BATTLE_ROAYLE",
		20: "THETAN_RIVALS",
		-1: "NONE_MODE",
	}
	InGameMode_value = map[string]int32{
		"TEAM_COLLECT_STAR":        0,
		"SOLO_SURVIVAL":            1,
		"DUAL_SURVIVAL":            2,
		"TEAM_COLLECT_STAR_4_VS_4": 3,
		"KING":                     5,
		"DEATH_MATCH":              6,
		"DEATH_MATCH_3_VS_3":       7,
		"FLAG":                     8,
		"TOWER":                    9,
		"BATTLE_ROYALE":            12,
		"SQUAD_BATTLE_ROYALE":      13,
		"DUO_BATTLE_ROYALE":        14,
		"TRIO_BATTLE_ROAYLE":       15,
		"THETAN_RIVALS":            20,
		"NONE_MODE":                -1,
	}
)

func (x InGameMode) Enum() *InGameMode {
	p := new(InGameMode)
	*p = x
	return p
}

func (x InGameMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InGameMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_Common_proto_enumTypes[4].Descriptor()
}

func (InGameMode) Type() protoreflect.EnumType {
	return &file_proto_Common_proto_enumTypes[4]
}

func (x InGameMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InGameMode.Descriptor instead.
func (InGameMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{4}
}

type Currency int32

const (
	Currency_COIN Currency = 0
	Currency_GEM  Currency = 1
)

// Enum value maps for Currency.
var (
	Currency_name = map[int32]string{
		0: "COIN",
		1: "GEM",
	}
	Currency_value = map[string]int32{
		"COIN": 0,
		"GEM":  1,
	}
)

func (x Currency) Enum() *Currency {
	p := new(Currency)
	*p = x
	return p
}

func (x Currency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Currency) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_Common_proto_enumTypes[5].Descriptor()
}

func (Currency) Type() protoreflect.EnumType {
	return &file_proto_Common_proto_enumTypes[5]
}

func (x Currency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Currency.Descriptor instead.
func (Currency) EnumDescriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{5}
}

type CommonErrorCode int32

const (
	CommonErrorCode_SUCCESS                                CommonErrorCode = 0
	CommonErrorCode_ERROR                                  CommonErrorCode = 99
	CommonErrorCode_DISCONNECT_BECAUSE_OTHER_USING_ACCOUNT CommonErrorCode = 93
	CommonErrorCode_UNAUTHENTICATED                        CommonErrorCode = 16
)

// Enum value maps for CommonErrorCode.
var (
	CommonErrorCode_name = map[int32]string{
		0:  "SUCCESS",
		99: "ERROR",
		93: "DISCONNECT_BECAUSE_OTHER_USING_ACCOUNT",
		16: "UNAUTHENTICATED",
	}
	CommonErrorCode_value = map[string]int32{
		"SUCCESS":                                0,
		"ERROR":                                  99,
		"DISCONNECT_BECAUSE_OTHER_USING_ACCOUNT": 93,
		"UNAUTHENTICATED":                        16,
	}
)

func (x CommonErrorCode) Enum() *CommonErrorCode {
	p := new(CommonErrorCode)
	*p = x
	return p
}

func (x CommonErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommonErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_Common_proto_enumTypes[6].Descriptor()
}

func (CommonErrorCode) Type() protoreflect.EnumType {
	return &file_proto_Common_proto_enumTypes[6]
}

func (x CommonErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommonErrorCode.Descriptor instead.
func (CommonErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{6}
}

type InGameTypeModeProto int32

const (
	InGameTypeModeProto_NONE_TYPE_MODE InGameTypeModeProto = 0
	InGameTypeModeProto_TEAM_MODE      InGameTypeModeProto = 1
	InGameTypeModeProto_SOLO_MODE      InGameTypeModeProto = 2
	InGameTypeModeProto_DUO_MODE       InGameTypeModeProto = 3
)

// Enum value maps for InGameTypeModeProto.
var (
	InGameTypeModeProto_name = map[int32]string{
		0: "NONE_TYPE_MODE",
		1: "TEAM_MODE",
		2: "SOLO_MODE",
		3: "DUO_MODE",
	}
	InGameTypeModeProto_value = map[string]int32{
		"NONE_TYPE_MODE": 0,
		"TEAM_MODE":      1,
		"SOLO_MODE":      2,
		"DUO_MODE":       3,
	}
)

func (x InGameTypeModeProto) Enum() *InGameTypeModeProto {
	p := new(InGameTypeModeProto)
	*p = x
	return p
}

func (x InGameTypeModeProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InGameTypeModeProto) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_Common_proto_enumTypes[7].Descriptor()
}

func (InGameTypeModeProto) Type() protoreflect.EnumType {
	return &file_proto_Common_proto_enumTypes[7]
}

func (x InGameTypeModeProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InGameTypeModeProto.Descriptor instead.
func (InGameTypeModeProto) EnumDescriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{7}
}

// thong tin co ban cua player
type PlayerInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        PlayerStatus `protobuf:"varint,11,opt,name=status,proto3,enum=core.proto.PlayerStatus" json:"status,omitempty"`
	PlayerId      string       `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	PlayerName    string       `protobuf:"bytes,2,opt,name=playerName,proto3" json:"playerName,omitempty"`
	AvatarId      int32        `protobuf:"varint,3,opt,name=avatarId,proto3" json:"avatarId,omitempty"`
	AvatarFrameId int32        `protobuf:"varint,4,opt,name=avatarFrameId,proto3" json:"avatarFrameId,omitempty"`
	//int32 arena = 5;
	GuildName     string `protobuf:"bytes,6,opt,name=guildName,proto3" json:"guildName,omitempty"`
	GuildBadgeId  int32  `protobuf:"varint,7,opt,name=guildBadgeId,proto3" json:"guildBadgeId,omitempty"`
	GuildRole     int32  `protobuf:"varint,8,opt,name=guildRole,proto3" json:"guildRole,omitempty"`
	Country       string `protobuf:"bytes,9,opt,name=country,proto3" json:"country,omitempty"`
	TotalTrophies int32  `protobuf:"varint,10,opt,name=totalTrophies,proto3" json:"totalTrophies,omitempty"`
	LastOnline    int32  `protobuf:"varint,12,opt,name=lastOnline,proto3" json:"lastOnline,omitempty"`
	IsDND         bool   `protobuf:"varint,13,opt,name=isDND,proto3" json:"isDND,omitempty"`
	//total battle in leaderboard weekly champion
	BattleWeeklyChampion        int32 `protobuf:"varint,14,opt,name=battleWeeklyChampion,proto3" json:"battleWeeklyChampion,omitempty"`
	HistoryBattleWeeklyChampion int32 `protobuf:"varint,15,opt,name=historyBattleWeeklyChampion,proto3" json:"historyBattleWeeklyChampion,omitempty"`
}

func (x *PlayerInfoProto) Reset() {
	*x = PlayerInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfoProto) ProtoMessage() {}

func (x *PlayerInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfoProto.ProtoReflect.Descriptor instead.
func (*PlayerInfoProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerInfoProto) GetStatus() PlayerStatus {
	if x != nil {
		return x.Status
	}
	return PlayerStatus_NONE
}

func (x *PlayerInfoProto) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerInfoProto) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *PlayerInfoProto) GetAvatarId() int32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *PlayerInfoProto) GetAvatarFrameId() int32 {
	if x != nil {
		return x.AvatarFrameId
	}
	return 0
}

func (x *PlayerInfoProto) GetGuildName() string {
	if x != nil {
		return x.GuildName
	}
	return ""
}

func (x *PlayerInfoProto) GetGuildBadgeId() int32 {
	if x != nil {
		return x.GuildBadgeId
	}
	return 0
}

func (x *PlayerInfoProto) GetGuildRole() int32 {
	if x != nil {
		return x.GuildRole
	}
	return 0
}

func (x *PlayerInfoProto) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PlayerInfoProto) GetTotalTrophies() int32 {
	if x != nil {
		return x.TotalTrophies
	}
	return 0
}

func (x *PlayerInfoProto) GetLastOnline() int32 {
	if x != nil {
		return x.LastOnline
	}
	return 0
}

func (x *PlayerInfoProto) GetIsDND() bool {
	if x != nil {
		return x.IsDND
	}
	return false
}

func (x *PlayerInfoProto) GetBattleWeeklyChampion() int32 {
	if x != nil {
		return x.BattleWeeklyChampion
	}
	return 0
}

func (x *PlayerInfoProto) GetHistoryBattleWeeklyChampion() int32 {
	if x != nil {
		return x.HistoryBattleWeeklyChampion
	}
	return 0
}

type PlayerRegionInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region int32 `protobuf:"varint,1,opt,name=region,proto3" json:"region,omitempty"`
	Ping   int32 `protobuf:"varint,3,opt,name=ping,proto3" json:"ping,omitempty"`
}

func (x *PlayerRegionInfoProto) Reset() {
	*x = PlayerRegionInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerRegionInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerRegionInfoProto) ProtoMessage() {}

func (x *PlayerRegionInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerRegionInfoProto.ProtoReflect.Descriptor instead.
func (*PlayerRegionInfoProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerRegionInfoProto) GetRegion() int32 {
	if x != nil {
		return x.Region
	}
	return 0
}

func (x *PlayerRegionInfoProto) GetPing() int32 {
	if x != nil {
		return x.Ping
	}
	return 0
}

type PlayerGameInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hero        int32  `protobuf:"varint,1,opt,name=hero,proto3" json:"hero,omitempty"`
	Skill1      int32  `protobuf:"varint,2,opt,name=skill1,proto3" json:"skill1,omitempty"`
	Skill2      int32  `protobuf:"varint,3,opt,name=skill2,proto3" json:"skill2,omitempty"`
	Skin        int32  `protobuf:"varint,4,opt,name=skin,proto3" json:"skin,omitempty"`
	HeroLevel   int32  `protobuf:"varint,5,opt,name=heroLevel,proto3" json:"heroLevel,omitempty"`
	Skill1Level int32  `protobuf:"varint,6,opt,name=skill1Level,proto3" json:"skill1Level,omitempty"`
	Skill2Level int32  `protobuf:"varint,7,opt,name=skill2Level,proto3" json:"skill2Level,omitempty"`
	HeroId      string `protobuf:"bytes,8,opt,name=heroId,proto3" json:"heroId,omitempty"`
}

func (x *PlayerGameInfoProto) Reset() {
	*x = PlayerGameInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerGameInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerGameInfoProto) ProtoMessage() {}

func (x *PlayerGameInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerGameInfoProto.ProtoReflect.Descriptor instead.
func (*PlayerGameInfoProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerGameInfoProto) GetHero() int32 {
	if x != nil {
		return x.Hero
	}
	return 0
}

func (x *PlayerGameInfoProto) GetSkill1() int32 {
	if x != nil {
		return x.Skill1
	}
	return 0
}

func (x *PlayerGameInfoProto) GetSkill2() int32 {
	if x != nil {
		return x.Skill2
	}
	return 0
}

func (x *PlayerGameInfoProto) GetSkin() int32 {
	if x != nil {
		return x.Skin
	}
	return 0
}

func (x *PlayerGameInfoProto) GetHeroLevel() int32 {
	if x != nil {
		return x.HeroLevel
	}
	return 0
}

func (x *PlayerGameInfoProto) GetSkill1Level() int32 {
	if x != nil {
		return x.Skill1Level
	}
	return 0
}

func (x *PlayerGameInfoProto) GetSkill2Level() int32 {
	if x != nil {
		return x.Skill2Level
	}
	return 0
}

func (x *PlayerGameInfoProto) GetHeroId() string {
	if x != nil {
		return x.HeroId
	}
	return ""
}

type FriendRequesting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendId string `protobuf:"bytes,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	Exp      int64  `protobuf:"varint,2,opt,name=exp,proto3" json:"exp,omitempty"`
}

func (x *FriendRequesting) Reset() {
	*x = FriendRequesting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendRequesting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendRequesting) ProtoMessage() {}

func (x *FriendRequesting) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendRequesting.ProtoReflect.Descriptor instead.
func (*FriendRequesting) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{3}
}

func (x *FriendRequesting) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

func (x *FriendRequesting) GetExp() int64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

// thong tin guild
type GuildInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId         string   `protobuf:"bytes,1,opt,name=guildId,proto3" json:"guildId,omitempty"`
	ListPlayers     []string `protobuf:"bytes,2,rep,name=listPlayers,proto3" json:"listPlayers,omitempty"`
	TrophieRequired int32    `protobuf:"varint,3,opt,name=trophieRequired,proto3" json:"trophieRequired,omitempty"`
	Type            int32    `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	CountMember     int32    `protobuf:"varint,5,opt,name=countMember,proto3" json:"countMember,omitempty"`
	MaxMember       int32    `protobuf:"varint,6,opt,name=maxMember,proto3" json:"maxMember,omitempty"`
	Level           int32    `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`
	SubContinent    string   `protobuf:"bytes,8,opt,name=subContinent,proto3" json:"subContinent,omitempty"`
	BadgeId         int32    `protobuf:"varint,9,opt,name=badgeId,proto3" json:"badgeId,omitempty"`
	GuildName       string   `protobuf:"bytes,10,opt,name=guildName,proto3" json:"guildName,omitempty"`
	Country         string   `protobuf:"bytes,11,opt,name=country,proto3" json:"country,omitempty"`
	TotalTrophie    int32    `protobuf:"varint,12,opt,name=totalTrophie,proto3" json:"totalTrophie,omitempty"`
}

func (x *GuildInfoProto) Reset() {
	*x = GuildInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildInfoProto) ProtoMessage() {}

func (x *GuildInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildInfoProto.ProtoReflect.Descriptor instead.
func (*GuildInfoProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{4}
}

func (x *GuildInfoProto) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

func (x *GuildInfoProto) GetListPlayers() []string {
	if x != nil {
		return x.ListPlayers
	}
	return nil
}

func (x *GuildInfoProto) GetTrophieRequired() int32 {
	if x != nil {
		return x.TrophieRequired
	}
	return 0
}

func (x *GuildInfoProto) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GuildInfoProto) GetCountMember() int32 {
	if x != nil {
		return x.CountMember
	}
	return 0
}

func (x *GuildInfoProto) GetMaxMember() int32 {
	if x != nil {
		return x.MaxMember
	}
	return 0
}

func (x *GuildInfoProto) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GuildInfoProto) GetSubContinent() string {
	if x != nil {
		return x.SubContinent
	}
	return ""
}

func (x *GuildInfoProto) GetBadgeId() int32 {
	if x != nil {
		return x.BadgeId
	}
	return 0
}

func (x *GuildInfoProto) GetGuildName() string {
	if x != nil {
		return x.GuildName
	}
	return ""
}

func (x *GuildInfoProto) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GuildInfoProto) GetTotalTrophie() int32 {
	if x != nil {
		return x.TotalTrophie
	}
	return 0
}

// Thông tin status khi mới vừa mở lại socket
type PlayerStatusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string       `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Status   PlayerStatus `protobuf:"varint,2,opt,name=status,proto3,enum=core.proto.PlayerStatus" json:"status,omitempty"`
}

func (x *PlayerStatusRes) Reset() {
	*x = PlayerStatusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStatusRes) ProtoMessage() {}

func (x *PlayerStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStatusRes.ProtoReflect.Descriptor instead.
func (*PlayerStatusRes) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{5}
}

func (x *PlayerStatusRes) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerStatusRes) GetStatus() PlayerStatus {
	if x != nil {
		return x.Status
	}
	return PlayerStatus_NONE
}

// thong tin chat
type ChatInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Content  string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	TimeSpan int32  `protobuf:"varint,3,opt,name=timeSpan,proto3" json:"timeSpan,omitempty"`
	//Tên của đứa chat
	PlayerName  string `protobuf:"bytes,4,opt,name=playerName,proto3" json:"playerName,omitempty"`
	AvatarID    int32  `protobuf:"varint,5,opt,name=avatarID,proto3" json:"avatarID,omitempty"`
	AvatarFrame int32  `protobuf:"varint,6,opt,name=avatarFrame,proto3" json:"avatarFrame,omitempty"`
}

func (x *ChatInfoProto) Reset() {
	*x = ChatInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatInfoProto) ProtoMessage() {}

func (x *ChatInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatInfoProto.ProtoReflect.Descriptor instead.
func (*ChatInfoProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{6}
}

func (x *ChatInfoProto) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ChatInfoProto) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatInfoProto) GetTimeSpan() int32 {
	if x != nil {
		return x.TimeSpan
	}
	return 0
}

func (x *ChatInfoProto) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ChatInfoProto) GetAvatarID() int32 {
	if x != nil {
		return x.AvatarID
	}
	return 0
}

func (x *ChatInfoProto) GetAvatarFrame() int32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

// response dung chung
type ResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32 `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *ResponseProto) Reset() {
	*x = ResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseProto) ProtoMessage() {}

func (x *ResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseProto.ProtoReflect.Descriptor instead.
func (*ResponseProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseProto) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Request gui len luc connect thanh cong lan dau tien
type PrepareReqProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   string   `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	ListFriend []string `protobuf:"bytes,2,rep,name=listFriend,proto3" json:"listFriend,omitempty"`
	//GuildInfoProto guildInfo = 3;
	//string avatarURL = 4;
	PlayerName           string                `protobuf:"bytes,5,opt,name=playerName,proto3" json:"playerName,omitempty"`
	GuildID              string                `protobuf:"bytes,6,opt,name=guildID,proto3" json:"guildID,omitempty"`
	TotalTrophie         int32                 `protobuf:"varint,7,opt,name=totalTrophie,proto3" json:"totalTrophie,omitempty"`
	Statistic            *PlayerStatisticProto `protobuf:"bytes,8,opt,name=statistic,proto3" json:"statistic,omitempty"`
	Avatar               int32                 `protobuf:"varint,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
	AvatarFrame          int32                 `protobuf:"varint,10,opt,name=avatarFrame,proto3" json:"avatarFrame,omitempty"`
	Season               int32                 `protobuf:"varint,11,opt,name=season,proto3" json:"season,omitempty"`
	GuildName            string                `protobuf:"bytes,12,opt,name=guildName,proto3" json:"guildName,omitempty"`
	Country              string                `protobuf:"bytes,13,opt,name=country,proto3" json:"country,omitempty"`
	IsDND                bool                  `protobuf:"varint,14,opt,name=isDND,proto3" json:"isDND,omitempty"`
	SeasonWeeklyChampion int32                 `protobuf:"varint,15,opt,name=seasonWeeklyChampion,proto3" json:"seasonWeeklyChampion,omitempty"`
	VersionClient        int32                 `protobuf:"varint,16,opt,name=versionClient,proto3" json:"versionClient,omitempty"`
	AccessToken          string                `protobuf:"bytes,17,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
}

func (x *PrepareReqProto) Reset() {
	*x = PrepareReqProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareReqProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareReqProto) ProtoMessage() {}

func (x *PrepareReqProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareReqProto.ProtoReflect.Descriptor instead.
func (*PrepareReqProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{8}
}

func (x *PrepareReqProto) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PrepareReqProto) GetListFriend() []string {
	if x != nil {
		return x.ListFriend
	}
	return nil
}

func (x *PrepareReqProto) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *PrepareReqProto) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *PrepareReqProto) GetTotalTrophie() int32 {
	if x != nil {
		return x.TotalTrophie
	}
	return 0
}

func (x *PrepareReqProto) GetStatistic() *PlayerStatisticProto {
	if x != nil {
		return x.Statistic
	}
	return nil
}

func (x *PrepareReqProto) GetAvatar() int32 {
	if x != nil {
		return x.Avatar
	}
	return 0
}

func (x *PrepareReqProto) GetAvatarFrame() int32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

func (x *PrepareReqProto) GetSeason() int32 {
	if x != nil {
		return x.Season
	}
	return 0
}

func (x *PrepareReqProto) GetGuildName() string {
	if x != nil {
		return x.GuildName
	}
	return ""
}

func (x *PrepareReqProto) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PrepareReqProto) GetIsDND() bool {
	if x != nil {
		return x.IsDND
	}
	return false
}

func (x *PrepareReqProto) GetSeasonWeeklyChampion() int32 {
	if x != nil {
		return x.SeasonWeeklyChampion
	}
	return 0
}

func (x *PrepareReqProto) GetVersionClient() int32 {
	if x != nil {
		return x.VersionClient
	}
	return 0
}

func (x *PrepareReqProto) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type PlayerStatisticProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Victory    int32 `protobuf:"varint,1,opt,name=victory,proto3" json:"victory,omitempty"`
	Streak     int32 `protobuf:"varint,2,opt,name=streak,proto3" json:"streak,omitempty"`
	Mvp        int32 `protobuf:"varint,3,opt,name=mvp,proto3" json:"mvp,omitempty"`
	TripleKill int32 `protobuf:"varint,4,opt,name=tripleKill,proto3" json:"tripleKill,omitempty"`
	MegaKill   int32 `protobuf:"varint,5,opt,name=megaKill,proto3" json:"megaKill,omitempty"`
	SkinCount  int32 `protobuf:"varint,6,opt,name=skinCount,proto3" json:"skinCount,omitempty"`
	HeroCount  int32 `protobuf:"varint,7,opt,name=heroCount,proto3" json:"heroCount,omitempty"`
	SkillCount int32 `protobuf:"varint,8,opt,name=skillCount,proto3" json:"skillCount,omitempty"`
}

func (x *PlayerStatisticProto) Reset() {
	*x = PlayerStatisticProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStatisticProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStatisticProto) ProtoMessage() {}

func (x *PlayerStatisticProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStatisticProto.ProtoReflect.Descriptor instead.
func (*PlayerStatisticProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{9}
}

func (x *PlayerStatisticProto) GetVictory() int32 {
	if x != nil {
		return x.Victory
	}
	return 0
}

func (x *PlayerStatisticProto) GetStreak() int32 {
	if x != nil {
		return x.Streak
	}
	return 0
}

func (x *PlayerStatisticProto) GetMvp() int32 {
	if x != nil {
		return x.Mvp
	}
	return 0
}

func (x *PlayerStatisticProto) GetTripleKill() int32 {
	if x != nil {
		return x.TripleKill
	}
	return 0
}

func (x *PlayerStatisticProto) GetMegaKill() int32 {
	if x != nil {
		return x.MegaKill
	}
	return 0
}

func (x *PlayerStatisticProto) GetSkinCount() int32 {
	if x != nil {
		return x.SkinCount
	}
	return 0
}

func (x *PlayerStatisticProto) GetHeroCount() int32 {
	if x != nil {
		return x.HeroCount
	}
	return 0
}

func (x *PlayerStatisticProto) GetSkillCount() int32 {
	if x != nil {
		return x.SkillCount
	}
	return 0
}

type PrepareResProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode               CommonErrorCode    `protobuf:"varint,1,opt,name=errorCode,proto3,enum=core.proto.CommonErrorCode" json:"errorCode,omitempty"`
	ListPlayers             []*PlayerInfoProto `protobuf:"bytes,2,rep,name=listPlayers,proto3" json:"listPlayers,omitempty"`
	BattleFrequency         float32            `protobuf:"fixed32,3,opt,name=battleFrequency,proto3" json:"battleFrequency,omitempty"`
	CurSeasonWeeklyChampion int32              `protobuf:"varint,4,opt,name=curSeasonWeeklyChampion,proto3" json:"curSeasonWeeklyChampion,omitempty"`
	//int32 dailyBattleWeeklyChampion = 5;
	TimeStampWeeklyChampion       int64               `protobuf:"varint,6,opt,name=timeStampWeeklyChampion,proto3" json:"timeStampWeeklyChampion,omitempty"`
	ServerTime                    int64               `protobuf:"varint,7,opt,name=serverTime,proto3" json:"serverTime,omitempty"`
	ListFriendRequesting          []*FriendRequesting `protobuf:"bytes,8,rep,name=listFriendRequesting,proto3" json:"listFriendRequesting,omitempty"`
	DailyBattleModeWeeklyChampion *DailyBattleModeWC  `protobuf:"bytes,9,opt,name=dailyBattleModeWeeklyChampion,proto3" json:"dailyBattleModeWeeklyChampion,omitempty"`
}

func (x *PrepareResProto) Reset() {
	*x = PrepareResProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareResProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareResProto) ProtoMessage() {}

func (x *PrepareResProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareResProto.ProtoReflect.Descriptor instead.
func (*PrepareResProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{10}
}

func (x *PrepareResProto) GetErrorCode() CommonErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return CommonErrorCode_SUCCESS
}

func (x *PrepareResProto) GetListPlayers() []*PlayerInfoProto {
	if x != nil {
		return x.ListPlayers
	}
	return nil
}

func (x *PrepareResProto) GetBattleFrequency() float32 {
	if x != nil {
		return x.BattleFrequency
	}
	return 0
}

func (x *PrepareResProto) GetCurSeasonWeeklyChampion() int32 {
	if x != nil {
		return x.CurSeasonWeeklyChampion
	}
	return 0
}

func (x *PrepareResProto) GetTimeStampWeeklyChampion() int64 {
	if x != nil {
		return x.TimeStampWeeklyChampion
	}
	return 0
}

func (x *PrepareResProto) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *PrepareResProto) GetListFriendRequesting() []*FriendRequesting {
	if x != nil {
		return x.ListFriendRequesting
	}
	return nil
}

func (x *PrepareResProto) GetDailyBattleModeWeeklyChampion() *DailyBattleModeWC {
	if x != nil {
		return x.DailyBattleModeWeeklyChampion
	}
	return nil
}

type DailyBattleModeWC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DailyBattleSuperStar  int32 `protobuf:"varint,1,opt,name=dailyBattleSuperStar,proto3" json:"dailyBattleSuperStar,omitempty"`
	DailyBattleDeathMatch int32 `protobuf:"varint,2,opt,name=dailyBattleDeathMatch,proto3" json:"dailyBattleDeathMatch,omitempty"`
	DailyBattleTower      int32 `protobuf:"varint,3,opt,name=dailyBattleTower,proto3" json:"dailyBattleTower,omitempty"`
	DailyBattleSolo       int32 `protobuf:"varint,4,opt,name=dailyBattleSolo,proto3" json:"dailyBattleSolo,omitempty"`
	DailyBattleDual       int32 `protobuf:"varint,5,opt,name=dailyBattleDual,proto3" json:"dailyBattleDual,omitempty"`
}

func (x *DailyBattleModeWC) Reset() {
	*x = DailyBattleModeWC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyBattleModeWC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyBattleModeWC) ProtoMessage() {}

func (x *DailyBattleModeWC) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyBattleModeWC.ProtoReflect.Descriptor instead.
func (*DailyBattleModeWC) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{11}
}

func (x *DailyBattleModeWC) GetDailyBattleSuperStar() int32 {
	if x != nil {
		return x.DailyBattleSuperStar
	}
	return 0
}

func (x *DailyBattleModeWC) GetDailyBattleDeathMatch() int32 {
	if x != nil {
		return x.DailyBattleDeathMatch
	}
	return 0
}

func (x *DailyBattleModeWC) GetDailyBattleTower() int32 {
	if x != nil {
		return x.DailyBattleTower
	}
	return 0
}

func (x *DailyBattleModeWC) GetDailyBattleSolo() int32 {
	if x != nil {
		return x.DailyBattleSolo
	}
	return 0
}

func (x *DailyBattleModeWC) GetDailyBattleDual() int32 {
	if x != nil {
		return x.DailyBattleDual
	}
	return 0
}

// Load dataSocial
// Chat country - guild(*)
type LoadDataSocialReqProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelChat []ChannelChat `protobuf:"varint,1,rep,packed,name=channelChat,proto3,enum=core.proto.ChannelChat" json:"channelChat,omitempty"`
}

func (x *LoadDataSocialReqProto) Reset() {
	*x = LoadDataSocialReqProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadDataSocialReqProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadDataSocialReqProto) ProtoMessage() {}

func (x *LoadDataSocialReqProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadDataSocialReqProto.ProtoReflect.Descriptor instead.
func (*LoadDataSocialReqProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{12}
}

func (x *LoadDataSocialReqProto) GetChannelChat() []ChannelChat {
	if x != nil {
		return x.ChannelChat
	}
	return nil
}

type LoadDataSocialResProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListChannelChat []*ListChatRes `protobuf:"bytes,1,rep,name=listChannelChat,proto3" json:"listChannelChat,omitempty"`
}

func (x *LoadDataSocialResProto) Reset() {
	*x = LoadDataSocialResProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadDataSocialResProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadDataSocialResProto) ProtoMessage() {}

func (x *LoadDataSocialResProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadDataSocialResProto.ProtoReflect.Descriptor instead.
func (*LoadDataSocialResProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{13}
}

func (x *LoadDataSocialResProto) GetListChannelChat() []*ListChatRes {
	if x != nil {
		return x.ListChannelChat
	}
	return nil
}

// Chat
type ChatReqProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content  string      `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Channel  ChannelChat `protobuf:"varint,2,opt,name=channel,proto3,enum=core.proto.ChannelChat" json:"channel,omitempty"`
	TimeSpan int32       `protobuf:"varint,3,opt,name=timeSpan,proto3" json:"timeSpan,omitempty"`
}

func (x *ChatReqProto) Reset() {
	*x = ChatReqProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatReqProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatReqProto) ProtoMessage() {}

func (x *ChatReqProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatReqProto.ProtoReflect.Descriptor instead.
func (*ChatReqProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{14}
}

func (x *ChatReqProto) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatReqProto) GetChannel() ChannelChat {
	if x != nil {
		return x.Channel
	}
	return ChannelChat_COUNTRY
}

func (x *ChatReqProto) GetTimeSpan() int32 {
	if x != nil {
		return x.TimeSpan
	}
	return 0
}

// Chat send for other
type OnChatResProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatInfo *ChatInfoProto `protobuf:"bytes,1,opt,name=chatInfo,proto3" json:"chatInfo,omitempty"`
	Channel  ChannelChat    `protobuf:"varint,2,opt,name=channel,proto3,enum=core.proto.ChannelChat" json:"channel,omitempty"`
}

func (x *OnChatResProto) Reset() {
	*x = OnChatResProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnChatResProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnChatResProto) ProtoMessage() {}

func (x *OnChatResProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnChatResProto.ProtoReflect.Descriptor instead.
func (*OnChatResProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{15}
}

func (x *OnChatResProto) GetChatInfo() *ChatInfoProto {
	if x != nil {
		return x.ChatInfo
	}
	return nil
}

func (x *OnChatResProto) GetChannel() ChannelChat {
	if x != nil {
		return x.Channel
	}
	return ChannelChat_COUNTRY
}

// khi send message load chat
type ListChatRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListChats []*ChatInfoProto `protobuf:"bytes,1,rep,name=listChats,proto3" json:"listChats,omitempty"`
	Channel   ChannelChat      `protobuf:"varint,2,opt,name=channel,proto3,enum=core.proto.ChannelChat" json:"channel,omitempty"`
}

func (x *ListChatRes) Reset() {
	*x = ListChatRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChatRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChatRes) ProtoMessage() {}

func (x *ListChatRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChatRes.ProtoReflect.Descriptor instead.
func (*ListChatRes) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{16}
}

func (x *ListChatRes) GetListChats() []*ChatInfoProto {
	if x != nil {
		return x.ListChats
	}
	return nil
}

func (x *ListChatRes) GetChannel() ChannelChat {
	if x != nil {
		return x.Channel
	}
	return ChannelChat_COUNTRY
}

// login lan dau tien
// thay cho prepare
type LoginReqProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LoginReqProto) Reset() {
	*x = LoginReqProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReqProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReqProto) ProtoMessage() {}

func (x *LoginReqProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReqProto.ProtoReflect.Descriptor instead.
func (*LoginReqProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{17}
}

func (x *LoginReqProto) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// danh cho pubsub giua custom server
type ProtoPubSubPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender    string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	GroupName string `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` //data nay la proto khac
}

func (x *ProtoPubSubPackage) Reset() {
	*x = ProtoPubSubPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPubSubPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPubSubPackage) ProtoMessage() {}

func (x *ProtoPubSubPackage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPubSubPackage.ProtoReflect.Descriptor instead.
func (*ProtoPubSubPackage) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{18}
}

func (x *ProtoPubSubPackage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *ProtoPubSubPackage) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *ProtoPubSubPackage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// goi data chinh
type ProtoPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//    int32 command = 1;
	Action int32 `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	// Types that are assignable to Res:
	//	*ProtoPackage_Data
	//	*ProtoPackage_ErrorCode
	Res isProtoPackage_Res `protobuf_oneof:"res"`
}

func (x *ProtoPackage) Reset() {
	*x = ProtoPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPackage) ProtoMessage() {}

func (x *ProtoPackage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPackage.ProtoReflect.Descriptor instead.
func (*ProtoPackage) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{19}
}

func (x *ProtoPackage) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (m *ProtoPackage) GetRes() isProtoPackage_Res {
	if m != nil {
		return m.Res
	}
	return nil
}

func (x *ProtoPackage) GetData() []byte {
	if x, ok := x.GetRes().(*ProtoPackage_Data); ok {
		return x.Data
	}
	return nil
}

func (x *ProtoPackage) GetErrorCode() int32 {
	if x, ok := x.GetRes().(*ProtoPackage_ErrorCode); ok {
		return x.ErrorCode
	}
	return 0
}

type isProtoPackage_Res interface {
	isProtoPackage_Res()
}

type ProtoPackage_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"` //data nay la proto khac
}

type ProtoPackage_ErrorCode struct {
	ErrorCode int32 `protobuf:"varint,3,opt,name=errorCode,proto3,oneof"` //neu khac 0 tuc la co loi. luc nay khong parse cai data nua
}

func (*ProtoPackage_Data) isProtoPackage_Res() {}

func (*ProtoPackage_ErrorCode) isProtoPackage_Res() {}

type UpdateGuildInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewGuildName string `protobuf:"bytes,1,opt,name=newGuildName,proto3" json:"newGuildName,omitempty"`
}

func (x *UpdateGuildInfoProto) Reset() {
	*x = UpdateGuildInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGuildInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGuildInfoProto) ProtoMessage() {}

func (x *UpdateGuildInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGuildInfoProto.ProtoReflect.Descriptor instead.
func (*UpdateGuildInfoProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateGuildInfoProto) GetNewGuildName() string {
	if x != nil {
		return x.NewGuildName
	}
	return ""
}

type FriendRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceiverId         string           `protobuf:"bytes,1,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	RequesterName      string           `protobuf:"bytes,2,opt,name=requesterName,proto3" json:"requesterName,omitempty"`
	RequesterAvatarUrl string           `protobuf:"bytes,3,opt,name=requesterAvatarUrl,proto3" json:"requesterAvatarUrl,omitempty"`
	PlayerRequestInfo  *PlayerInfoProto `protobuf:"bytes,4,opt,name=playerRequestInfo,proto3" json:"playerRequestInfo,omitempty"`
}

func (x *FriendRequestProto) Reset() {
	*x = FriendRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendRequestProto) ProtoMessage() {}

func (x *FriendRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendRequestProto.ProtoReflect.Descriptor instead.
func (*FriendRequestProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{21}
}

func (x *FriendRequestProto) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *FriendRequestProto) GetRequesterName() string {
	if x != nil {
		return x.RequesterName
	}
	return ""
}

func (x *FriendRequestProto) GetRequesterAvatarUrl() string {
	if x != nil {
		return x.RequesterAvatarUrl
	}
	return ""
}

func (x *FriendRequestProto) GetPlayerRequestInfo() *PlayerInfoProto {
	if x != nil {
		return x.PlayerRequestInfo
	}
	return nil
}

type CancelFriendRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendId string `protobuf:"bytes,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
}

func (x *CancelFriendRequestProto) Reset() {
	*x = CancelFriendRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelFriendRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelFriendRequestProto) ProtoMessage() {}

func (x *CancelFriendRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelFriendRequestProto.ProtoReflect.Descriptor instead.
func (*CancelFriendRequestProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{22}
}

func (x *CancelFriendRequestProto) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

type OnFriendRequestedProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *PlayerInfoProto `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *OnFriendRequestedProto) Reset() {
	*x = OnFriendRequestedProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnFriendRequestedProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnFriendRequestedProto) ProtoMessage() {}

func (x *OnFriendRequestedProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnFriendRequestedProto.ProtoReflect.Descriptor instead.
func (*OnFriendRequestedProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{23}
}

func (x *OnFriendRequestedProto) GetProfile() *PlayerInfoProto {
	if x != nil {
		return x.Profile
	}
	return nil
}

type OnCancelFriendRequestedProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequesterId string `protobuf:"bytes,1,opt,name=requesterId,proto3" json:"requesterId,omitempty"`
}

func (x *OnCancelFriendRequestedProto) Reset() {
	*x = OnCancelFriendRequestedProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnCancelFriendRequestedProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnCancelFriendRequestedProto) ProtoMessage() {}

func (x *OnCancelFriendRequestedProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnCancelFriendRequestedProto.ProtoReflect.Descriptor instead.
func (*OnCancelFriendRequestedProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{24}
}

func (x *OnCancelFriendRequestedProto) GetRequesterId() string {
	if x != nil {
		return x.RequesterId
	}
	return ""
}

type AcceptFriendRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequesterId string `protobuf:"bytes,1,opt,name=requesterId,proto3" json:"requesterId,omitempty"`
}

func (x *AcceptFriendRequestProto) Reset() {
	*x = AcceptFriendRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptFriendRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptFriendRequestProto) ProtoMessage() {}

func (x *AcceptFriendRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptFriendRequestProto.ProtoReflect.Descriptor instead.
func (*AcceptFriendRequestProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{25}
}

func (x *AcceptFriendRequestProto) GetRequesterId() string {
	if x != nil {
		return x.RequesterId
	}
	return ""
}

type AcceptFriendRespondProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerStatus   PlayerStatus `protobuf:"varint,1,opt,name=playerStatus,proto3,enum=core.proto.PlayerStatus" json:"playerStatus,omitempty"`
	FriendID       string       `protobuf:"bytes,2,opt,name=friendID,proto3" json:"friendID,omitempty"`
	LastTimeOnline int32        `protobuf:"varint,3,opt,name=lastTimeOnline,proto3" json:"lastTimeOnline,omitempty"`
}

func (x *AcceptFriendRespondProto) Reset() {
	*x = AcceptFriendRespondProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptFriendRespondProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptFriendRespondProto) ProtoMessage() {}

func (x *AcceptFriendRespondProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptFriendRespondProto.ProtoReflect.Descriptor instead.
func (*AcceptFriendRespondProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{26}
}

func (x *AcceptFriendRespondProto) GetPlayerStatus() PlayerStatus {
	if x != nil {
		return x.PlayerStatus
	}
	return PlayerStatus_NONE
}

func (x *AcceptFriendRespondProto) GetFriendID() string {
	if x != nil {
		return x.FriendID
	}
	return ""
}

func (x *AcceptFriendRespondProto) GetLastTimeOnline() int32 {
	if x != nil {
		return x.LastTimeOnline
	}
	return 0
}

type OnFriendRequestAcceptedProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccepterId   string       `protobuf:"bytes,1,opt,name=accepterId,proto3" json:"accepterId,omitempty"`
	PlayerStatus PlayerStatus `protobuf:"varint,2,opt,name=playerStatus,proto3,enum=core.proto.PlayerStatus" json:"playerStatus,omitempty"`
}

func (x *OnFriendRequestAcceptedProto) Reset() {
	*x = OnFriendRequestAcceptedProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnFriendRequestAcceptedProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnFriendRequestAcceptedProto) ProtoMessage() {}

func (x *OnFriendRequestAcceptedProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnFriendRequestAcceptedProto.ProtoReflect.Descriptor instead.
func (*OnFriendRequestAcceptedProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{27}
}

func (x *OnFriendRequestAcceptedProto) GetAccepterId() string {
	if x != nil {
		return x.AccepterId
	}
	return ""
}

func (x *OnFriendRequestAcceptedProto) GetPlayerStatus() PlayerStatus {
	if x != nil {
		return x.PlayerStatus
	}
	return PlayerStatus_NONE
}

type DeclineFriendRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequesterId string `protobuf:"bytes,1,opt,name=requesterId,proto3" json:"requesterId,omitempty"`
}

func (x *DeclineFriendRequestProto) Reset() {
	*x = DeclineFriendRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineFriendRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineFriendRequestProto) ProtoMessage() {}

func (x *DeclineFriendRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineFriendRequestProto.ProtoReflect.Descriptor instead.
func (*DeclineFriendRequestProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{28}
}

func (x *DeclineFriendRequestProto) GetRequesterId() string {
	if x != nil {
		return x.RequesterId
	}
	return ""
}

type OnFriendRequestDeclinedProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeclinerId string `protobuf:"bytes,1,opt,name=declinerId,proto3" json:"declinerId,omitempty"`
}

func (x *OnFriendRequestDeclinedProto) Reset() {
	*x = OnFriendRequestDeclinedProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnFriendRequestDeclinedProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnFriendRequestDeclinedProto) ProtoMessage() {}

func (x *OnFriendRequestDeclinedProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnFriendRequestDeclinedProto.ProtoReflect.Descriptor instead.
func (*OnFriendRequestDeclinedProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{29}
}

func (x *OnFriendRequestDeclinedProto) GetDeclinerId() string {
	if x != nil {
		return x.DeclinerId
	}
	return ""
}

type UnfriendProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendId string `protobuf:"bytes,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
}

func (x *UnfriendProto) Reset() {
	*x = UnfriendProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnfriendProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfriendProto) ProtoMessage() {}

func (x *UnfriendProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfriendProto.ProtoReflect.Descriptor instead.
func (*UnfriendProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{30}
}

func (x *UnfriendProto) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

// Init and get all related status
type InitFriendsListProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendIds []string `protobuf:"bytes,1,rep,name=friendIds,proto3" json:"friendIds,omitempty"`
	OtherIds  []string `protobuf:"bytes,2,rep,name=otherIds,proto3" json:"otherIds,omitempty"`
}

func (x *InitFriendsListProto) Reset() {
	*x = InitFriendsListProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitFriendsListProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitFriendsListProto) ProtoMessage() {}

func (x *InitFriendsListProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitFriendsListProto.ProtoReflect.Descriptor instead.
func (*InitFriendsListProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{31}
}

func (x *InitFriendsListProto) GetFriendIds() []string {
	if x != nil {
		return x.FriendIds
	}
	return nil
}

func (x *InitFriendsListProto) GetOtherIds() []string {
	if x != nil {
		return x.OtherIds
	}
	return nil
}

type SearchPlayersByNameReqProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SearchPlayersByNameReqProto) Reset() {
	*x = SearchPlayersByNameReqProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPlayersByNameReqProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPlayersByNameReqProto) ProtoMessage() {}

func (x *SearchPlayersByNameReqProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPlayersByNameReqProto.ProtoReflect.Descriptor instead.
func (*SearchPlayersByNameReqProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{32}
}

func (x *SearchPlayersByNameReqProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SearchPlayersByNameResProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayersList []*PlayerInfoProto `protobuf:"bytes,1,rep,name=playersList,proto3" json:"playersList,omitempty"`
}

func (x *SearchPlayersByNameResProto) Reset() {
	*x = SearchPlayersByNameResProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPlayersByNameResProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPlayersByNameResProto) ProtoMessage() {}

func (x *SearchPlayersByNameResProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPlayersByNameResProto.ProtoReflect.Descriptor instead.
func (*SearchPlayersByNameResProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{33}
}

func (x *SearchPlayersByNameResProto) GetPlayersList() []*PlayerInfoProto {
	if x != nil {
		return x.PlayersList
	}
	return nil
}

// Response Khi init friendsList
type InitFriendsListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayersInfo  []*PlayerInfoProto `protobuf:"bytes,1,rep,name=playersInfo,proto3" json:"playersInfo,omitempty"`
	OthersStatus []*PlayerStatusRes `protobuf:"bytes,2,rep,name=othersStatus,proto3" json:"othersStatus,omitempty"`
}

func (x *InitFriendsListRes) Reset() {
	*x = InitFriendsListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitFriendsListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitFriendsListRes) ProtoMessage() {}

func (x *InitFriendsListRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitFriendsListRes.ProtoReflect.Descriptor instead.
func (*InitFriendsListRes) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{34}
}

func (x *InitFriendsListRes) GetPlayersInfo() []*PlayerInfoProto {
	if x != nil {
		return x.PlayersInfo
	}
	return nil
}

func (x *InitFriendsListRes) GetOthersStatus() []*PlayerStatusRes {
	if x != nil {
		return x.OthersStatus
	}
	return nil
}

type ChannelPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerID string        `protobuf:"bytes,1,opt,name=playerID,proto3" json:"playerID,omitempty"`
	Package  *ProtoPackage `protobuf:"bytes,2,opt,name=package,proto3" json:"package,omitempty"`
}

func (x *ChannelPackage) Reset() {
	*x = ChannelPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelPackage) ProtoMessage() {}

func (x *ChannelPackage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelPackage.ProtoReflect.Descriptor instead.
func (*ChannelPackage) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{35}
}

func (x *ChannelPackage) GetPlayerID() string {
	if x != nil {
		return x.PlayerID
	}
	return ""
}

func (x *ChannelPackage) GetPackage() *ProtoPackage {
	if x != nil {
		return x.Package
	}
	return nil
}

// Get thông tin cơ bản như
// avatar frame,id
type GetOtherPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (x *GetOtherPlayerInfo) Reset() {
	*x = GetOtherPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOtherPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOtherPlayerInfo) ProtoMessage() {}

func (x *GetOtherPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOtherPlayerInfo.ProtoReflect.Descriptor instead.
func (*GetOtherPlayerInfo) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{36}
}

func (x *GetOtherPlayerInfo) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

// Respone của Req get other player info
type GetOtherPlayerInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarID    int32 `protobuf:"varint,1,opt,name=avatarID,proto3" json:"avatarID,omitempty"`
	AvatarFrame int32 `protobuf:"varint,2,opt,name=avatarFrame,proto3" json:"avatarFrame,omitempty"`
}

func (x *GetOtherPlayerInfoRes) Reset() {
	*x = GetOtherPlayerInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOtherPlayerInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOtherPlayerInfoRes) ProtoMessage() {}

func (x *GetOtherPlayerInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOtherPlayerInfoRes.ProtoReflect.Descriptor instead.
func (*GetOtherPlayerInfoRes) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{37}
}

func (x *GetOtherPlayerInfoRes) GetAvatarID() int32 {
	if x != nil {
		return x.AvatarID
	}
	return 0
}

func (x *GetOtherPlayerInfoRes) GetAvatarFrame() int32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

type PlayerSuggestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PlayerName string `protobuf:"bytes,2,opt,name=playerName,proto3" json:"playerName,omitempty"`
	//Mac dinh online
	//    string avatarUrl = 3;
	AvatarId       int32 `protobuf:"varint,3,opt,name=avatarId,proto3" json:"avatarId,omitempty"`
	AvatarFrameId  int32 `protobuf:"varint,4,opt,name=avatarFrameId,proto3" json:"avatarFrameId,omitempty"`
	TotalTrophoies int32 `protobuf:"varint,5,opt,name=totalTrophoies,proto3" json:"totalTrophoies,omitempty"`
}

func (x *PlayerSuggestion) Reset() {
	*x = PlayerSuggestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSuggestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSuggestion) ProtoMessage() {}

func (x *PlayerSuggestion) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSuggestion.ProtoReflect.Descriptor instead.
func (*PlayerSuggestion) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{38}
}

func (x *PlayerSuggestion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlayerSuggestion) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *PlayerSuggestion) GetAvatarId() int32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *PlayerSuggestion) GetAvatarFrameId() int32 {
	if x != nil {
		return x.AvatarFrameId
	}
	return 0
}

func (x *PlayerSuggestion) GetTotalTrophoies() int32 {
	if x != nil {
		return x.TotalTrophoies
	}
	return 0
}

type GetSuggestionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurTrophie      int32    `protobuf:"varint,1,opt,name=curTrophie,proto3" json:"curTrophie,omitempty"`
	MaxPlayer       int32    `protobuf:"varint,2,opt,name=maxPlayer,proto3" json:"maxPlayer,omitempty"`
	ListFriendFbIDs []string `protobuf:"bytes,3,rep,name=listFriendFbIDs,proto3" json:"listFriendFbIDs,omitempty"`
}

func (x *GetSuggestionReq) Reset() {
	*x = GetSuggestionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuggestionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuggestionReq) ProtoMessage() {}

func (x *GetSuggestionReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuggestionReq.ProtoReflect.Descriptor instead.
func (*GetSuggestionReq) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{39}
}

func (x *GetSuggestionReq) GetCurTrophie() int32 {
	if x != nil {
		return x.CurTrophie
	}
	return 0
}

func (x *GetSuggestionReq) GetMaxPlayer() int32 {
	if x != nil {
		return x.MaxPlayer
	}
	return 0
}

func (x *GetSuggestionReq) GetListFriendFbIDs() []string {
	if x != nil {
		return x.ListFriendFbIDs
	}
	return nil
}

type GetSuggestionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListCountrySuggestion   []*PlayerInfoProto `protobuf:"bytes,1,rep,name=listCountrySuggestion,proto3" json:"listCountrySuggestion,omitempty"`
	ListFriendIDsSuggestion []string           `protobuf:"bytes,2,rep,name=listFriendIDsSuggestion,proto3" json:"listFriendIDsSuggestion,omitempty"`
}

func (x *GetSuggestionRes) Reset() {
	*x = GetSuggestionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuggestionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuggestionRes) ProtoMessage() {}

func (x *GetSuggestionRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuggestionRes.ProtoReflect.Descriptor instead.
func (*GetSuggestionRes) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{40}
}

func (x *GetSuggestionRes) GetListCountrySuggestion() []*PlayerInfoProto {
	if x != nil {
		return x.ListCountrySuggestion
	}
	return nil
}

func (x *GetSuggestionRes) GetListFriendIDsSuggestion() []string {
	if x != nil {
		return x.ListFriendIDsSuggestion
	}
	return nil
}

type StartFindMatchPlayAgainReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayersIds []string `protobuf:"bytes,1,rep,name=playersIds,proto3" json:"playersIds,omitempty"`
}

func (x *StartFindMatchPlayAgainReq) Reset() {
	*x = StartFindMatchPlayAgainReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartFindMatchPlayAgainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartFindMatchPlayAgainReq) ProtoMessage() {}

func (x *StartFindMatchPlayAgainReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartFindMatchPlayAgainReq.ProtoReflect.Descriptor instead.
func (*StartFindMatchPlayAgainReq) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{41}
}

func (x *StartFindMatchPlayAgainReq) GetPlayersIds() []string {
	if x != nil {
		return x.PlayersIds
	}
	return nil
}

// Khi Battle end sẽ update lại status nếu trong battle
type BEResProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayersStatus []*PlayerStatusRes `protobuf:"bytes,1,rep,name=playersStatus,proto3" json:"playersStatus,omitempty"`
}

func (x *BEResProto) Reset() {
	*x = BEResProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BEResProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BEResProto) ProtoMessage() {}

func (x *BEResProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BEResProto.ProtoReflect.Descriptor instead.
func (*BEResProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{42}
}

func (x *BEResProto) GetPlayersStatus() []*PlayerStatusRes {
	if x != nil {
		return x.PlayersStatus
	}
	return nil
}

type ChangeDNDProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDND bool `protobuf:"varint,1,opt,name=isDND,proto3" json:"isDND,omitempty"`
}

func (x *ChangeDNDProto) Reset() {
	*x = ChangeDNDProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeDNDProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeDNDProto) ProtoMessage() {}

func (x *ChangeDNDProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeDNDProto.ProtoReflect.Descriptor instead.
func (*ChangeDNDProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{43}
}

func (x *ChangeDNDProto) GetIsDND() bool {
	if x != nil {
		return x.IsDND
	}
	return false
}

// use to send PlayerChannel
type OnMsgChangeDNDProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDND          bool     `protobuf:"varint,1,opt,name=isDND,proto3" json:"isDND,omitempty"`
	RelatedPlayers []string `protobuf:"bytes,2,rep,name=relatedPlayers,proto3" json:"relatedPlayers,omitempty"`
}

func (x *OnMsgChangeDNDProto) Reset() {
	*x = OnMsgChangeDNDProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnMsgChangeDNDProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnMsgChangeDNDProto) ProtoMessage() {}

func (x *OnMsgChangeDNDProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnMsgChangeDNDProto.ProtoReflect.Descriptor instead.
func (*OnMsgChangeDNDProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{44}
}

func (x *OnMsgChangeDNDProto) GetIsDND() bool {
	if x != nil {
		return x.IsDND
	}
	return false
}

func (x *OnMsgChangeDNDProto) GetRelatedPlayers() []string {
	if x != nil {
		return x.RelatedPlayers
	}
	return nil
}

type OnOtherChangeDNDProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerID string `protobuf:"bytes,1,opt,name=playerID,proto3" json:"playerID,omitempty"`
	IsDND    bool   `protobuf:"varint,2,opt,name=isDND,proto3" json:"isDND,omitempty"`
}

func (x *OnOtherChangeDNDProto) Reset() {
	*x = OnOtherChangeDNDProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnOtherChangeDNDProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnOtherChangeDNDProto) ProtoMessage() {}

func (x *OnOtherChangeDNDProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnOtherChangeDNDProto.ProtoReflect.Descriptor instead.
func (*OnOtherChangeDNDProto) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{45}
}

func (x *OnOtherChangeDNDProto) GetPlayerID() string {
	if x != nil {
		return x.PlayerID
	}
	return ""
}

func (x *OnOtherChangeDNDProto) GetIsDND() bool {
	if x != nil {
		return x.IsDND
	}
	return false
}

type OnForceDisconnect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId  string `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	CtxName   string `protobuf:"bytes,2,opt,name=ctxName,proto3" json:"ctxName,omitempty"`
	ErrorCode int32  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *OnForceDisconnect) Reset() {
	*x = OnForceDisconnect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnForceDisconnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnForceDisconnect) ProtoMessage() {}

func (x *OnForceDisconnect) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnForceDisconnect.ProtoReflect.Descriptor instead.
func (*OnForceDisconnect) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{46}
}

func (x *OnForceDisconnect) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *OnForceDisconnect) GetCtxName() string {
	if x != nil {
		return x.CtxName
	}
	return ""
}

func (x *OnForceDisconnect) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type TestSubModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JusTest  string `protobuf:"bytes,1,opt,name=jusTest,proto3" json:"jusTest,omitempty"`
	JusTest2 string `protobuf:"bytes,2,opt,name=jusTest2,proto3" json:"jusTest2,omitempty"`
}

func (x *TestSubModule) Reset() {
	*x = TestSubModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Common_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestSubModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSubModule) ProtoMessage() {}

func (x *TestSubModule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Common_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSubModule.ProtoReflect.Descriptor instead.
func (*TestSubModule) Descriptor() ([]byte, []int) {
	return file_proto_Common_proto_rawDescGZIP(), []int{47}
}

func (x *TestSubModule) GetJusTest() string {
	if x != nil {
		return x.JusTest
	}
	return ""
}

func (x *TestSubModule) GetJusTest2() string {
	if x != nil {
		return x.JusTest2
	}
	return ""
}

var File_proto_Common_proto protoreflect.FileDescriptor

var file_proto_Common_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8d, 0x04, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x24,
	0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x69, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x6f, 0x70,
	0x68, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x44, 0x4e, 0x44, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x4e, 0x44, 0x12, 0x32, 0x0a, 0x14, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x12, 0x40,
	0x0a, 0x1b, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x57,
	0x65, 0x65, 0x6b, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x1b, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x22, 0x43, 0x0a, 0x15, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x69, 0x6e, 0x67, 0x22, 0xe7, 0x01, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x65, 0x72, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x65, 0x72,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x32, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x6b, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x72, 0x6f, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x65, 0x72, 0x6f, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x31, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x31,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x32, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x32, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x22,
	0x40, 0x0a, 0x10, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x78,
	0x70, 0x22, 0xfa, 0x02, 0x0a, 0x0e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x6f, 0x70, 0x68, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x72, 0x6f, 0x70, 0x68,
	0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x6e, 0x74, 0x69,
	0x6e, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x43,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x69, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x69, 0x65, 0x22, 0x5f,
	0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xbf, 0x01, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x70, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x70, 0x61, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x44, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x44, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x22, 0x2d, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x87, 0x04, 0x0a, 0x0f, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x69, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x69, 0x65, 0x12, 0x3e,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x44, 0x4e,
	0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x4e, 0x44, 0x12, 0x32,
	0x0a, 0x14, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x43, 0x68,
	0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xf2, 0x01, 0x0a, 0x14, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x76, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6d, 0x76, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x69, 0x70, 0x6c,
	0x65, 0x4b, 0x69, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x72, 0x69,
	0x70, 0x6c, 0x65, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x67, 0x61, 0x4b,
	0x69, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x67, 0x61, 0x4b,
	0x69, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6b, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6b, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x72, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x65, 0x72, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x80, 0x04, 0x0a, 0x0f, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x39, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3d,
	0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x46, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x75, 0x72, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x63, 0x75, 0x72, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x12, 0x38, 0x0a, 0x17, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x57, 0x65,
	0x65, 0x6b, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x17, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x57, 0x65, 0x65,
	0x6b, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x14, 0x6c,
	0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x63, 0x0a,
	0x1d, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x57, 0x43, 0x52, 0x1d, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x22, 0xfd, 0x01, 0x0a, 0x11, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x57, 0x43, 0x12, 0x32, 0x0a, 0x14, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x75, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x53, 0x75, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x12, 0x34, 0x0a, 0x15,
	0x64, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x65, 0x61, 0x74, 0x68,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x64, 0x61, 0x69,
	0x6c, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x65, 0x61, 0x74, 0x68, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x64, 0x61,
	0x69, 0x6c, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x0f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x6f, 0x6c,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x53, 0x6f, 0x6c, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x75, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x75,
	0x61, 0x6c, 0x22, 0x53, 0x0a, 0x16, 0x4c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x39, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x22, 0x5b, 0x0a, 0x16, 0x4c, 0x6f, 0x61, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x41, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x68, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x52, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x68, 0x61, 0x74, 0x22, 0x77, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x31,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x22, 0x7a, 0x0a,
	0x0e, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x35, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x63, 0x68,
	0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x79, 0x0a, 0x0b, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x73, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x25, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5e, 0x0a, 0x12, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x63, 0x0a, 0x0c, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x72, 0x65, 0x73,
	0x22, 0x3a, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6e, 0x65, 0x77, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd5, 0x01, 0x0a,
	0x12, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x49, 0x0a, 0x11, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x36, 0x0a, 0x18, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x16,
	0x4f, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x35, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x40, 0x0a,
	0x1c, 0x4f, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x3c, 0x0a, 0x18, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9c, 0x01,
	0x0a, 0x18, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3c, 0x0a, 0x0c, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x7c, 0x0a, 0x1c,
	0x4f, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0c,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3d, 0x0a, 0x19, 0x44, 0x65,
	0x63, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x1c, 0x4f, 0x6e, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x63, 0x6c,
	0x69, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x63,
	0x6c, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x0d, 0x55, 0x6e, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x14, 0x49, 0x6e, 0x69, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x31, 0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x1b, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3d, 0x0a, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x49, 0x6e,
	0x69, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x3d, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3f, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x52, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x60, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x12, 0x32,
	0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x22, 0x30, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x10,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x6f, 0x70, 0x68,
	0x6f, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x6f, 0x69, 0x65, 0x73, 0x22, 0x7a, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x75, 0x72, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x69, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x69, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f,
	0x6c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x46, 0x62, 0x49, 0x44, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x46, 0x62, 0x49, 0x44, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x15, 0x6c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x15, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38,
	0x0a, 0x17, 0x6c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x73, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x17, 0x6c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x73, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3c, 0x0a, 0x1a, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x67,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x49, 0x64, 0x73, 0x22, 0x4f, 0x0a, 0x0a, 0x42, 0x45, 0x52, 0x65, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x41, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x26, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x44, 0x4e, 0x44, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x44,
	0x4e, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x4e, 0x44, 0x22,
	0x53, 0x0a, 0x13, 0x4f, 0x6e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x4e,
	0x44, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x44, 0x4e, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x4e, 0x44, 0x12, 0x26, 0x0a, 0x0e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x22, 0x49, 0x0a, 0x15, 0x4f, 0x6e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x4e, 0x44, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x44,
	0x4e, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x4e, 0x44, 0x22,
	0x67, 0x0a, 0x11, 0x4f, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x74, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x74, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x45, 0x0a, 0x0d, 0x54, 0x65, 0x73, 0x74,
	0x53, 0x75, 0x62, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x75, 0x73,
	0x54, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x73, 0x54,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x75, 0x73, 0x54, 0x65, 0x73, 0x74, 0x32, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x75, 0x73, 0x54, 0x65, 0x73, 0x74, 0x32, 0x2a,
	0x89, 0x01, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46,
	0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c, 0x49, 0x4e,
	0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x59, 0x10,
	0x03, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x59, 0x5f, 0x52, 0x45,
	0x41, 0x44, 0x59, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x49, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x5f,
	0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x49, 0x53, 0x5f,
	0x49, 0x4e, 0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x10, 0x07, 0x2a, 0x6a, 0x0a, 0x0e, 0x43,
	0x68, 0x61, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a,
	0x0b, 0x4e, 0x4f, 0x4e, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x45,
	0x54, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x02,
	0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x48, 0x41, 0x52, 0x45, 0x5f, 0x47, 0x55, 0x49, 0x4c, 0x44, 0x10,
	0x03, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x45, 0x54, 0x5f, 0x47, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x04, 0x2a, 0x30, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52,
	0x59, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x50, 0x61, 0x72, 0x74, 0x79, 0x10, 0x02, 0x2a, 0x52, 0x0a, 0x08, 0x47, 0x61, 0x6d,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x41, 0x4e, 0x4b, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x50, 0x45, 0x43, 0x49, 0x41, 0x4c, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x4d,
	0x4f, 0x44, 0x45, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x48, 0x45, 0x54, 0x41, 0x4e, 0x5f,
	0x52, 0x49, 0x56, 0x41, 0x4c, 0x53, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x03, 0x2a, 0xb5, 0x02,
	0x0a, 0x0a, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x11,
	0x54, 0x45, 0x41, 0x4d, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x52, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x4f, 0x4c, 0x4f, 0x5f, 0x53, 0x55, 0x52, 0x56,
	0x49, 0x56, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x55, 0x41, 0x4c, 0x5f, 0x53,
	0x55, 0x52, 0x56, 0x49, 0x56, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x45, 0x41,
	0x4d, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x34,
	0x5f, 0x56, 0x53, 0x5f, 0x34, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4b, 0x49, 0x4e, 0x47, 0x10,
	0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x45, 0x41, 0x54, 0x48, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48,
	0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x45, 0x41, 0x54, 0x48, 0x5f, 0x4d, 0x41, 0x54, 0x43,
	0x48, 0x5f, 0x33, 0x5f, 0x56, 0x53, 0x5f, 0x33, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x4c,
	0x41, 0x47, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x10, 0x09, 0x12,
	0x11, 0x0a, 0x0d, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x52, 0x4f, 0x59, 0x41, 0x4c, 0x45,
	0x10, 0x0c, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x51, 0x55, 0x41, 0x44, 0x5f, 0x42, 0x41, 0x54, 0x54,
	0x4c, 0x45, 0x5f, 0x52, 0x4f, 0x59, 0x41, 0x4c, 0x45, 0x10, 0x0d, 0x12, 0x15, 0x0a, 0x11, 0x44,
	0x55, 0x4f, 0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x52, 0x4f, 0x59, 0x41, 0x4c, 0x45,
	0x10, 0x0e, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x52, 0x49, 0x4f, 0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c,
	0x45, 0x5f, 0x52, 0x4f, 0x41, 0x59, 0x4c, 0x45, 0x10, 0x0f, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x48,
	0x45, 0x54, 0x41, 0x4e, 0x5f, 0x52, 0x49, 0x56, 0x41, 0x4c, 0x53, 0x10, 0x14, 0x12, 0x16, 0x0a,
	0x09, 0x4e, 0x4f, 0x4e, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0x01, 0x2a, 0x1d, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x4f, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47,
	0x45, 0x4d, 0x10, 0x01, 0x2a, 0x6a, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x63, 0x12,
	0x2a, 0x0a, 0x26, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f, 0x42, 0x45,
	0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x55, 0x53, 0x49, 0x4e,
	0x47, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x5d, 0x12, 0x13, 0x0a, 0x0f, 0x55,
	0x4e, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x10,
	0x2a, 0x55, 0x0a, 0x13, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x4e, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x45, 0x41, 0x4d, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x4f,
	0x4c, 0x4f, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x55, 0x4f,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x03, 0x42, 0x27, 0x0a, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x48, 0x01, 0x5a, 0x0a, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_Common_proto_rawDescOnce sync.Once
	file_proto_Common_proto_rawDescData = file_proto_Common_proto_rawDesc
)

func file_proto_Common_proto_rawDescGZIP() []byte {
	file_proto_Common_proto_rawDescOnce.Do(func() {
		file_proto_Common_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_Common_proto_rawDescData)
	})
	return file_proto_Common_proto_rawDescData
}

var file_proto_Common_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_proto_Common_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_proto_Common_proto_goTypes = []interface{}{
	(PlayerStatus)(0),                    // 0: core.proto.PlayerStatus
	(ChatActionType)(0),                  // 1: core.proto.ChatActionType
	(ChannelChat)(0),                     // 2: core.proto.ChannelChat
	(GameMode)(0),                        // 3: core.proto.GameMode
	(InGameMode)(0),                      // 4: core.proto.InGameMode
	(Currency)(0),                        // 5: core.proto.Currency
	(CommonErrorCode)(0),                 // 6: core.proto.CommonErrorCode
	(InGameTypeModeProto)(0),             // 7: core.proto.InGameTypeModeProto
	(*PlayerInfoProto)(nil),              // 8: core.proto.PlayerInfoProto
	(*PlayerRegionInfoProto)(nil),        // 9: core.proto.PlayerRegionInfoProto
	(*PlayerGameInfoProto)(nil),          // 10: core.proto.PlayerGameInfoProto
	(*FriendRequesting)(nil),             // 11: core.proto.FriendRequesting
	(*GuildInfoProto)(nil),               // 12: core.proto.GuildInfoProto
	(*PlayerStatusRes)(nil),              // 13: core.proto.PlayerStatusRes
	(*ChatInfoProto)(nil),                // 14: core.proto.ChatInfoProto
	(*ResponseProto)(nil),                // 15: core.proto.ResponseProto
	(*PrepareReqProto)(nil),              // 16: core.proto.PrepareReqProto
	(*PlayerStatisticProto)(nil),         // 17: core.proto.PlayerStatisticProto
	(*PrepareResProto)(nil),              // 18: core.proto.PrepareResProto
	(*DailyBattleModeWC)(nil),            // 19: core.proto.DailyBattleModeWC
	(*LoadDataSocialReqProto)(nil),       // 20: core.proto.LoadDataSocialReqProto
	(*LoadDataSocialResProto)(nil),       // 21: core.proto.LoadDataSocialResProto
	(*ChatReqProto)(nil),                 // 22: core.proto.ChatReqProto
	(*OnChatResProto)(nil),               // 23: core.proto.OnChatResProto
	(*ListChatRes)(nil),                  // 24: core.proto.ListChatRes
	(*LoginReqProto)(nil),                // 25: core.proto.LoginReqProto
	(*ProtoPubSubPackage)(nil),           // 26: core.proto.ProtoPubSubPackage
	(*ProtoPackage)(nil),                 // 27: core.proto.ProtoPackage
	(*UpdateGuildInfoProto)(nil),         // 28: core.proto.UpdateGuildInfoProto
	(*FriendRequestProto)(nil),           // 29: core.proto.FriendRequestProto
	(*CancelFriendRequestProto)(nil),     // 30: core.proto.CancelFriendRequestProto
	(*OnFriendRequestedProto)(nil),       // 31: core.proto.OnFriendRequestedProto
	(*OnCancelFriendRequestedProto)(nil), // 32: core.proto.OnCancelFriendRequestedProto
	(*AcceptFriendRequestProto)(nil),     // 33: core.proto.AcceptFriendRequestProto
	(*AcceptFriendRespondProto)(nil),     // 34: core.proto.AcceptFriendRespondProto
	(*OnFriendRequestAcceptedProto)(nil), // 35: core.proto.OnFriendRequestAcceptedProto
	(*DeclineFriendRequestProto)(nil),    // 36: core.proto.DeclineFriendRequestProto
	(*OnFriendRequestDeclinedProto)(nil), // 37: core.proto.OnFriendRequestDeclinedProto
	(*UnfriendProto)(nil),                // 38: core.proto.UnfriendProto
	(*InitFriendsListProto)(nil),         // 39: core.proto.InitFriendsListProto
	(*SearchPlayersByNameReqProto)(nil),  // 40: core.proto.SearchPlayersByNameReqProto
	(*SearchPlayersByNameResProto)(nil),  // 41: core.proto.SearchPlayersByNameResProto
	(*InitFriendsListRes)(nil),           // 42: core.proto.InitFriendsListRes
	(*ChannelPackage)(nil),               // 43: core.proto.ChannelPackage
	(*GetOtherPlayerInfo)(nil),           // 44: core.proto.GetOtherPlayerInfo
	(*GetOtherPlayerInfoRes)(nil),        // 45: core.proto.GetOtherPlayerInfoRes
	(*PlayerSuggestion)(nil),             // 46: core.proto.PlayerSuggestion
	(*GetSuggestionReq)(nil),             // 47: core.proto.GetSuggestionReq
	(*GetSuggestionRes)(nil),             // 48: core.proto.GetSuggestionRes
	(*StartFindMatchPlayAgainReq)(nil),   // 49: core.proto.StartFindMatchPlayAgainReq
	(*BEResProto)(nil),                   // 50: core.proto.BEResProto
	(*ChangeDNDProto)(nil),               // 51: core.proto.ChangeDNDProto
	(*OnMsgChangeDNDProto)(nil),          // 52: core.proto.OnMsgChangeDNDProto
	(*OnOtherChangeDNDProto)(nil),        // 53: core.proto.OnOtherChangeDNDProto
	(*OnForceDisconnect)(nil),            // 54: core.proto.OnForceDisconnect
	(*TestSubModule)(nil),                // 55: core.proto.TestSubModule
}
var file_proto_Common_proto_depIdxs = []int32{
	0,  // 0: core.proto.PlayerInfoProto.status:type_name -> core.proto.PlayerStatus
	0,  // 1: core.proto.PlayerStatusRes.status:type_name -> core.proto.PlayerStatus
	17, // 2: core.proto.PrepareReqProto.statistic:type_name -> core.proto.PlayerStatisticProto
	6,  // 3: core.proto.PrepareResProto.errorCode:type_name -> core.proto.CommonErrorCode
	8,  // 4: core.proto.PrepareResProto.listPlayers:type_name -> core.proto.PlayerInfoProto
	11, // 5: core.proto.PrepareResProto.listFriendRequesting:type_name -> core.proto.FriendRequesting
	19, // 6: core.proto.PrepareResProto.dailyBattleModeWeeklyChampion:type_name -> core.proto.DailyBattleModeWC
	2,  // 7: core.proto.LoadDataSocialReqProto.channelChat:type_name -> core.proto.ChannelChat
	24, // 8: core.proto.LoadDataSocialResProto.listChannelChat:type_name -> core.proto.ListChatRes
	2,  // 9: core.proto.ChatReqProto.channel:type_name -> core.proto.ChannelChat
	14, // 10: core.proto.OnChatResProto.chatInfo:type_name -> core.proto.ChatInfoProto
	2,  // 11: core.proto.OnChatResProto.channel:type_name -> core.proto.ChannelChat
	14, // 12: core.proto.ListChatRes.listChats:type_name -> core.proto.ChatInfoProto
	2,  // 13: core.proto.ListChatRes.channel:type_name -> core.proto.ChannelChat
	8,  // 14: core.proto.FriendRequestProto.playerRequestInfo:type_name -> core.proto.PlayerInfoProto
	8,  // 15: core.proto.OnFriendRequestedProto.profile:type_name -> core.proto.PlayerInfoProto
	0,  // 16: core.proto.AcceptFriendRespondProto.playerStatus:type_name -> core.proto.PlayerStatus
	0,  // 17: core.proto.OnFriendRequestAcceptedProto.playerStatus:type_name -> core.proto.PlayerStatus
	8,  // 18: core.proto.SearchPlayersByNameResProto.playersList:type_name -> core.proto.PlayerInfoProto
	8,  // 19: core.proto.InitFriendsListRes.playersInfo:type_name -> core.proto.PlayerInfoProto
	13, // 20: core.proto.InitFriendsListRes.othersStatus:type_name -> core.proto.PlayerStatusRes
	27, // 21: core.proto.ChannelPackage.package:type_name -> core.proto.ProtoPackage
	8,  // 22: core.proto.GetSuggestionRes.listCountrySuggestion:type_name -> core.proto.PlayerInfoProto
	13, // 23: core.proto.BEResProto.playersStatus:type_name -> core.proto.PlayerStatusRes
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_proto_Common_proto_init() }
func file_proto_Common_proto_init() {
	if File_proto_Common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_Common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerRegionInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerGameInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendRequesting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStatusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareReqProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStatisticProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareResProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyBattleModeWC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadDataSocialReqProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadDataSocialResProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatReqProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnChatResProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChatRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReqProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPubSubPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGuildInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelFriendRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnFriendRequestedProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnCancelFriendRequestedProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptFriendRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptFriendRespondProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnFriendRequestAcceptedProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineFriendRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnFriendRequestDeclinedProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnfriendProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitFriendsListProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPlayersByNameReqProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPlayersByNameResProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitFriendsListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOtherPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOtherPlayerInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerSuggestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuggestionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuggestionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartFindMatchPlayAgainReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BEResProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeDNDProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnMsgChangeDNDProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnOtherChangeDNDProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnForceDisconnect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Common_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestSubModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_Common_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*ProtoPackage_Data)(nil),
		(*ProtoPackage_ErrorCode)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_Common_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_Common_proto_goTypes,
		DependencyIndexes: file_proto_Common_proto_depIdxs,
		EnumInfos:         file_proto_Common_proto_enumTypes,
		MessageInfos:      file_proto_Common_proto_msgTypes,
	}.Build()
	File_proto_Common_proto = out.File
	file_proto_Common_proto_rawDesc = nil
	file_proto_Common_proto_goTypes = nil
	file_proto_Common_proto_depIdxs = nil
}
