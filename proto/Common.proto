syntax = "proto3";
package core.proto;

option optimize_for = SPEED;
option java_package = "core.proto";
option java_outer_classname = "CommonProto";
option go_package = "/coreproto";

//thong tin co ban cua player
message PlayerInfoProto{
  PlayerStatus status = 11;
  string playerId = 1;
  string playerName = 2;
  int32 avatarId = 3;
  int32 avatarFrameId = 4;
  //int32 arena = 5;
  string guildName = 6;
  int32 guildBadgeId = 7;
  int32 guildRole = 8;
  string country = 9;
  int32 totalTrophies = 10;
  int32 lastOnline = 12;
  bool isDND = 13;
  //total battle in leaderboard weekly champion
  int32 battleWeeklyChampion = 14;
  int32 historyBattleWeeklyChampion = 15;
}

message PlayerRegionInfoProto {
  int32 region = 1;
  int32 ping = 3;
}

message PlayerGameInfoProto {
  int32 hero = 1;
  int32 skill1 = 2;
  int32 skill2 = 3;
  int32 skin = 4;
  int32 heroLevel = 5;
  int32 skill1Level = 6;
  int32 skill2Level = 7;
  string heroId = 8;
}

message FriendRequesting {
  string friendId = 1;
  int64 exp = 2;
}

//trang thai cua player
enum PlayerStatus {
  NONE = 0;
  OFFLINE = 1;
  ONLINE = 2;
  IN_PARTY = 3;
  IN_PARTY_READY = 4;
  FINDING_BATTLE = 5;
  IN_BATTLE = 6;
  DIS_IN_BATTLE = 7;//bi disconnect trong khi dang inbattle
}

//Chat share party
enum ChatActionType
{
  NONE_ACTION = 0;
  INVITE = 1;
  SET_PARTY_STATUS = 2;
  SHARE_GUILD = 3;
  SET_GUILD_STATUS = 4;
}

enum ChannelChat {
  COUNTRY = 0;
  GUILD = 1;
  Party = 2;
}

enum GameMode {
  RANKED = 0;
  SPECIAL_EVENT = 1;
  CUSTOM_MODE = 2;
  THETAN_RIVALS_MODE = 3;
}

enum InGameMode {
  TEAM_COLLECT_STAR = 0;
  SOLO_SURVIVAL = 1;
  DUAL_SURVIVAL = 2;
  TEAM_COLLECT_STAR_4_VS_4 = 3;
  KING = 5;
  DEATH_MATCH = 6;
  DEATH_MATCH_3_VS_3 = 7;
  FLAG = 8;
  TOWER = 9;
  BATTLE_ROYALE = 12;
  SQUAD_BATTLE_ROYALE = 13;
  DUO_BATTLE_ROYALE = 14;
  TRIO_BATTLE_ROAYLE = 15;
  THETAN_RIVALS = 20;
  NONE_MODE = -1;
}

enum Currency {
  COIN = 0;
  GEM = 1;
}

enum CommonErrorCode {
  SUCCESS = 0;
  ERROR = 99;
  DISCONNECT_BECAUSE_OTHER_USING_ACCOUNT = 93;
  UNAUTHENTICATED = 16;
}


//thong tin guild
message GuildInfoProto{
  string guildId = 1;
  repeated string listPlayers = 2;
  int32 trophieRequired = 3;
  int32 type = 4;
  int32 countMember = 5;
  int32 maxMember = 6;
  int32 level = 7;
  string subContinent = 8;
  int32 badgeId = 9;
  string guildName = 10;
  string country = 11;
  int32 totalTrophie = 12;
}
//Thông tin status khi mới vừa mở lại socket
message PlayerStatusRes{
  string playerId = 1;
  PlayerStatus status = 2;
}
//thong tin chat
message ChatInfoProto{
  string playerId = 1;
  string content = 2;
  int32 timeSpan = 3;
  //Tên của đứa chat
  string playerName = 4;
  int32 avatarID = 5;
  int32  avatarFrame = 6;
}

//response dung chung
message ResponseProto {
  int32 errorCode = 1;
}

//Request gui len luc connect thanh cong lan dau tien
message PrepareReqProto {
  string playerId = 1;
  repeated string listFriend = 2;
  //GuildInfoProto guildInfo = 3;
  //string avatarURL = 4;
  string  playerName = 5;
  string guildID = 6;
  int32 totalTrophie = 7;
  PlayerStatisticProto statistic = 8;
  int32 avatar = 9;
  int32 avatarFrame = 10;
  int32 season = 11;
  string guildName = 12;
  string country = 13;
  bool isDND = 14;
  int32 seasonWeeklyChampion = 15;
  int32 versionClient = 16;
  string accessToken = 17;
}

message PlayerStatisticProto {
  int32 victory = 1;
  int32 streak = 2;
  int32 mvp = 3;
  int32 tripleKill = 4;
  int32 megaKill = 5;
  int32 skinCount = 6;
  int32 heroCount = 7;
  int32 skillCount = 8;
}

message PrepareResProto {
  CommonErrorCode errorCode = 1;
  repeated PlayerInfoProto listPlayers = 2;
  float battleFrequency = 3;
  int32 curSeasonWeeklyChampion = 4;
  //int32 dailyBattleWeeklyChampion = 5;
  int64 timeStampWeeklyChampion = 6;
  int64 serverTime = 7;
  repeated FriendRequesting listFriendRequesting = 8;
  DailyBattleModeWC dailyBattleModeWeeklyChampion = 9;
}
message DailyBattleModeWC {
  int32 dailyBattleSuperStar = 1;
  int32 dailyBattleDeathMatch = 2;
  int32 dailyBattleTower = 3;
  int32 dailyBattleSolo = 4;
  int32 dailyBattleDual = 5;
}


//Load dataSocial
//Chat country - guild(*)
message LoadDataSocialReqProto{
  repeated ChannelChat channelChat = 1;
}
message LoadDataSocialResProto{
  repeated ListChatRes listChannelChat = 1;
}
//Chat
message ChatReqProto{
  string content = 1;
  ChannelChat channel = 2;
  int32 timeSpan = 3;
}

//Chat send for other
message OnChatResProto{
  ChatInfoProto chatInfo = 1;
  ChannelChat channel = 2;
}

//khi send message load chat
message ListChatRes {
  repeated ChatInfoProto listChats = 1;
  ChannelChat channel = 2;
}

//login lan dau tien
//thay cho prepare
message LoginReqProto {
  string token = 1;
}

//danh cho pubsub giua custom server
message ProtoPubSubPackage {
  string sender = 1;
  string groupName = 2;
  bytes data = 3;//data nay la proto khac
}

//goi data chinh
message ProtoPackage {
  //    int32 command = 1;
  int32 action = 1;
  oneof res {
    bytes data = 2;//data nay la proto khac
    int32 errorCode = 3;//neu khac 0 tuc la co loi. luc nay khong parse cai data nua
  }
}

message UpdateGuildInfoProto {
  string newGuildName = 1;
}

message FriendRequestProto {
  string receiverId = 1;
  string requesterName = 2;
  string requesterAvatarUrl = 3;
  PlayerInfoProto playerRequestInfo = 4;
}

message CancelFriendRequestProto {
  string friendId = 1;
}

message OnFriendRequestedProto {
  PlayerInfoProto profile = 1;
}

message OnCancelFriendRequestedProto {
  string requesterId = 1;
}

message AcceptFriendRequestProto {
  string requesterId = 1;
}
message AcceptFriendRespondProto {
  PlayerStatus playerStatus = 1;
  string friendID = 2;
  int32 lastTimeOnline = 3;

}

message OnFriendRequestAcceptedProto {
  string accepterId = 1;
  PlayerStatus playerStatus = 2;
}

message DeclineFriendRequestProto {
  string requesterId = 1;
}

message OnFriendRequestDeclinedProto {
  string declinerId = 1;
}

message UnfriendProto {
  string friendId = 1;
}

//Init and get all related status
message InitFriendsListProto {
  repeated string friendIds = 1;
  repeated string otherIds = 2;
}

message SearchPlayersByNameReqProto {
  string name = 1;
}

message SearchPlayersByNameResProto {
  repeated PlayerInfoProto playersList = 1;
}

//Response Khi init friendsList
message InitFriendsListRes{
  repeated PlayerInfoProto playersInfo = 1;
  repeated PlayerStatusRes othersStatus = 2;
}
message ChannelPackage {
  string playerID = 1;
  ProtoPackage package = 2;
}
//Get thông tin cơ bản như
//avatar frame,id
message GetOtherPlayerInfo{
  string playerId = 1;
}
//Respone của Req get other player info
message GetOtherPlayerInfoRes{
  int32 avatarID = 1;
  int32  avatarFrame = 2;
}


message PlayerSuggestion{
  string id = 1;
  string playerName = 2;
  //Mac dinh online
  //    string avatarUrl = 3;
  int32 avatarId = 3;
  int32 avatarFrameId = 4;
  int32 totalTrophoies = 5;
}


message GetSuggestionReq{
  int32 curTrophie = 1;
  int32 maxPlayer = 2;
  repeated string listFriendFbIDs = 3;
}

message GetSuggestionRes{
  repeated PlayerInfoProto listCountrySuggestion = 1;
  repeated string listFriendIDsSuggestion = 2;
}

//message PlayerProfileInfo {
//
//}

message StartFindMatchPlayAgainReq {
  repeated string playersIds = 1;
}

//Khi Battle end sẽ update lại status nếu trong battle
message BEResProto{
  repeated PlayerStatusRes playersStatus = 1;
}
message ChangeDNDProto{
  bool isDND = 1;
}

//use to send PlayerChannel
message OnMsgChangeDNDProto {
  bool isDND = 1;
  repeated string relatedPlayers = 2;
}

message OnOtherChangeDNDProto{
  string playerID = 1;
  bool isDND = 2;
}

message OnForceDisconnect {
  string playerId = 1;
  string ctxName = 2;
  int32 errorCode = 3;
}

enum InGameTypeModeProto {
  NONE_TYPE_MODE = 0;
  TEAM_MODE = 1;
  SOLO_MODE = 2;
  DUO_MODE = 3;
}

message TestSubModule {
  string jusTest = 1;
  string jusTest2 = 2;
}