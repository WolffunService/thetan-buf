syntax = "proto3";

package thetan.gateway.v1;
import "thetan/immortal/v1/immortal.proto";

option go_package = "thetan-buf/gen/go/thetan/gateway/v1;thetan_gateway_v1";
option csharp_namespace = "Thetan.Gateway.V1";

enum GameName {
  Rival = 0;
  Immortal = 1;
  Arena = 2;
  // Thêm các giá trị enum tương ứng với các game khác
}

service ThetanGateway {
  rpc Ping(PingRequest) returns (PingResponse) {}
  rpc PlayerConnected(PlayerConnectedRequest) returns (PlayerStatusResponse) {}
  rpc PlayerDisconnected(PlayerDisconnectedRequest) returns (PlayerStatusResponse) {}
  rpc RoomDestroyed(RoomDestroyedRequest) returns (RoomDestroyedResponse) {}

  rpc ImmortalRoomAllocation(thetan.immortal.v1.ImmortalMatchFoundResponseProto) returns (ImmortalRoomAllocationResp) {}
}

message PingRequest {
  GameName game_name = 1;
  string game_server_name = 2;
  oneof request_payload {
    RoomInfoPayload room_info = 3;
    // Thêm các trường tùy thuộc vào yêu cầu của game
  }
}

message RoomInfoPayload {
  repeated RoomInfo rooms = 1;
}

message PlayerConnectedRequest {
  GameName game_name = 1;
  string game_server_name = 2;
  oneof request_payload {
    PlayerInfoPayload player_info = 3;
    // Thêm các trường tùy thuộc vào yêu cầu của game
  }
}

message PlayerDisconnectedRequest {
  GameName game_name = 1;
  string game_server_name = 2;
  oneof request_payload {
    PlayerInfoPayload player_info = 3;
    // Thêm các trường tùy thuộc vào yêu cầu của game
  }
}

message PlayerInfoPayload {
  string player_id = 1;
  int32 player_count = 2;
}

message RoomDestroyedRequest {
  GameName game_name = 1;
  string game_server_name = 2;
  oneof request_payload {
    RoomIdPayload room_id_info = 3;
    // Thêm các trường tùy thuộc vào yêu cầu của game
  }
}

message RoomIdPayload {
  string room_id = 1;
}

message PingResponse {
  string message = 1;
}

message PlayerStatusResponse {}

message RoomInfo {
  string room_id = 1;
  int32 player_count = 2;
}

message RoomDestroyedResponse {
  // Thêm các trường phản hồi tùy thuộc vào yêu cầu của bạn
}

message ImmortalRoomAllocationResp {
  //fishnet ip
  string server_ip = 1;
  //matchid
  string room_id = 2;
}
