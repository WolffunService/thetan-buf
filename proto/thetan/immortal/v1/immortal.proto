syntax = "proto3";

package thetan.immortal.v1;

import "thetan/immortal/v1/immortal_shared.proto";
import "thetan/immortal/v1/immortal_game_info.proto";

option go_package = "thetan-buf/gen/go/thetan/immortal/v1;thetan_immortal_v1";
option csharp_namespace = "Thetan.Immortal.V1";

//GRPC
service ImmortalService {
  rpc SearchPlayerInfo(SearchPlayerInfoRequest) returns (SearchPlayerInfoResponse) {}
  rpc GetUserProfile(GetUserProfileRequest) returns (GetUserProfileResponse) {}
  rpc BattleEnd(BattleEndRequest) returns (stream BattleEndResponse) {}
  rpc GetHeroConfig(GetHeroConfigRequest) returns (GetHeroConfigResponse) {}
  rpc GetSkillConfig(GetSkillConfigRequest) returns (GetSkillConfigResponse) {}
  // Friends
  rpc GetListFriends(GetUserFriendRequest) returns (GetUserFriendResponse) {}
  // Seasonal
  rpc GetSeasonal(GetSeasonalRequest) returns (GetSeasonalResponse) {}

  rpc TrackStartSession(TrackSessionRequest) returns (TrackSessionResponse) {}
  rpc GetGameData(GetGameDataRequest) returns (GetGameDataResponse) {}
}

message SearchPlayerInfoRequest {
  repeated string playerIDs = 1;
}

message SearchPlayerInfoResponse {
  repeated PlayerInfoMatchProto players = 1;
}

message GetUserProfileRequest {
  string userID = 1;
}

message GetUserProfileResponse {
  string userID = 1;
  string userName = 2;
  string country = 3;
  int32 avatarID = 4;
  int32 frameID = 5;
  int32 nameColorID = 6;
  int32 rank = 7;
  int32 trophy = 8;
  int32 battlePassID = 9;
}

message BattleEndRequest{
  string roomName = 1;//matchID
  repeated PlayerMatchInfo players = 2;
  GameMode gameMode = 3;
  InGameMode inGameMode = 4;
}

message PlayerMatchInfo{
  string playerID = 1;
  int32 gameResult = 2;
  Hero hero = 3 [deprecated=true];
  repeated Skill skills = 4;
  repeated Hero heroes = 5;
  int32 botBrain = 6;
  int32 lastUsedHeroID = 7;
}

message BattleEndResponse{
  string playerID = 1;
  bool isWin = 2;
  double playerScore = 3;
  int32 trophy = 4;
  int32 battlePoint = 5;
  int32 battleStar = 6;
  int32  cumulativeBattlePoint = 7;
  Arena arena = 8;
  repeated BattleEndPlayer players = 9;
  BattleEndHero hero = 10 [deprecated=true];
  repeated Skill skills = 11;
  repeated BattleEndHero heroes = 12;
  int32 x2BattlePoint = 13;
  BattleEndHero lastUsedHero = 14;
}

message BattleEndPlayer {
   string playerID = 1;
   SkillRating skillRating = 2;
}

message BattleEndHero {
  int32 skinID = 1;
  int32 level = 2;
  int32 type = 3;
  int32 rarity = 4;
  bool isAlive = 5;
}

message GetHeroConfigRequest {}

message GetHeroConfigResponse {
  repeated HeroFull heroes = 1;
  map<int32, HeroRarity> heroRarities = 2;
}

message HeroRarity {
  int32 defaultLevel = 1;
  int32 maxLevel = 2;
}


message GetSkillConfigRequest {}

message GetSkillConfigResponse {
  repeated SkillFull skills = 1;
  map<int32, SkillRarity> skillRarities = 2;
}


message SkillRarity {
  int32 defaultLevel = 1;
  int32 maxLevel = 2;
}


message GetUserFriendRequest {
  string userId = 1;
}

message GetUserFriendResponse {
  repeated FriendInfo friends = 1;
}

message FriendInfo {
  enum FRIEND_STATUS {
    REQUESTED = 0;
    REQUESTING = 1;
    CONFIRMED = 2;
  }

  string friendId = 1;
  FRIEND_STATUS status = 2;
  GetUserProfileResponse profile = 3;
  int64 requestedAt = 4;
}

message GetSeasonalRequest {
}

message GetSeasonalResponse {
  int32 seasonID = 1;
}

message TrackSessionRequest {
  string userID = 1;
}

message TrackSessionResponse {
}

message GetGameDataRequest {
  string userId = 1;
}

message GetGameDataResponse {
  repeated Hero listHeroes = 1;
  repeated Skill listSkills = 2;
}