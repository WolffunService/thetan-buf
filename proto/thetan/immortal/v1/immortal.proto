syntax = "proto3";

package thetan.immortal.v1;

option go_package = "thetan-buf/gen/go/thetan/immortal/v1;thetan_immortal_v1";
option csharp_namespace = "Thetan.Immortal.V1";

message ImmortalMatchFoundResponseProto {
  string matchID = 1;
  repeated ImmortalPlayerInfoMatchProto players = 2;
}

message ImmortalPlayerInfoMatchProto {
  string playerID = 1;
  string partyID = 2;
  int32 skinID = 3;
  int32 trophies = 4;
  int32 heroLevel = 5;
  repeated int32 regions = 6;
  string playerName = 7;
  int32 avatarID = 8;
  int32 frameID = 9;
  string heroID = 10;
  int32 trophySearch = 11;
  int32 brainType = 12;
  int32 teamID = 13;
  int32 battleCount = 14;
  int32 nameColorID = 15;
  int32 rank = 16;
  repeated uint32 skills = 17;
}

message ImmortalCancelTicketRequest {
  int32 playerID = 1;
  int32 partyID = 2;
  int32 ticketID = 3;
}

message ImmortalCancelTicketResponse {
  int32 playerID = 1;
  int32 partyID = 2;
  int32 ticketID = 3;
}

message SearchUserRankingRequest {
  repeated string userIDs = 1;
}

message SearchUserRankingResponse {
  map<string, UserRanking> userRankingByUserID = 1;
}

message UserRanking {
  string userID = 1;
  int32 rank = 2;
  int32 trophy = 3;
}

message CreateManyUserRankingRequest {
  repeated UserRanking ListUserRanking = 1;
}

message CreateManyUserRankingResponse {
  map<string, UserRanking> userRankingByUserID = 1;
}

message SearchPlayerInfoRequest {
  repeated string playerIDs = 1;
}

message SearchPlayerInfoResponse {
  repeated ImmortalPlayerInfoMatchProto players = 1;
}

message CancelTicketSuccess {
  int32 playerID = 1;
  int32 partyID = 2;
  int32 ticketID = 3;
}

service ImmortalService {
  // For bot
  rpc SearchUserRanking (SearchUserRankingRequest) returns (SearchUserRankingResponse) {}
  rpc CreateManyUserRanking (CreateManyUserRankingRequest) returns (CreateManyUserRankingResponse) {}

  // Search player info
  rpc SearchPlayerInfo(SearchPlayerInfoRequest) returns (SearchPlayerInfoResponse) {}
}

service ImmortalMatchDirectorService {
  rpc CancelTicket(ImmortalCancelTicketRequest) returns (ImmortalCancelTicketResponse) {}
}
