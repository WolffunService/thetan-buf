syntax = "proto3";

package thetan.immortal.v1;

option go_package = "thetan-buf/gen/go/thetan/immortal/v1;thetan_immortal_v1";
option csharp_namespace = "Thetan.Immortal.V1";

message ImmortalMatchFoundResponseProto {
  string matchID = 1;
  repeated ImmortalPlayerInfoMatchProto players = 2;
  int32 bestRegion = 3;
}

message ImmortalPlayerInfoMatchProto {
  string playerID = 1;
  string playerName = 2;
  int32 avatarID = 3;
  int32 frameID = 4;
  int32 nameColorID = 5;
  int32 battleCount = 6;
  string partyID = 7;
  int32 trophyRank = 8;
  int32 trophySearch = 9;
  int32 rank = 10;
  Hero hero = 11;
  repeated Skill skills = 12;
  int32 botBrain = 13; // default value is human
  repeated int32 regions = 14;
}

message Hero {
  string heroID = 1;
  int32 skinID = 2;
  int32 level = 3;
}

message Skill {
  uint32 skillID = 1;
  int32 level = 2;
}

// ImmortalTicketData is used to create ticket
message ImmortalTicketData {
  repeated ImmortalPlayerInfoMatchProto players = 1;
}

message ImmortalCancelTicketRequest {
  string playerID = 1;
  string partyID = 2;
  string ticketID = 3;
}

message ImmortalCancelTicketResponse {
}

// CancelTicketSuccess is used to push pub/sub when the ticket is canceled successfully
message CancelTicketSuccess {
  string playerID = 1;
  string partyID = 2;
  string ticketID = 3;
}

service ImmortalMatchDirectorService {
  rpc CancelTicket(ImmortalCancelTicketRequest) returns (ImmortalCancelTicketResponse) {}
}
