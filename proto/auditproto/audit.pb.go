// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.3
// source: proto/audit.proto

package auditproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BoxPurchaseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	BoxId           int64  `protobuf:"varint,2,opt,name=boxId,proto3" json:"boxId,omitempty"`
	BoxType         int32  `protobuf:"varint,3,opt,name=boxType,proto3" json:"boxType,omitempty"`
	BoxNumber       int32  `protobuf:"varint,4,opt,name=boxNumber,proto3" json:"boxNumber,omitempty"`
	CurrencyType    int32  `protobuf:"varint,5,opt,name=currencyType,proto3" json:"currencyType,omitempty"`
	Price           int64  `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`
	GTHC            int64  `protobuf:"varint,7,opt,name=gTHC,proto3" json:"gTHC,omitempty"`
	GTHG            int64  `protobuf:"varint,8,opt,name=gTHG,proto3" json:"gTHG,omitempty"`
	GPP             int64  `protobuf:"varint,9,opt,name=gPP,proto3" json:"gPP,omitempty"`
	TransactionHash string `protobuf:"bytes,10,opt,name=transactionHash,proto3" json:"transactionHash,omitempty"`
	ErrorMsg        string `protobuf:"bytes,11,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	ErrorCode       int32  `protobuf:"varint,12,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	Timestamp       int64  `protobuf:"varint,13,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Decimals        int32  `protobuf:"varint,14,opt,name=decimals,proto3" json:"decimals,omitempty"`
}

func (x *BoxPurchaseResult) Reset() {
	*x = BoxPurchaseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_audit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxPurchaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxPurchaseResult) ProtoMessage() {}

func (x *BoxPurchaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxPurchaseResult.ProtoReflect.Descriptor instead.
func (*BoxPurchaseResult) Descriptor() ([]byte, []int) {
	return file_proto_audit_proto_rawDescGZIP(), []int{0}
}

func (x *BoxPurchaseResult) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BoxPurchaseResult) GetBoxId() int64 {
	if x != nil {
		return x.BoxId
	}
	return 0
}

func (x *BoxPurchaseResult) GetBoxType() int32 {
	if x != nil {
		return x.BoxType
	}
	return 0
}

func (x *BoxPurchaseResult) GetBoxNumber() int32 {
	if x != nil {
		return x.BoxNumber
	}
	return 0
}

func (x *BoxPurchaseResult) GetCurrencyType() int32 {
	if x != nil {
		return x.CurrencyType
	}
	return 0
}

func (x *BoxPurchaseResult) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BoxPurchaseResult) GetGTHC() int64 {
	if x != nil {
		return x.GTHC
	}
	return 0
}

func (x *BoxPurchaseResult) GetGTHG() int64 {
	if x != nil {
		return x.GTHG
	}
	return 0
}

func (x *BoxPurchaseResult) GetGPP() int64 {
	if x != nil {
		return x.GPP
	}
	return 0
}

func (x *BoxPurchaseResult) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *BoxPurchaseResult) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *BoxPurchaseResult) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *BoxPurchaseResult) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BoxPurchaseResult) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

type BoxOpenResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	BoxId      int64  `protobuf:"varint,2,opt,name=boxId,proto3" json:"boxId,omitempty"`
	BoxType    int32  `protobuf:"varint,3,opt,name=boxType,proto3" json:"boxType,omitempty"`
	GTHC       int64  `protobuf:"varint,4,opt,name=gTHC,proto3" json:"gTHC,omitempty"`
	GTHG       int64  `protobuf:"varint,5,opt,name=gTHG,proto3" json:"gTHG,omitempty"`
	GPP        int64  `protobuf:"varint,6,opt,name=gPP,proto3" json:"gPP,omitempty"`
	HeroId     string `protobuf:"bytes,7,opt,name=heroId,proto3" json:"heroId,omitempty"`
	HeroTypeId int32  `protobuf:"varint,8,opt,name=heroTypeId,proto3" json:"heroTypeId,omitempty"`
	SkinId     int32  `protobuf:"varint,9,opt,name=skinId,proto3" json:"skinId,omitempty"`
	HeroRarity int32  `protobuf:"varint,10,opt,name=heroRarity,proto3" json:"heroRarity,omitempty"`
	SkinRarity int32  `protobuf:"varint,11,opt,name=skinRarity,proto3" json:"skinRarity,omitempty"`
	ErrorMsg   string `protobuf:"bytes,12,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	ErrorCode  int32  `protobuf:"varint,13,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	Timestamp  int64  `protobuf:"varint,14,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Decimals   int32  `protobuf:"varint,15,opt,name=decimals,proto3" json:"decimals,omitempty"`
}

func (x *BoxOpenResult) Reset() {
	*x = BoxOpenResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_audit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxOpenResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxOpenResult) ProtoMessage() {}

func (x *BoxOpenResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxOpenResult.ProtoReflect.Descriptor instead.
func (*BoxOpenResult) Descriptor() ([]byte, []int) {
	return file_proto_audit_proto_rawDescGZIP(), []int{1}
}

func (x *BoxOpenResult) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BoxOpenResult) GetBoxId() int64 {
	if x != nil {
		return x.BoxId
	}
	return 0
}

func (x *BoxOpenResult) GetBoxType() int32 {
	if x != nil {
		return x.BoxType
	}
	return 0
}

func (x *BoxOpenResult) GetGTHC() int64 {
	if x != nil {
		return x.GTHC
	}
	return 0
}

func (x *BoxOpenResult) GetGTHG() int64 {
	if x != nil {
		return x.GTHG
	}
	return 0
}

func (x *BoxOpenResult) GetGPP() int64 {
	if x != nil {
		return x.GPP
	}
	return 0
}

func (x *BoxOpenResult) GetHeroId() string {
	if x != nil {
		return x.HeroId
	}
	return ""
}

func (x *BoxOpenResult) GetHeroTypeId() int32 {
	if x != nil {
		return x.HeroTypeId
	}
	return 0
}

func (x *BoxOpenResult) GetSkinId() int32 {
	if x != nil {
		return x.SkinId
	}
	return 0
}

func (x *BoxOpenResult) GetHeroRarity() int32 {
	if x != nil {
		return x.HeroRarity
	}
	return 0
}

func (x *BoxOpenResult) GetSkinRarity() int32 {
	if x != nil {
		return x.SkinRarity
	}
	return 0
}

func (x *BoxOpenResult) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *BoxOpenResult) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *BoxOpenResult) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BoxOpenResult) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

type UpgradeHeroResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleNumber   int32  `protobuf:"varint,1,opt,name=battleNumber,proto3" json:"battleNumber,omitempty"`
	UserId         string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	ProfileLevel   int32  `protobuf:"varint,3,opt,name=profileLevel,proto3" json:"profileLevel,omitempty"`
	SeasonRank     int32  `protobuf:"varint,4,opt,name=seasonRank,proto3" json:"seasonRank,omitempty"`
	UserTrophy     int32  `protobuf:"varint,5,opt,name=userTrophy,proto3" json:"userTrophy,omitempty"`
	HeroId         string `protobuf:"bytes,6,opt,name=heroId,proto3" json:"heroId,omitempty"`
	THCBattle      int32  `protobuf:"varint,7,opt,name=tHCBattle,proto3" json:"tHCBattle,omitempty"`
	THCBattleLimit int32  `protobuf:"varint,8,opt,name=tHCBattleLimit,proto3" json:"tHCBattleLimit,omitempty"`
	HeroLevel      int32  `protobuf:"varint,9,opt,name=heroLevel,proto3" json:"heroLevel,omitempty"`
	TrophyClass    int32  `protobuf:"varint,10,opt,name=trophyClass,proto3" json:"trophyClass,omitempty"`
	HeroTypeId     int32  `protobuf:"varint,11,opt,name=heroTypeId,proto3" json:"heroTypeId,omitempty"`
	HeroRarity     int32  `protobuf:"varint,12,opt,name=heroRarity,proto3" json:"heroRarity,omitempty"`
	SkinRarity     int32  `protobuf:"varint,13,opt,name=skinRarity,proto3" json:"skinRarity,omitempty"`
	GTHCChange     int64  `protobuf:"varint,14,opt,name=gTHCChange,proto3" json:"gTHCChange,omitempty"`
	GTHGChange     int64  `protobuf:"varint,15,opt,name=gTHGChange,proto3" json:"gTHGChange,omitempty"`
	GPPChange      int64  `protobuf:"varint,16,opt,name=gPPChange,proto3" json:"gPPChange,omitempty"`
	GTHC           int64  `protobuf:"varint,17,opt,name=gTHC,proto3" json:"gTHC,omitempty"`
	GTHG           int64  `protobuf:"varint,18,opt,name=gTHG,proto3" json:"gTHG,omitempty"`
	GPP            int64  `protobuf:"varint,19,opt,name=gPP,proto3" json:"gPP,omitempty"`
	ErrorCode      int32  `protobuf:"varint,20,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMsg       string `protobuf:"bytes,21,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	Timestamp      int64  `protobuf:"varint,22,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Decimals       int32  `protobuf:"varint,23,opt,name=decimals,proto3" json:"decimals,omitempty"`
}

func (x *UpgradeHeroResult) Reset() {
	*x = UpgradeHeroResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_audit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeHeroResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeHeroResult) ProtoMessage() {}

func (x *UpgradeHeroResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeHeroResult.ProtoReflect.Descriptor instead.
func (*UpgradeHeroResult) Descriptor() ([]byte, []int) {
	return file_proto_audit_proto_rawDescGZIP(), []int{2}
}

func (x *UpgradeHeroResult) GetBattleNumber() int32 {
	if x != nil {
		return x.BattleNumber
	}
	return 0
}

func (x *UpgradeHeroResult) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpgradeHeroResult) GetProfileLevel() int32 {
	if x != nil {
		return x.ProfileLevel
	}
	return 0
}

func (x *UpgradeHeroResult) GetSeasonRank() int32 {
	if x != nil {
		return x.SeasonRank
	}
	return 0
}

func (x *UpgradeHeroResult) GetUserTrophy() int32 {
	if x != nil {
		return x.UserTrophy
	}
	return 0
}

func (x *UpgradeHeroResult) GetHeroId() string {
	if x != nil {
		return x.HeroId
	}
	return ""
}

func (x *UpgradeHeroResult) GetTHCBattle() int32 {
	if x != nil {
		return x.THCBattle
	}
	return 0
}

func (x *UpgradeHeroResult) GetTHCBattleLimit() int32 {
	if x != nil {
		return x.THCBattleLimit
	}
	return 0
}

func (x *UpgradeHeroResult) GetHeroLevel() int32 {
	if x != nil {
		return x.HeroLevel
	}
	return 0
}

func (x *UpgradeHeroResult) GetTrophyClass() int32 {
	if x != nil {
		return x.TrophyClass
	}
	return 0
}

func (x *UpgradeHeroResult) GetHeroTypeId() int32 {
	if x != nil {
		return x.HeroTypeId
	}
	return 0
}

func (x *UpgradeHeroResult) GetHeroRarity() int32 {
	if x != nil {
		return x.HeroRarity
	}
	return 0
}

func (x *UpgradeHeroResult) GetSkinRarity() int32 {
	if x != nil {
		return x.SkinRarity
	}
	return 0
}

func (x *UpgradeHeroResult) GetGTHCChange() int64 {
	if x != nil {
		return x.GTHCChange
	}
	return 0
}

func (x *UpgradeHeroResult) GetGTHGChange() int64 {
	if x != nil {
		return x.GTHGChange
	}
	return 0
}

func (x *UpgradeHeroResult) GetGPPChange() int64 {
	if x != nil {
		return x.GPPChange
	}
	return 0
}

func (x *UpgradeHeroResult) GetGTHC() int64 {
	if x != nil {
		return x.GTHC
	}
	return 0
}

func (x *UpgradeHeroResult) GetGTHG() int64 {
	if x != nil {
		return x.GTHG
	}
	return 0
}

func (x *UpgradeHeroResult) GetGPP() int64 {
	if x != nil {
		return x.GPP
	}
	return 0
}

func (x *UpgradeHeroResult) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpgradeHeroResult) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *UpgradeHeroResult) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *UpgradeHeroResult) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

type CurrencyChangeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleNumber  int32  `protobuf:"varint,1,opt,name=battleNumber,proto3" json:"battleNumber,omitempty"`
	UserId        string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	ProfileLevel  int32  `protobuf:"varint,3,opt,name=profileLevel,proto3" json:"profileLevel,omitempty"`
	UserTrophy    int32  `protobuf:"varint,4,opt,name=userTrophy,proto3" json:"userTrophy,omitempty"`
	SeasonRank    int32  `protobuf:"varint,5,opt,name=seasonRank,proto3" json:"seasonRank,omitempty"`
	CurrencyType  int32  `protobuf:"varint,6,opt,name=currencyType,proto3" json:"currencyType,omitempty"`
	ChangeValue   int64  `protobuf:"varint,7,opt,name=changeValue,proto3" json:"changeValue,omitempty"`
	PreValue      int64  `protobuf:"varint,8,opt,name=preValue,proto3" json:"preValue,omitempty"`
	NextValue     int64  `protobuf:"varint,9,opt,name=nextValue,proto3" json:"nextValue,omitempty"`
	Fee           int64  `protobuf:"varint,10,opt,name=fee,proto3" json:"fee,omitempty"`
	FeeType       int32  `protobuf:"varint,11,opt,name=feeType,proto3" json:"feeType,omitempty"`
	Decimals      int32  `protobuf:"varint,12,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Source        int32  `protobuf:"varint,13,opt,name=source,proto3" json:"source,omitempty"`
	TransactionId string `protobuf:"bytes,14,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	GameVersion   int32  `protobuf:"varint,15,opt,name=gameVersion,proto3" json:"gameVersion,omitempty"`
	ErrorCode     int32  `protobuf:"varint,16,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMsg      string `protobuf:"bytes,17,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	Timestamp     int64  `protobuf:"varint,18,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *CurrencyChangeResult) Reset() {
	*x = CurrencyChangeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_audit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyChangeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyChangeResult) ProtoMessage() {}

func (x *CurrencyChangeResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyChangeResult.ProtoReflect.Descriptor instead.
func (*CurrencyChangeResult) Descriptor() ([]byte, []int) {
	return file_proto_audit_proto_rawDescGZIP(), []int{3}
}

func (x *CurrencyChangeResult) GetBattleNumber() int32 {
	if x != nil {
		return x.BattleNumber
	}
	return 0
}

func (x *CurrencyChangeResult) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CurrencyChangeResult) GetProfileLevel() int32 {
	if x != nil {
		return x.ProfileLevel
	}
	return 0
}

func (x *CurrencyChangeResult) GetUserTrophy() int32 {
	if x != nil {
		return x.UserTrophy
	}
	return 0
}

func (x *CurrencyChangeResult) GetSeasonRank() int32 {
	if x != nil {
		return x.SeasonRank
	}
	return 0
}

func (x *CurrencyChangeResult) GetCurrencyType() int32 {
	if x != nil {
		return x.CurrencyType
	}
	return 0
}

func (x *CurrencyChangeResult) GetChangeValue() int64 {
	if x != nil {
		return x.ChangeValue
	}
	return 0
}

func (x *CurrencyChangeResult) GetPreValue() int64 {
	if x != nil {
		return x.PreValue
	}
	return 0
}

func (x *CurrencyChangeResult) GetNextValue() int64 {
	if x != nil {
		return x.NextValue
	}
	return 0
}

func (x *CurrencyChangeResult) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *CurrencyChangeResult) GetFeeType() int32 {
	if x != nil {
		return x.FeeType
	}
	return 0
}

func (x *CurrencyChangeResult) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *CurrencyChangeResult) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *CurrencyChangeResult) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *CurrencyChangeResult) GetGameVersion() int32 {
	if x != nil {
		return x.GameVersion
	}
	return 0
}

func (x *CurrencyChangeResult) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CurrencyChangeResult) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *CurrencyChangeResult) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type TrophyExpChangeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleNumber int32  `protobuf:"varint,1,opt,name=battleNumber,proto3" json:"battleNumber,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	GTHC         int64  `protobuf:"varint,3,opt,name=gTHC,proto3" json:"gTHC,omitempty"`
	GTHG         int64  `protobuf:"varint,4,opt,name=gTHG,proto3" json:"gTHG,omitempty"`
	GPP          int64  `protobuf:"varint,5,opt,name=gPP,proto3" json:"gPP,omitempty"`
	ExpChange    int32  `protobuf:"varint,6,opt,name=expChange,proto3" json:"expChange,omitempty"`
	TrophyChange int32  `protobuf:"varint,7,opt,name=trophyChange,proto3" json:"trophyChange,omitempty"`
	ProfileLevel int32  `protobuf:"varint,8,opt,name=profileLevel,proto3" json:"profileLevel,omitempty"`
	UserTrophy   int32  `protobuf:"varint,9,opt,name=userTrophy,proto3" json:"userTrophy,omitempty"`
	SeasonRank   int32  `protobuf:"varint,10,opt,name=seasonRank,proto3" json:"seasonRank,omitempty"`
	Source       int32  `protobuf:"varint,11,opt,name=source,proto3" json:"source,omitempty"`
	GameVersion  int32  `protobuf:"varint,12,opt,name=gameVersion,proto3" json:"gameVersion,omitempty"`
	ErrorCode    int32  `protobuf:"varint,13,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMsg     string `protobuf:"bytes,14,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	Timestamp    int64  `protobuf:"varint,15,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TrophyExpChangeResult) Reset() {
	*x = TrophyExpChangeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_audit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrophyExpChangeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrophyExpChangeResult) ProtoMessage() {}

func (x *TrophyExpChangeResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrophyExpChangeResult.ProtoReflect.Descriptor instead.
func (*TrophyExpChangeResult) Descriptor() ([]byte, []int) {
	return file_proto_audit_proto_rawDescGZIP(), []int{4}
}

func (x *TrophyExpChangeResult) GetBattleNumber() int32 {
	if x != nil {
		return x.BattleNumber
	}
	return 0
}

func (x *TrophyExpChangeResult) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TrophyExpChangeResult) GetGTHC() int64 {
	if x != nil {
		return x.GTHC
	}
	return 0
}

func (x *TrophyExpChangeResult) GetGTHG() int64 {
	if x != nil {
		return x.GTHG
	}
	return 0
}

func (x *TrophyExpChangeResult) GetGPP() int64 {
	if x != nil {
		return x.GPP
	}
	return 0
}

func (x *TrophyExpChangeResult) GetExpChange() int32 {
	if x != nil {
		return x.ExpChange
	}
	return 0
}

func (x *TrophyExpChangeResult) GetTrophyChange() int32 {
	if x != nil {
		return x.TrophyChange
	}
	return 0
}

func (x *TrophyExpChangeResult) GetProfileLevel() int32 {
	if x != nil {
		return x.ProfileLevel
	}
	return 0
}

func (x *TrophyExpChangeResult) GetUserTrophy() int32 {
	if x != nil {
		return x.UserTrophy
	}
	return 0
}

func (x *TrophyExpChangeResult) GetSeasonRank() int32 {
	if x != nil {
		return x.SeasonRank
	}
	return 0
}

func (x *TrophyExpChangeResult) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *TrophyExpChangeResult) GetGameVersion() int32 {
	if x != nil {
		return x.GameVersion
	}
	return 0
}

func (x *TrophyExpChangeResult) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *TrophyExpChangeResult) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *TrophyExpChangeResult) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type TransactionSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId    string  `protobuf:"bytes,1,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	UserId           string  `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	UserAddress      string  `protobuf:"bytes,3,opt,name=userAddress,proto3" json:"userAddress,omitempty"`
	SellerId         string  `protobuf:"bytes,4,opt,name=sellerId,proto3" json:"sellerId,omitempty"`
	SellerAddress    string  `protobuf:"bytes,5,opt,name=sellerAddress,proto3" json:"sellerAddress,omitempty"`
	HeroId           string  `protobuf:"bytes,6,opt,name=heroId,proto3" json:"heroId,omitempty"`
	HeroTypeId       int32   `protobuf:"varint,7,opt,name=heroTypeId,proto3" json:"heroTypeId,omitempty"`
	SkinId           int32   `protobuf:"varint,8,opt,name=skinId,proto3" json:"skinId,omitempty"`
	HeroRarity       int32   `protobuf:"varint,9,opt,name=heroRarity,proto3" json:"heroRarity,omitempty"`
	SkinRarity       int32   `protobuf:"varint,10,opt,name=skinRarity,proto3" json:"skinRarity,omitempty"`
	THCBattle        int32   `protobuf:"varint,11,opt,name=tHCBattle,proto3" json:"tHCBattle,omitempty"`
	THCBattleLimit   int32   `protobuf:"varint,12,opt,name=tHCBattleLimit,proto3" json:"tHCBattleLimit,omitempty"`
	HeroLevel        int32   `protobuf:"varint,13,opt,name=heroLevel,proto3" json:"heroLevel,omitempty"`
	TrophyClass      int32   `protobuf:"varint,14,opt,name=trophyClass,proto3" json:"trophyClass,omitempty"`
	PurchaseCurrency int32   `protobuf:"varint,15,opt,name=purchaseCurrency,proto3" json:"purchaseCurrency,omitempty"`
	PurchasePrice    int64   `protobuf:"varint,16,opt,name=purchasePrice,proto3" json:"purchasePrice,omitempty"`
	FeeCurrency      int32   `protobuf:"varint,17,opt,name=feeCurrency,proto3" json:"feeCurrency,omitempty"`
	Fee              int64   `protobuf:"varint,18,opt,name=fee,proto3" json:"fee,omitempty"`
	RealFee          float32 `protobuf:"fixed32,19,opt,name=realFee,proto3" json:"realFee,omitempty"`
	GTHC             int64   `protobuf:"varint,20,opt,name=gTHC,proto3" json:"gTHC,omitempty"`
	GTHG             int64   `protobuf:"varint,21,opt,name=gTHG,proto3" json:"gTHG,omitempty"`
	GPP              int64   `protobuf:"varint,22,opt,name=gPP,proto3" json:"gPP,omitempty"`
	Timestamp        int64   `protobuf:"varint,23,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Decimals         int32   `protobuf:"varint,24,opt,name=decimals,proto3" json:"decimals,omitempty"`
	OnMarketTime     int64   `protobuf:"varint,25,opt,name=onMarketTime,proto3" json:"onMarketTime,omitempty"`
}

func (x *TransactionSuccess) Reset() {
	*x = TransactionSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_audit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionSuccess) ProtoMessage() {}

func (x *TransactionSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionSuccess.ProtoReflect.Descriptor instead.
func (*TransactionSuccess) Descriptor() ([]byte, []int) {
	return file_proto_audit_proto_rawDescGZIP(), []int{5}
}

func (x *TransactionSuccess) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransactionSuccess) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TransactionSuccess) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *TransactionSuccess) GetSellerId() string {
	if x != nil {
		return x.SellerId
	}
	return ""
}

func (x *TransactionSuccess) GetSellerAddress() string {
	if x != nil {
		return x.SellerAddress
	}
	return ""
}

func (x *TransactionSuccess) GetHeroId() string {
	if x != nil {
		return x.HeroId
	}
	return ""
}

func (x *TransactionSuccess) GetHeroTypeId() int32 {
	if x != nil {
		return x.HeroTypeId
	}
	return 0
}

func (x *TransactionSuccess) GetSkinId() int32 {
	if x != nil {
		return x.SkinId
	}
	return 0
}

func (x *TransactionSuccess) GetHeroRarity() int32 {
	if x != nil {
		return x.HeroRarity
	}
	return 0
}

func (x *TransactionSuccess) GetSkinRarity() int32 {
	if x != nil {
		return x.SkinRarity
	}
	return 0
}

func (x *TransactionSuccess) GetTHCBattle() int32 {
	if x != nil {
		return x.THCBattle
	}
	return 0
}

func (x *TransactionSuccess) GetTHCBattleLimit() int32 {
	if x != nil {
		return x.THCBattleLimit
	}
	return 0
}

func (x *TransactionSuccess) GetHeroLevel() int32 {
	if x != nil {
		return x.HeroLevel
	}
	return 0
}

func (x *TransactionSuccess) GetTrophyClass() int32 {
	if x != nil {
		return x.TrophyClass
	}
	return 0
}

func (x *TransactionSuccess) GetPurchaseCurrency() int32 {
	if x != nil {
		return x.PurchaseCurrency
	}
	return 0
}

func (x *TransactionSuccess) GetPurchasePrice() int64 {
	if x != nil {
		return x.PurchasePrice
	}
	return 0
}

func (x *TransactionSuccess) GetFeeCurrency() int32 {
	if x != nil {
		return x.FeeCurrency
	}
	return 0
}

func (x *TransactionSuccess) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *TransactionSuccess) GetRealFee() float32 {
	if x != nil {
		return x.RealFee
	}
	return 0
}

func (x *TransactionSuccess) GetGTHC() int64 {
	if x != nil {
		return x.GTHC
	}
	return 0
}

func (x *TransactionSuccess) GetGTHG() int64 {
	if x != nil {
		return x.GTHG
	}
	return 0
}

func (x *TransactionSuccess) GetGPP() int64 {
	if x != nil {
		return x.GPP
	}
	return 0
}

func (x *TransactionSuccess) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TransactionSuccess) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *TransactionSuccess) GetOnMarketTime() int64 {
	if x != nil {
		return x.OnMarketTime
	}
	return 0
}

type HeroCreation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	HeroId    string `protobuf:"bytes,2,opt,name=heroId,proto3" json:"heroId,omitempty"`
	SkinId    int32  `protobuf:"varint,3,opt,name=skinId,proto3" json:"skinId,omitempty"`
	Source    int32  `protobuf:"varint,4,opt,name=source,proto3" json:"source,omitempty"`
	Timestamp int64  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *HeroCreation) Reset() {
	*x = HeroCreation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_audit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroCreation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroCreation) ProtoMessage() {}

func (x *HeroCreation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroCreation.ProtoReflect.Descriptor instead.
func (*HeroCreation) Descriptor() ([]byte, []int) {
	return file_proto_audit_proto_rawDescGZIP(), []int{6}
}

func (x *HeroCreation) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HeroCreation) GetHeroId() string {
	if x != nil {
		return x.HeroId
	}
	return ""
}

func (x *HeroCreation) GetSkinId() int32 {
	if x != nil {
		return x.SkinId
	}
	return 0
}

func (x *HeroCreation) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *HeroCreation) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type BoxEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	BoxId     int64  `protobuf:"varint,2,opt,name=boxId,proto3" json:"boxId,omitempty"`
	BoxType   int32  `protobuf:"varint,3,opt,name=boxType,proto3" json:"boxType,omitempty"`
	Source    int32  `protobuf:"varint,4,opt,name=source,proto3" json:"source,omitempty"`
	Timestamp int64  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *BoxEvent) Reset() {
	*x = BoxEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_audit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxEvent) ProtoMessage() {}

func (x *BoxEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxEvent.ProtoReflect.Descriptor instead.
func (*BoxEvent) Descriptor() ([]byte, []int) {
	return file_proto_audit_proto_rawDescGZIP(), []int{7}
}

func (x *BoxEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BoxEvent) GetBoxId() int64 {
	if x != nil {
		return x.BoxId
	}
	return 0
}

func (x *BoxEvent) GetBoxType() int32 {
	if x != nil {
		return x.BoxType
	}
	return 0
}

func (x *BoxEvent) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *BoxEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ReferReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ReferUserId string `protobuf:"bytes,2,opt,name=referUserId,proto3" json:"referUserId,omitempty"`
	IsCreator   bool   `protobuf:"varint,3,opt,name=isCreator,proto3" json:"isCreator,omitempty"`
	Timestamp   int64  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ReferReward) Reset() {
	*x = ReferReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_audit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReferReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReferReward) ProtoMessage() {}

func (x *ReferReward) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReferReward.ProtoReflect.Descriptor instead.
func (*ReferReward) Descriptor() ([]byte, []int) {
	return file_proto_audit_proto_rawDescGZIP(), []int{8}
}

func (x *ReferReward) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReferReward) GetReferUserId() string {
	if x != nil {
		return x.ReferUserId
	}
	return ""
}

func (x *ReferReward) GetIsCreator() bool {
	if x != nil {
		return x.IsCreator
	}
	return false
}

func (x *ReferReward) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type BattleEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	MatchId      string `protobuf:"bytes,2,opt,name=matchId,proto3" json:"matchId,omitempty"`
	BattleNumber int32  `protobuf:"varint,3,opt,name=battleNumber,proto3" json:"battleNumber,omitempty"`
	HeroId       string `protobuf:"bytes,4,opt,name=heroId,proto3" json:"heroId,omitempty"`
	Rank         int32  `protobuf:"varint,5,opt,name=rank,proto3" json:"rank,omitempty"`
	IngameMode   int32  `protobuf:"varint,6,opt,name=ingameMode,proto3" json:"ingameMode,omitempty"`
	Result       int32  `protobuf:"varint,7,opt,name=result,proto3" json:"result,omitempty"`
	TrophyChange int32  `protobuf:"varint,8,opt,name=trophyChange,proto3" json:"trophyChange,omitempty"`
	Trophy       int32  `protobuf:"varint,9,opt,name=trophy,proto3" json:"trophy,omitempty"`
	ExpChange    int32  `protobuf:"varint,10,opt,name=expChange,proto3" json:"expChange,omitempty"`
	Timestamp    int64  `protobuf:"varint,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *BattleEnd) Reset() {
	*x = BattleEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_audit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleEnd) ProtoMessage() {}

func (x *BattleEnd) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleEnd.ProtoReflect.Descriptor instead.
func (*BattleEnd) Descriptor() ([]byte, []int) {
	return file_proto_audit_proto_rawDescGZIP(), []int{9}
}

func (x *BattleEnd) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BattleEnd) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *BattleEnd) GetBattleNumber() int32 {
	if x != nil {
		return x.BattleNumber
	}
	return 0
}

func (x *BattleEnd) GetHeroId() string {
	if x != nil {
		return x.HeroId
	}
	return ""
}

func (x *BattleEnd) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *BattleEnd) GetIngameMode() int32 {
	if x != nil {
		return x.IngameMode
	}
	return 0
}

func (x *BattleEnd) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *BattleEnd) GetTrophyChange() int32 {
	if x != nil {
		return x.TrophyChange
	}
	return 0
}

func (x *BattleEnd) GetTrophy() int32 {
	if x != nil {
		return x.Trophy
	}
	return 0
}

func (x *BattleEnd) GetExpChange() int32 {
	if x != nil {
		return x.ExpChange
	}
	return 0
}

func (x *BattleEnd) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type LoginEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	IpAddress string `protobuf:"bytes,2,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	Platform  int32  `protobuf:"varint,3,opt,name=platform,proto3" json:"platform,omitempty"`
	DeviceId  string `protobuf:"bytes,4,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Timestamp int64  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	LoginType int32  `protobuf:"varint,6,opt,name=loginType,proto3" json:"loginType,omitempty"`
}

func (x *LoginEvent) Reset() {
	*x = LoginEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_audit_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginEvent) ProtoMessage() {}

func (x *LoginEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginEvent.ProtoReflect.Descriptor instead.
func (*LoginEvent) Descriptor() ([]byte, []int) {
	return file_proto_audit_proto_rawDescGZIP(), []int{10}
}

func (x *LoginEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LoginEvent) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *LoginEvent) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *LoginEvent) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *LoginEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LoginEvent) GetLoginType() int32 {
	if x != nil {
		return x.LoginType
	}
	return 0
}

type AdminEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId   string `protobuf:"bytes,1,opt,name=adminId,proto3" json:"adminId,omitempty"`
	IpAddress string `protobuf:"bytes,2,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Role      int32  `protobuf:"varint,4,opt,name=role,proto3" json:"role,omitempty"`
	Function  int32  `protobuf:"varint,5,opt,name=function,proto3" json:"function,omitempty"`
	Request   string `protobuf:"bytes,6,opt,name=request,proto3" json:"request,omitempty"`
	JsonData  []byte `protobuf:"bytes,7,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
	Timestamp int64  `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *AdminEvent) Reset() {
	*x = AdminEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_audit_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminEvent) ProtoMessage() {}

func (x *AdminEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminEvent.ProtoReflect.Descriptor instead.
func (*AdminEvent) Descriptor() ([]byte, []int) {
	return file_proto_audit_proto_rawDescGZIP(), []int{11}
}

func (x *AdminEvent) GetAdminId() string {
	if x != nil {
		return x.AdminId
	}
	return ""
}

func (x *AdminEvent) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *AdminEvent) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AdminEvent) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *AdminEvent) GetFunction() int32 {
	if x != nil {
		return x.Function
	}
	return 0
}

func (x *AdminEvent) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *AdminEvent) GetJsonData() []byte {
	if x != nil {
		return x.JsonData
	}
	return nil
}

func (x *AdminEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type THCConvertEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Thc       int64  `protobuf:"varint,3,opt,name=thc,proto3" json:"thc,omitempty"`
	Thg       int64  `protobuf:"varint,4,opt,name=thg,proto3" json:"thg,omitempty"`
	Term      int32  `protobuf:"varint,5,opt,name=term,proto3" json:"term,omitempty"`
	ErrMsg    string `protobuf:"bytes,6,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *THCConvertEvent) Reset() {
	*x = THCConvertEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_audit_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *THCConvertEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*THCConvertEvent) ProtoMessage() {}

func (x *THCConvertEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use THCConvertEvent.ProtoReflect.Descriptor instead.
func (*THCConvertEvent) Descriptor() ([]byte, []int) {
	return file_proto_audit_proto_rawDescGZIP(), []int{12}
}

func (x *THCConvertEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *THCConvertEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *THCConvertEvent) GetThc() int64 {
	if x != nil {
		return x.Thc
	}
	return 0
}

func (x *THCConvertEvent) GetThg() int64 {
	if x != nil {
		return x.Thg
	}
	return 0
}

func (x *THCConvertEvent) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *THCConvertEvent) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type SimpleEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event    *SimpleEventContent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Metadata map[string]string   `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SimpleEvent) Reset() {
	*x = SimpleEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_audit_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleEvent) ProtoMessage() {}

func (x *SimpleEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleEvent.ProtoReflect.Descriptor instead.
func (*SimpleEvent) Descriptor() ([]byte, []int) {
	return file_proto_audit_proto_rawDescGZIP(), []int{13}
}

func (x *SimpleEvent) GetEvent() *SimpleEventContent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *SimpleEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type SimpleEventContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventName   string     `protobuf:"bytes,1,opt,name=eventName,proto3" json:"eventName,omitempty"`
	Timestamp   int64      `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	EventParams []*KeyPair `protobuf:"bytes,3,rep,name=eventParams,proto3" json:"eventParams,omitempty"`
}

func (x *SimpleEventContent) Reset() {
	*x = SimpleEventContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_audit_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleEventContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleEventContent) ProtoMessage() {}

func (x *SimpleEventContent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleEventContent.ProtoReflect.Descriptor instead.
func (*SimpleEventContent) Descriptor() ([]byte, []int) {
	return file_proto_audit_proto_rawDescGZIP(), []int{14}
}

func (x *SimpleEventContent) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *SimpleEventContent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SimpleEventContent) GetEventParams() []*KeyPair {
	if x != nil {
		return x.EventParams
	}
	return nil
}

type KeyPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyPair) Reset() {
	*x = KeyPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_audit_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPair) ProtoMessage() {}

func (x *KeyPair) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPair.ProtoReflect.Descriptor instead.
func (*KeyPair) Descriptor() ([]byte, []int) {
	return file_proto_audit_proto_rawDescGZIP(), []int{15}
}

func (x *KeyPair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyPair) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_proto_audit_proto protoreflect.FileDescriptor

var file_proto_audit_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8b, 0x03, 0x0a, 0x11, 0x42, 0x6f, 0x78, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62,
	0x6f, 0x78, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x78, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x6f, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x6f, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x62, 0x6f, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x54, 0x48, 0x43, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x67, 0x54, 0x48, 0x43, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x54,
	0x48, 0x47, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x67, 0x54, 0x48, 0x47, 0x12, 0x10,
	0x0a, 0x03, 0x67, 0x50, 0x50, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x67, 0x50, 0x50,
	0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x22, 0x95,
	0x03, 0x0a, 0x0d, 0x42, 0x6f, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x78, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x6f, 0x78, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x62, 0x6f, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x54, 0x48, 0x43,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x67, 0x54, 0x48, 0x43, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x54, 0x48, 0x47, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x67, 0x54, 0x48, 0x47,
	0x12, 0x10, 0x0a, 0x03, 0x67, 0x50, 0x50, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x67,
	0x50, 0x50, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65,
	0x72, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x68, 0x65, 0x72, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b,
	0x69, 0x6e, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x72, 0x6f, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x68, 0x65, 0x72, 0x6f, 0x52, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6e, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6e, 0x52, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x22, 0xbd, 0x05, 0x0a, 0x11, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65,
	0x72, 0x6f, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x48, 0x43, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x48, 0x43, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x48, 0x43, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x48, 0x43, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65,
	0x72, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68,
	0x65, 0x72, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x6f, 0x70,
	0x68, 0x79, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74,
	0x72, 0x6f, 0x70, 0x68, 0x79, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65,
	0x72, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x68, 0x65, 0x72, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65,
	0x72, 0x6f, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x68, 0x65, 0x72, 0x6f, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6b,
	0x69, 0x6e, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x6b, 0x69, 0x6e, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x54,
	0x48, 0x43, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x67, 0x54, 0x48, 0x43, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x54,
	0x48, 0x47, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x67, 0x54, 0x48, 0x47, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x50,
	0x50, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67,
	0x50, 0x50, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x54, 0x48, 0x43,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x67, 0x54, 0x48, 0x43, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x54, 0x48, 0x47, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x67, 0x54, 0x48, 0x47,
	0x12, 0x10, 0x0a, 0x03, 0x67, 0x50, 0x50, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x67,
	0x50, 0x50, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x22, 0xb6, 0x04, 0x0a, 0x14, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x66, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73,
	0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0xc5, 0x03, 0x0a, 0x15, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x45, 0x78, 0x70, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x54, 0x48, 0x43, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x67, 0x54, 0x48, 0x43, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x54, 0x48,
	0x47, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x67, 0x54, 0x48, 0x47, 0x12, 0x10, 0x0a,
	0x03, 0x67, 0x50, 0x50, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x67, 0x50, 0x50, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x54, 0x72, 0x6f,
	0x70, 0x68, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x72, 0x6f, 0x70, 0x68, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x61, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x67, 0x61, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x84, 0x06, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x72, 0x6f,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x68, 0x65,
	0x72, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6e,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x72, 0x6f, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x68, 0x65, 0x72, 0x6f, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6e, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6e, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x48, 0x43, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x48, 0x43, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x74, 0x48, 0x43, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x48, 0x43, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x72, 0x6f, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x65, 0x72, 0x6f, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x72, 0x6f, 0x70, 0x68,
	0x79, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x65, 0x65, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66,
	0x65, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x72,
	0x65, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x54, 0x48, 0x43, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x67, 0x54, 0x48, 0x43, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x54,
	0x48, 0x47, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x67, 0x54, 0x48, 0x47, 0x12, 0x10,
	0x0a, 0x03, 0x67, 0x50, 0x50, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x67, 0x50, 0x50,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x6e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8c,
	0x01, 0x0a, 0x0c, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x88, 0x01,
	0x0a, 0x08, 0x42, 0x6f, 0x78, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x78, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x6f, 0x78, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x83, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xbd,
	0x02, 0x0a, 0x09, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x6f, 0x70, 0x68, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x72,
	0x6f, 0x70, 0x68, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72,
	0x6f, 0x70, 0x68, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x72, 0x6f, 0x70,
	0x68, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xb6,
	0x01, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x54, 0x48, 0x43,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x68, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x74, 0x68, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x68, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x74, 0x68, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x22, 0xc5, 0x01, 0x0a, 0x0b, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a,
	0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x88, 0x01, 0x0a, 0x12, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x36, 0x0a,
	0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x31, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_audit_proto_rawDescOnce sync.Once
	file_proto_audit_proto_rawDescData = file_proto_audit_proto_rawDesc
)

func file_proto_audit_proto_rawDescGZIP() []byte {
	file_proto_audit_proto_rawDescOnce.Do(func() {
		file_proto_audit_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_audit_proto_rawDescData)
	})
	return file_proto_audit_proto_rawDescData
}

var file_proto_audit_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_audit_proto_goTypes = []interface{}{
	(*BoxPurchaseResult)(nil),     // 0: commonproto.BoxPurchaseResult
	(*BoxOpenResult)(nil),         // 1: commonproto.BoxOpenResult
	(*UpgradeHeroResult)(nil),     // 2: commonproto.UpgradeHeroResult
	(*CurrencyChangeResult)(nil),  // 3: commonproto.CurrencyChangeResult
	(*TrophyExpChangeResult)(nil), // 4: commonproto.TrophyExpChangeResult
	(*TransactionSuccess)(nil),    // 5: commonproto.TransactionSuccess
	(*HeroCreation)(nil),          // 6: commonproto.HeroCreation
	(*BoxEvent)(nil),              // 7: commonproto.BoxEvent
	(*ReferReward)(nil),           // 8: commonproto.ReferReward
	(*BattleEnd)(nil),             // 9: commonproto.BattleEnd
	(*LoginEvent)(nil),            // 10: commonproto.LoginEvent
	(*AdminEvent)(nil),            // 11: commonproto.AdminEvent
	(*THCConvertEvent)(nil),       // 12: commonproto.THCConvertEvent
	(*SimpleEvent)(nil),           // 13: commonproto.SimpleEvent
	(*SimpleEventContent)(nil),    // 14: commonproto.SimpleEventContent
	(*KeyPair)(nil),               // 15: commonproto.KeyPair
	nil,                           // 16: commonproto.SimpleEvent.MetadataEntry
}
var file_proto_audit_proto_depIdxs = []int32{
	14, // 0: commonproto.SimpleEvent.event:type_name -> commonproto.SimpleEventContent
	16, // 1: commonproto.SimpleEvent.metadata:type_name -> commonproto.SimpleEvent.MetadataEntry
	15, // 2: commonproto.SimpleEventContent.eventParams:type_name -> commonproto.KeyPair
	3,  // [3:3] is the sub-list for method output_type
	3,  // [3:3] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_proto_audit_proto_init() }
func file_proto_audit_proto_init() {
	if File_proto_audit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_audit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxPurchaseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_audit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxOpenResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_audit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeHeroResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_audit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyChangeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_audit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrophyExpChangeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_audit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_audit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroCreation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_audit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_audit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReferReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_audit_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_audit_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_audit_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_audit_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*THCConvertEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_audit_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_audit_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleEventContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_audit_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_audit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_audit_proto_goTypes,
		DependencyIndexes: file_proto_audit_proto_depIdxs,
		MessageInfos:      file_proto_audit_proto_msgTypes,
	}.Build()
	File_proto_audit_proto = out.File
	file_proto_audit_proto_rawDesc = nil
	file_proto_audit_proto_goTypes = nil
	file_proto_audit_proto_depIdxs = nil
}
