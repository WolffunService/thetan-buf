// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: thetan/immortal/v1/immortal_shared.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Thetan.Immortal.V1 {

  /// <summary>Holder for reflection information generated from thetan/immortal/v1/immortal_shared.proto</summary>
  public static partial class ImmortalSharedReflection {

    #region Descriptor
    /// <summary>File descriptor for thetan/immortal/v1/immortal_shared.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ImmortalSharedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cih0aGV0YW4vaW1tb3J0YWwvdjEvaW1tb3J0YWxfc2hhcmVkLnByb3RvEhJ0",
            "aGV0YW4uaW1tb3J0YWwudjEiYAoESGVybxIWCgZoZXJvSUQYASABKAlSBmhl",
            "cm9JRBIWCgZza2luSUQYAiABKAVSBnNraW5JRBIUCgVsZXZlbBgDIAEoBVIF",
            "bGV2ZWwSEgoEdHlwZRgEIAEoBVIEdHlwZSI3CgVTa2lsbBIYCgdza2lsbElE",
            "GAEgASgNUgdza2lsbElEEhQKBWxldmVsGAIgASgFUgVsZXZlbCLdAwocSW1t",
            "b3J0YWxQbGF5ZXJJbmZvTWF0Y2hQcm90bxIaCghwbGF5ZXJJRBgBIAEoCVII",
            "cGxheWVySUQSHgoKcGxheWVyTmFtZRgCIAEoCVIKcGxheWVyTmFtZRIaCghh",
            "dmF0YXJJRBgDIAEoBVIIYXZhdGFySUQSGAoHZnJhbWVJRBgEIAEoBVIHZnJh",
            "bWVJRBIgCgtuYW1lQ29sb3JJRBgFIAEoBVILbmFtZUNvbG9ySUQSIAoLYmF0",
            "dGxlQ291bnQYBiABKAVSC2JhdHRsZUNvdW50EhgKB3BhcnR5SUQYByABKAlS",
            "B3BhcnR5SUQSHgoKdHJvcGh5UmFuaxgIIAEoBVIKdHJvcGh5UmFuaxIiCgx0",
            "cm9waHlTZWFyY2gYCSABKAVSDHRyb3BoeVNlYXJjaBISCgRyYW5rGAogASgF",
            "UgRyYW5rEiwKBGhlcm8YCyABKAsyGC50aGV0YW4uaW1tb3J0YWwudjEuSGVy",
            "b1IEaGVybxIxCgZza2lsbHMYDCADKAsyGS50aGV0YW4uaW1tb3J0YWwudjEu",
            "U2tpbGxSBnNraWxscxIaCghib3RCcmFpbhgNIAEoBVIIYm90QnJhaW4SGAoH",
            "cmVnaW9ucxgOIAMoBVIHcmVnaW9uc0LQAQoWY29tLnRoZXRhbi5pbW1vcnRh",
            "bC52MUITSW1tb3J0YWxTaGFyZWRQcm90b1ABWjd0aGV0YW4tYnVmL2dlbi9n",
            "by90aGV0YW4vaW1tb3J0YWwvdjE7dGhldGFuX2ltbW9ydGFsX3YxogIDVElY",
            "qgISVGhldGFuLkltbW9ydGFsLlYxygISVGhldGFuXEltbW9ydGFsXFYx4gIe",
            "VGhldGFuXEltbW9ydGFsXFYxXEdQQk1ldGFkYXRh6gIUVGhldGFuOjpJbW1v",
            "cnRhbDo6VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Immortal.V1.Hero), global::Thetan.Immortal.V1.Hero.Parser, new[]{ "HeroID", "SkinID", "Level", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Immortal.V1.Skill), global::Thetan.Immortal.V1.Skill.Parser, new[]{ "SkillID", "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Thetan.Immortal.V1.ImmortalPlayerInfoMatchProto), global::Thetan.Immortal.V1.ImmortalPlayerInfoMatchProto.Parser, new[]{ "PlayerID", "PlayerName", "AvatarID", "FrameID", "NameColorID", "BattleCount", "PartyID", "TrophyRank", "TrophySearch", "Rank", "Hero", "Skills", "BotBrain", "Regions" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Hero : pb::IMessage<Hero>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Hero> _parser = new pb::MessageParser<Hero>(() => new Hero());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Hero> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Immortal.V1.ImmortalSharedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Hero() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Hero(Hero other) : this() {
      heroID_ = other.heroID_;
      skinID_ = other.skinID_;
      level_ = other.level_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Hero Clone() {
      return new Hero(this);
    }

    /// <summary>Field number for the "heroID" field.</summary>
    public const int HeroIDFieldNumber = 1;
    private string heroID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HeroID {
      get { return heroID_; }
      set {
        heroID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skinID" field.</summary>
    public const int SkinIDFieldNumber = 2;
    private int skinID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkinID {
      get { return skinID_; }
      set {
        skinID_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Hero);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Hero other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroID != other.HeroID) return false;
      if (SkinID != other.SkinID) return false;
      if (Level != other.Level) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroID.Length != 0) hash ^= HeroID.GetHashCode();
      if (SkinID != 0) hash ^= SkinID.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HeroID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HeroID);
      }
      if (SkinID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SkinID);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HeroID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HeroID);
      }
      if (SkinID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SkinID);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HeroID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeroID);
      }
      if (SkinID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkinID);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Hero other) {
      if (other == null) {
        return;
      }
      if (other.HeroID.Length != 0) {
        HeroID = other.HeroID;
      }
      if (other.SkinID != 0) {
        SkinID = other.SkinID;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HeroID = input.ReadString();
            break;
          }
          case 16: {
            SkinID = input.ReadInt32();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HeroID = input.ReadString();
            break;
          }
          case 16: {
            SkinID = input.ReadInt32();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Skill : pb::IMessage<Skill>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Skill> _parser = new pb::MessageParser<Skill>(() => new Skill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Skill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Immortal.V1.ImmortalSharedReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill(Skill other) : this() {
      skillID_ = other.skillID_;
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill Clone() {
      return new Skill(this);
    }

    /// <summary>Field number for the "skillID" field.</summary>
    public const int SkillIDFieldNumber = 1;
    private uint skillID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SkillID {
      get { return skillID_; }
      set {
        skillID_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Skill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Skill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SkillID != other.SkillID) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SkillID != 0) hash ^= SkillID.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SkillID != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SkillID);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SkillID != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SkillID);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SkillID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SkillID);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Skill other) {
      if (other == null) {
        return;
      }
      if (other.SkillID != 0) {
        SkillID = other.SkillID;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SkillID = input.ReadUInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SkillID = input.ReadUInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ImmortalPlayerInfoMatchProto : pb::IMessage<ImmortalPlayerInfoMatchProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImmortalPlayerInfoMatchProto> _parser = new pb::MessageParser<ImmortalPlayerInfoMatchProto>(() => new ImmortalPlayerInfoMatchProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ImmortalPlayerInfoMatchProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Thetan.Immortal.V1.ImmortalSharedReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ImmortalPlayerInfoMatchProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ImmortalPlayerInfoMatchProto(ImmortalPlayerInfoMatchProto other) : this() {
      playerID_ = other.playerID_;
      playerName_ = other.playerName_;
      avatarID_ = other.avatarID_;
      frameID_ = other.frameID_;
      nameColorID_ = other.nameColorID_;
      battleCount_ = other.battleCount_;
      partyID_ = other.partyID_;
      trophyRank_ = other.trophyRank_;
      trophySearch_ = other.trophySearch_;
      rank_ = other.rank_;
      hero_ = other.hero_ != null ? other.hero_.Clone() : null;
      skills_ = other.skills_.Clone();
      botBrain_ = other.botBrain_;
      regions_ = other.regions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ImmortalPlayerInfoMatchProto Clone() {
      return new ImmortalPlayerInfoMatchProto(this);
    }

    /// <summary>Field number for the "playerID" field.</summary>
    public const int PlayerIDFieldNumber = 1;
    private string playerID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerID {
      get { return playerID_; }
      set {
        playerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 2;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatarID" field.</summary>
    public const int AvatarIDFieldNumber = 3;
    private int avatarID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AvatarID {
      get { return avatarID_; }
      set {
        avatarID_ = value;
      }
    }

    /// <summary>Field number for the "frameID" field.</summary>
    public const int FrameIDFieldNumber = 4;
    private int frameID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FrameID {
      get { return frameID_; }
      set {
        frameID_ = value;
      }
    }

    /// <summary>Field number for the "nameColorID" field.</summary>
    public const int NameColorIDFieldNumber = 5;
    private int nameColorID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NameColorID {
      get { return nameColorID_; }
      set {
        nameColorID_ = value;
      }
    }

    /// <summary>Field number for the "battleCount" field.</summary>
    public const int BattleCountFieldNumber = 6;
    private int battleCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BattleCount {
      get { return battleCount_; }
      set {
        battleCount_ = value;
      }
    }

    /// <summary>Field number for the "partyID" field.</summary>
    public const int PartyIDFieldNumber = 7;
    private string partyID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PartyID {
      get { return partyID_; }
      set {
        partyID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trophyRank" field.</summary>
    public const int TrophyRankFieldNumber = 8;
    private int trophyRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrophyRank {
      get { return trophyRank_; }
      set {
        trophyRank_ = value;
      }
    }

    /// <summary>Field number for the "trophySearch" field.</summary>
    public const int TrophySearchFieldNumber = 9;
    private int trophySearch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrophySearch {
      get { return trophySearch_; }
      set {
        trophySearch_ = value;
      }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 10;
    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "hero" field.</summary>
    public const int HeroFieldNumber = 11;
    private global::Thetan.Immortal.V1.Hero hero_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Thetan.Immortal.V1.Hero Hero {
      get { return hero_; }
      set {
        hero_ = value;
      }
    }

    /// <summary>Field number for the "skills" field.</summary>
    public const int SkillsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Thetan.Immortal.V1.Skill> _repeated_skills_codec
        = pb::FieldCodec.ForMessage(98, global::Thetan.Immortal.V1.Skill.Parser);
    private readonly pbc::RepeatedField<global::Thetan.Immortal.V1.Skill> skills_ = new pbc::RepeatedField<global::Thetan.Immortal.V1.Skill>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Thetan.Immortal.V1.Skill> Skills {
      get { return skills_; }
    }

    /// <summary>Field number for the "botBrain" field.</summary>
    public const int BotBrainFieldNumber = 13;
    private int botBrain_;
    /// <summary>
    /// default value is human
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BotBrain {
      get { return botBrain_; }
      set {
        botBrain_ = value;
      }
    }

    /// <summary>Field number for the "regions" field.</summary>
    public const int RegionsFieldNumber = 14;
    private static readonly pb::FieldCodec<int> _repeated_regions_codec
        = pb::FieldCodec.ForInt32(114);
    private readonly pbc::RepeatedField<int> regions_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Regions {
      get { return regions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ImmortalPlayerInfoMatchProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ImmortalPlayerInfoMatchProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerID != other.PlayerID) return false;
      if (PlayerName != other.PlayerName) return false;
      if (AvatarID != other.AvatarID) return false;
      if (FrameID != other.FrameID) return false;
      if (NameColorID != other.NameColorID) return false;
      if (BattleCount != other.BattleCount) return false;
      if (PartyID != other.PartyID) return false;
      if (TrophyRank != other.TrophyRank) return false;
      if (TrophySearch != other.TrophySearch) return false;
      if (Rank != other.Rank) return false;
      if (!object.Equals(Hero, other.Hero)) return false;
      if(!skills_.Equals(other.skills_)) return false;
      if (BotBrain != other.BotBrain) return false;
      if(!regions_.Equals(other.regions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerID.Length != 0) hash ^= PlayerID.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (AvatarID != 0) hash ^= AvatarID.GetHashCode();
      if (FrameID != 0) hash ^= FrameID.GetHashCode();
      if (NameColorID != 0) hash ^= NameColorID.GetHashCode();
      if (BattleCount != 0) hash ^= BattleCount.GetHashCode();
      if (PartyID.Length != 0) hash ^= PartyID.GetHashCode();
      if (TrophyRank != 0) hash ^= TrophyRank.GetHashCode();
      if (TrophySearch != 0) hash ^= TrophySearch.GetHashCode();
      if (Rank != 0) hash ^= Rank.GetHashCode();
      if (hero_ != null) hash ^= Hero.GetHashCode();
      hash ^= skills_.GetHashCode();
      if (BotBrain != 0) hash ^= BotBrain.GetHashCode();
      hash ^= regions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerID);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (AvatarID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AvatarID);
      }
      if (FrameID != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FrameID);
      }
      if (NameColorID != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NameColorID);
      }
      if (BattleCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BattleCount);
      }
      if (PartyID.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PartyID);
      }
      if (TrophyRank != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TrophyRank);
      }
      if (TrophySearch != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(TrophySearch);
      }
      if (Rank != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Rank);
      }
      if (hero_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Hero);
      }
      skills_.WriteTo(output, _repeated_skills_codec);
      if (BotBrain != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(BotBrain);
      }
      regions_.WriteTo(output, _repeated_regions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerID);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (AvatarID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AvatarID);
      }
      if (FrameID != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FrameID);
      }
      if (NameColorID != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NameColorID);
      }
      if (BattleCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BattleCount);
      }
      if (PartyID.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PartyID);
      }
      if (TrophyRank != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TrophyRank);
      }
      if (TrophySearch != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(TrophySearch);
      }
      if (Rank != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Rank);
      }
      if (hero_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Hero);
      }
      skills_.WriteTo(ref output, _repeated_skills_codec);
      if (BotBrain != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(BotBrain);
      }
      regions_.WriteTo(ref output, _repeated_regions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerID);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (AvatarID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarID);
      }
      if (FrameID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameID);
      }
      if (NameColorID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NameColorID);
      }
      if (BattleCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BattleCount);
      }
      if (PartyID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartyID);
      }
      if (TrophyRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrophyRank);
      }
      if (TrophySearch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrophySearch);
      }
      if (Rank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (hero_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hero);
      }
      size += skills_.CalculateSize(_repeated_skills_codec);
      if (BotBrain != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BotBrain);
      }
      size += regions_.CalculateSize(_repeated_regions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ImmortalPlayerInfoMatchProto other) {
      if (other == null) {
        return;
      }
      if (other.PlayerID.Length != 0) {
        PlayerID = other.PlayerID;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.AvatarID != 0) {
        AvatarID = other.AvatarID;
      }
      if (other.FrameID != 0) {
        FrameID = other.FrameID;
      }
      if (other.NameColorID != 0) {
        NameColorID = other.NameColorID;
      }
      if (other.BattleCount != 0) {
        BattleCount = other.BattleCount;
      }
      if (other.PartyID.Length != 0) {
        PartyID = other.PartyID;
      }
      if (other.TrophyRank != 0) {
        TrophyRank = other.TrophyRank;
      }
      if (other.TrophySearch != 0) {
        TrophySearch = other.TrophySearch;
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      if (other.hero_ != null) {
        if (hero_ == null) {
          Hero = new global::Thetan.Immortal.V1.Hero();
        }
        Hero.MergeFrom(other.Hero);
      }
      skills_.Add(other.skills_);
      if (other.BotBrain != 0) {
        BotBrain = other.BotBrain;
      }
      regions_.Add(other.regions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerID = input.ReadString();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 24: {
            AvatarID = input.ReadInt32();
            break;
          }
          case 32: {
            FrameID = input.ReadInt32();
            break;
          }
          case 40: {
            NameColorID = input.ReadInt32();
            break;
          }
          case 48: {
            BattleCount = input.ReadInt32();
            break;
          }
          case 58: {
            PartyID = input.ReadString();
            break;
          }
          case 64: {
            TrophyRank = input.ReadInt32();
            break;
          }
          case 72: {
            TrophySearch = input.ReadInt32();
            break;
          }
          case 80: {
            Rank = input.ReadInt32();
            break;
          }
          case 90: {
            if (hero_ == null) {
              Hero = new global::Thetan.Immortal.V1.Hero();
            }
            input.ReadMessage(Hero);
            break;
          }
          case 98: {
            skills_.AddEntriesFrom(input, _repeated_skills_codec);
            break;
          }
          case 104: {
            BotBrain = input.ReadInt32();
            break;
          }
          case 114:
          case 112: {
            regions_.AddEntriesFrom(input, _repeated_regions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerID = input.ReadString();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 24: {
            AvatarID = input.ReadInt32();
            break;
          }
          case 32: {
            FrameID = input.ReadInt32();
            break;
          }
          case 40: {
            NameColorID = input.ReadInt32();
            break;
          }
          case 48: {
            BattleCount = input.ReadInt32();
            break;
          }
          case 58: {
            PartyID = input.ReadString();
            break;
          }
          case 64: {
            TrophyRank = input.ReadInt32();
            break;
          }
          case 72: {
            TrophySearch = input.ReadInt32();
            break;
          }
          case 80: {
            Rank = input.ReadInt32();
            break;
          }
          case 90: {
            if (hero_ == null) {
              Hero = new global::Thetan.Immortal.V1.Hero();
            }
            input.ReadMessage(Hero);
            break;
          }
          case 98: {
            skills_.AddEntriesFrom(ref input, _repeated_skills_codec);
            break;
          }
          case 104: {
            BotBrain = input.ReadInt32();
            break;
          }
          case 114:
          case 112: {
            regions_.AddEntriesFrom(ref input, _repeated_regions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
