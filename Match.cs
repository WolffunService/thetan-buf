// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Match.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Core.Proto {

  /// <summary>Holder for reflection information generated from Match.proto</summary>
  public static partial class MatchReflection {

    #region Descriptor
    /// <summary>File descriptor for Match.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MatchReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtNYXRjaC5wcm90bxIKY29yZS5wcm90bxoMQ29tbW9uLnByb3RvIu4CCgpU",
            "aWNrZXREYXRhEhoKCHBsYXllcklkGAEgASgJUghwbGF5ZXJJZBIwCghnYW1l",
            "TW9kZRgCIAEoDjIULmNvcmUucHJvdG8uR2FtZU1vZGVSCGdhbWVNb2RlEjYK",
            "CmluR2FtZU1vZGUYAyABKA4yFi5jb3JlLnByb3RvLkluR2FtZU1vZGVSCmlu",
            "R2FtZU1vZGUSGAoHZXZlbnRJZBgEIAEoCVIHZXZlbnRJZBI6CgdwbGF5ZXJz",
            "GAUgAygLMiAuY29yZS5wcm90by5QbGF5ZXJJbmZvTWF0Y2hQcm90b1IHcGxh",
            "eWVycxIYCgdyZWdpb25zGAYgAygFUgdyZWdpb25zEhgKB3BhcnR5SWQYByAB",
            "KAlSB3BhcnR5SWQSGgoIdGlja2V0SWQYCCABKAlSCHRpY2tldElkEh4KCmNy",
            "ZWF0ZVRpbWUYCSABKANSCmNyZWF0ZVRpbWUSFAoFZ3JvdXAYCiABKAVSBWdy",
            "b3VwIs0CChdNYXRjaE1ha2luZ1JlcXVlc3RQcm90bxIaCghwbGF5ZXJJZBgE",
            "IAEoCVIIcGxheWVySWQSGAoHcGFydHlJZBgFIAEoCVIHcGFydHlJZBIwCghn",
            "YW1lTW9kZRgBIAEoDjIULmNvcmUucHJvdG8uR2FtZU1vZGVSCGdhbWVNb2Rl",
            "EjYKCmluR2FtZU1vZGUYAiABKA4yFi5jb3JlLnByb3RvLkluR2FtZU1vZGVS",
            "CmluR2FtZU1vZGUSGgoIdHJvcGhpZXMYAyABKAVSCHRyb3BoaWVzEhgKB3Jl",
            "Z2lvbnMYBiADKAVSB3JlZ2lvbnMSOgoHcGxheWVycxgHIAMoCzIgLmNvcmUu",
            "cHJvdG8uUGxheWVySW5mb01hdGNoUHJvdG9SB3BsYXllcnMSIAoLaXNQbGF5",
            "QWdhaW4YCCABKAhSC2lzUGxheUFnYWluIlYKGE1hdGNoTWFraW5nRGF0YVBs",
            "YXlBZ2FpbhI6CgdwbGF5ZXJzGAEgAygLMiAuY29yZS5wcm90by5QbGF5ZXJJ",
            "bmZvTWF0Y2hQcm90b1IHcGxheWVycyKsAQoURGF0YVBsYXlBZ2FpblN1Y2Nl",
            "c3MSGgoIdGlja2V0SWQYASABKAlSCHRpY2tldElkEiYKDnRyb3BoeU1hdGNo",
            "aW5nGAIgASgFUg50cm9waHlNYXRjaGluZxIYCgdwbGF5ZXJzGAMgAygJUgdw",
            "bGF5ZXJzEjYKCmluR2FtZU1vZGUYBCABKA4yFi5jb3JlLnByb3RvLkluR2Ft",
            "ZU1vZGVSCmluR2FtZU1vZGUimQMKF01hdGNoRm91bmRSZXNwb25zZVByb3Rv",
            "EhgKB21hdGNoSWQYASABKAlSB21hdGNoSWQSOgoHcGxheWVycxgCIAMoCzIg",
            "LmNvcmUucHJvdG8uUGxheWVySW5mb01hdGNoUHJvdG9SB3BsYXllcnMSMAoI",
            "Z2FtZU1vZGUYAyABKA4yFC5jb3JlLnByb3RvLkdhbWVNb2RlUghnYW1lTW9k",
            "ZRI2CgppbkdhbWVNb2RlGAQgASgOMhYuY29yZS5wcm90by5JbkdhbWVNb2Rl",
            "UgppbkdhbWVNb2RlEh4KCmJlc3RSZWdpb24YBSABKAVSCmJlc3RSZWdpb24S",
            "MAoGbWFwSWRzGAYgAygLMhguY29yZS5wcm90by5NYXBEYXRhUHJvdG9SBm1h",
            "cElkcxI0ChVMaXN0TWF4UGxheWVyUGVyUm91bmQYByADKAVSFUxpc3RNYXhQ",
            "bGF5ZXJQZXJSb3VuZBI2CgpwbGF5ZXJTdGF0GAggASgLMhYuY29yZS5wcm90",
            "by5QbGF5ZXJTdGF0UgpwbGF5ZXJTdGF0Iq0CCgpQbGF5ZXJTdGF0EiQKDXJv",
            "dW5kU2NvcmVBbGwYASABKAVSDXJvdW5kU2NvcmVBbGwSIgoMcmFjZVNjb3Jl",
            "QWxsGAIgASgCUgxyYWNlU2NvcmVBbGwSKAoPcXVhbGlmeVNjb3JlQWxsGAMg",
            "ASgFUg9xdWFsaWZ5U2NvcmVBbGwSIAoLcGxheWVyU2NvcmUYBCABKAJSC3Bs",
            "YXllclNjb3JlEkkKC3JvdW5kUGxheWVkGAUgAygLMicuY29yZS5wcm90by5Q",
            "bGF5ZXJTdGF0LlJvdW5kUGxheWVkRW50cnlSC3JvdW5kUGxheWVkGj4KEFJv",
            "dW5kUGxheWVkRW50cnkSEAoDa2V5GAEgASgJUgNrZXkSFAoFdmFsdWUYAiAB",
            "KAVSBXZhbHVlOgI4ASJpCgxNYXBEYXRhUHJvdG8SFAoFbWFwSWQYASABKAVS",
            "BW1hcElkEkMKDW1hcERpZmZpY3VsdHkYAiABKA4yHS5jb3JlLnByb3RvLk1h",
            "cERpZmZpY3VsdHlFbnVtUg1tYXBEaWZmaWN1bHR5InoKF01hdGNoRGF0YUJh",
            "dHRsZUxvZ1Byb3RvEiAKC3RpbWVFbmRHYW1lGAEgASgFUgt0aW1lRW5kR2Ft",
            "ZRI9CgdwbGF5ZXJzGAIgAygLMiMuY29yZS5wcm90by5QbGF5ZXJJbmZvRW5k",
            "TWF0Y2hQcm90b1IHcGxheWVycyI4ChZNYXRjaFN0YXJ0UmVxdWVzdFByb3Rv",
            "Eh4KCmJlc3RSZWdpb24YASABKAVSCmJlc3RSZWdpb24ibwoUTWF0Y2hFbmRS",
            "ZXF1ZXN0UHJvdG8SGAoHbWF0Y2hJZBgBIAEoCVIHbWF0Y2hJZBI9CgdwbGF5",
            "ZXJzGAIgAygLMiMuY29yZS5wcm90by5QbGF5ZXJJbmZvRW5kTWF0Y2hQcm90",
            "b1IHcGxheWVycyLLAgoXUGxheWVySW5mb0VuZE1hdGNoUHJvdG8SGgoIcGxh",
            "eWVySWQYASABKAlSCHBsYXllcklkEhYKBnRlYW1JZBgCIAEoBVIGdGVhbUlk",
            "EiIKDGhhc1N1cGVyU3RhchgDIAEoCFIMaGFzU3VwZXJTdGFyEhQKBWlzQm90",
            "GAQgASgIUgVpc0JvdBIUCgVzY29yZRgFIAEoBVIFc2NvcmUSEgoEcmFuaxgG",
            "IAEoBVIEcmFuaxIgCgtjb2xsZWN0aW9ucxgHIAMoBVILY29sbGVjdGlvbnMS",
            "EgoEaGVybxgIIAEoBVIEaGVybxIWCgZza2lsbDEYCSABKAVSBnNraWxsMRIW",
            "CgZza2lsbDIYCiABKAVSBnNraWxsMhISCgRza2luGAsgASgFUgRza2luEh4K",
            "CnBsYXllck5hbWUYDCABKAlSCnBsYXllck5hbWUi3gIKFk1hdGNoRGF0YVJl",
            "c3BvbnNlUHJvdG8SGAoHbWF0Y2hJZBgBIAEoCVIHbWF0Y2hJZBJDCgliYXR0",
            "bGVMb2cYAiABKAsyIy5jb3JlLnByb3RvLk1hdGNoRGF0YUJhdHRsZUxvZ1By",
            "b3RvSABSCWJhdHRsZUxvZxJGCg1kYXRhUmVjb25uZWN0GAMgASgLMh4uY29y",
            "ZS5wcm90by5NYXRjaERhdGFSZWNvbm5lY3RIAFINZGF0YVJlY29ubmVjdBIm",
            "Cg1tYXRjaE5vdFN0YXJ0GAQgASgISABSDW1hdGNoTm90U3RhcnQSMAoIZ2Ft",
            "ZU1vZGUYBSABKA4yFC5jb3JlLnByb3RvLkdhbWVNb2RlUghnYW1lTW9kZRI2",
            "CgppbkdhbWVNb2RlGAYgASgOMhYuY29yZS5wcm90by5JbkdhbWVNb2RlUgpp",
            "bkdhbWVNb2RlQgsKCWRhdGFNYXRjaCJKChJNYXRjaERhdGFSZWNvbm5lY3QS",
            "HAoJdGltZVN0YXJ0GAEgASgFUgl0aW1lU3RhcnQSFgoGcmVnaW9uGAIgASgF",
            "UgZyZWdpb24ipAcKFFBsYXllckluZm9NYXRjaFByb3RvEhoKCHBsYXllcklk",
            "GAEgASgJUghwbGF5ZXJJZBIYCgdwYXJ0eUlkGAIgASgJUgdwYXJ0eUlkEh4K",
            "Cmhlcm9UeXBlSWQYAyABKAVSCmhlcm9UeXBlSWQSFgoGc2tpbGwxGAQgASgF",
            "UgZza2lsbDESFgoGc2tpbGwyGAUgASgFUgZza2lsbDISEgoEc2tpbhgGIAEo",
            "BVIEc2tpbhIaCgh0cm9waGllcxgHIAEoBVIIdHJvcGhpZXMSHAoJaGVyb0xl",
            "dmVsGAggASgFUgloZXJvTGV2ZWwSIAoLc2tpbGwxTGV2ZWwYCSABKAVSC3Nr",
            "aWxsMUxldmVsEiAKC3NraWxsMkxldmVsGAogASgFUgtza2lsbDJMZXZlbBIY",
            "CgdyZWdpb25zGAsgAygFUgdyZWdpb25zEh4KCnBsYXllck5hbWUYDCABKAlS",
            "CnBsYXllck5hbWUSGgoIYXZhdGFySWQYDSABKAVSCGF2YXRhcklkEhgKB2Zy",
            "YW1lSWQYDiABKAVSB2ZyYW1lSWQSGAoHZ3VpbGRJZBgPIAEoCVIHZ3VpbGRJ",
            "ZBIWCgZoZXJvSWQYECABKAlSBmhlcm9JZBImCg5pc1NwZWNpYWxFdmVudBgR",
            "IAEoCFIOaXNTcGVjaWFsRXZlbnQSJAoNYmVoYXZpb3JQb2ludBgSIAEoBVIN",
            "YmVoYXZpb3JQb2ludBImCg50cm9waHlNYXRjaGluZxgTIAEoBVIOdHJvcGh5",
            "TWF0Y2hpbmcSHAoJYnJhaW5UeXBlGBQgASgFUglicmFpblR5cGUSFgoGdGVh",
            "bUlEGBUgASgFUgZ0ZWFtSUQSIAoLYmF0dGxlQ291bnQYFiABKAVSC2JhdHRs",
            "ZUNvdW50EkgKDWNvc21ldGljVXNpbmcYFyABKAsyHi5jb3JlLnByb3RvLkNv",
            "c21ldGljVXNpbmdQcm90b0ICGAFSDWNvc21ldGljVXNpbmcSIAoLTmFtZUNv",
            "bG9ySWQYGCABKAVSC05hbWVDb2xvcklkEiAKC1BsYXllclNjb3JlGBkgASgB",
            "UgtQbGF5ZXJTY29yZRIWCgZNYXBJRHMYGiADKAVSBk1hcElEcxISCgRyYW5r",
            "GBsgASgFUgRyYW5rEkoKD2Nvc21ldGljVXNpbmdWMhgcIAEoCzIgLmNvcmUu",
            "cHJvdG8uQ29zbWV0aWNVc2luZ1Byb3RvVjJSD2Nvc21ldGljVXNpbmdWMiLG",
            "AQoSQ29zbWV0aWNVc2luZ1Byb3RvEhwKCWJhY2tCbGluZxgBIAEoBVIJYmFj",
            "a0JsaW5nEhQKBWRhbmNlGAIgASgFUgVkYW5jZRIaCghmbHlDcmFmdBgDIAEo",
            "BVIIZmx5Q3JhZnQSHAoJZm9vdHByaW50GAQgASgFUglmb290cHJpbnQSEgoE",
            "Z2xvdxgFIAEoBVIEZ2xvdxIUCgVzcHJheRgGIAEoBVIFc3ByYXkSFAoFdm9p",
            "Y2UYByABKAVSBXZvaWNlOgIYASJnChNEZWxldGVUaWNrZXRTdWNjZXNzEhoK",
            "CHBsYXllcklkGAEgASgJUghwbGF5ZXJJZBIaCgh0aWNrZXRJZBgCIAEoCVII",
            "dGlja2V0SWQSGAoHcGFydHlJZBgDIAEoCVIHcGFydHlJZCLPAQoRTWF0Y2hQ",
            "cm90b1BhY2thZ2USGgoIcGxheWVySWQYASABKAlSCHBsYXllcklkEhgKB3Bh",
            "cnR5SWQYBSABKAlSB3BhcnR5SWQSFAoEZGF0YRgCIAEoDEgAUgRkYXRhEkcK",
            "D2xpc3RFcnJvclBsYXllchgDIAEoCzIbLmNvcmUucHJvdG8uTGlzdEVycm9y",
            "UGxheWVySABSD2xpc3RFcnJvclBsYXllchIeCgllcnJvckNvZGUYBCABKAVI",
            "AFIJZXJyb3JDb2RlQgUKA3JlcyKfAQoPVGlja2V0RGF0YUNhY2hlEjYKCmlu",
            "R2FtZU1vZGUYASABKA4yFi5jb3JlLnByb3RvLkluR2FtZU1vZGVSCmluR2Ft",
            "ZU1vZGUSGgoIdHJvcGhpZXMYAiABKAVSCHRyb3BoaWVzEhwKCXBsYXllcklk",
            "cxgDIAMoCVIJcGxheWVySWRzEhoKCHRpY2tldElkGAQgASgJUgh0aWNrZXRJ",
            "ZCLJAQoPTGlzdEVycm9yUGxheWVyEksKDGVycm9yUGxheWVycxgBIAMoCzIn",
            "LmNvcmUucHJvdG8uTGlzdEVycm9yUGxheWVyLkVycm9yUGxheWVyUgxlcnJv",
            "clBsYXllcnMaaQoLRXJyb3JQbGF5ZXISFgoGdXNlcklkGAEgASgJUgZ1c2Vy",
            "SWQSQgoObWF0Y2hFcnJvckNvZGUYAiABKA4yGi5jb3JlLnByb3RvLk1hdGNo",
            "RXJyb3JDb2RlUg5tYXRjaEVycm9yQ29kZSKNAQoYTWF0Y2hQcm90b1ZlcnNp",
            "b25QYWNrYWdlEhoKCHBsYXllcklkGAEgASgJUghwbGF5ZXJJZBIUCgRkYXRh",
            "GAIgASgMSABSBGRhdGESHgoJZXJyb3JDb2RlGAMgASgFSABSCWVycm9yQ29k",
            "ZRIYCgd2ZXJzaW9uGAQgASgFUgd2ZXJzaW9uQgUKA3JlcyKEAQoSQ2FuY2Vs",
            "TWF0Y2hSZXF1ZXN0EhoKCHBsYXllcklkGAEgASgJUghwbGF5ZXJJZBIaCgh0",
            "aWNrZXRJZBgCIAEoCVIIdGlja2V0SWQSFgoGdHJvcGh5GAMgASgFUgZ0cm9w",
            "aHkSHgoKaW5HYW1lTW9kZRgEIAEoBVIKaW5HYW1lTW9kZSLCAgoOTWF0Y2hF",
            "eHRlbnNpb24SIAoLbWluVHJvcGhpZXMYASABKAVSC21pblRyb3BoaWVzEiAK",
            "C21heFRyb3BoaWVzGAIgASgFUgttYXhUcm9waGllcxIeCgptaW5QbGF5ZXJz",
            "GAMgASgFUgptaW5QbGF5ZXJzEh4KCm1heFBsYXllcnMYBCABKAVSCm1heFBs",
            "YXllcnMSGAoHbWF4VGVhbRgFIAEoBVIHbWF4VGVhbRIiCgxjb3VudFBsYXll",
            "cnMYBiABKAVSDGNvdW50UGxheWVycxIWCgZudW1Cb3QYByABKAVSBm51bUJv",
            "dBIkCg1wbGF5ZXJQZXJUZWFtGAggASgFUg1wbGF5ZXJQZXJUZWFtEjAKE21h",
            "dGNoRm91bmRUaW1lc3RhbXAYCSABKANSE21hdGNoRm91bmRUaW1lc3RhbXAi",
            "LQoNRW1wdHlSZXNwb25zZRIcCgllcnJvckNvZGUYASABKAVSCWVycm9yQ29k",
            "ZSJiCgxCb3RzUmVzcG9uc2USHAoJZXJyb3JDb2RlGAEgASgFUgllcnJvckNv",
            "ZGUSNAoEYm90cxgCIAMoCzIgLmNvcmUucHJvdG8uUGxheWVySW5mb01hdGNo",
            "UHJvdG9SBGJvdHMirgEKDkdldEJvdHNSZXF1ZXN0EhYKBmdhbWVJZBgBIAEo",
            "BVIGZ2FtZUlkEhoKCGlzTmV3YmllGAIgASgIUghpc05ld2JpZRIYCgdudW1i",
            "ZXJzGAMgASgFUgdudW1iZXJzEh4KCnRyb3BoeVJhbmsYBCABKAVSCnRyb3Bo",
            "eVJhbmsSFgoGcmVnaW9uGAUgASgFUgZyZWdpb24SFgoGYmF0dGxlGAYgASgF",
            "UgZiYXR0bGUitwEKFENvc21ldGljVXNpbmdQcm90b1YyElwKDmNvc21ldGlj",
            "SW5Vc2VkGAEgAygLMjQuY29yZS5wcm90by5Db3NtZXRpY1VzaW5nUHJvdG9W",
            "Mi5Db3NtZXRpY0luVXNlZEVudHJ5Ug5jb3NtZXRpY0luVXNlZBpBChNDb3Nt",
            "ZXRpY0luVXNlZEVudHJ5EhAKA2tleRgBIAEoCVIDa2V5EhQKBXZhbHVlGAIg",
            "ASgDUgV2YWx1ZToCOAEixQEKGUNyZWF0ZU1hdGNoT25ib2FyZFJlcXVlc3QS",
            "FgoGdXNlcklEGAEgASgJUgZ1c2VySUQSOAoJbGFzdFJvdW5kGAIgASgLMhUu",
            "Y29yZS5wcm90by5Sb3VuZFN0YXRIAFIJbGFzdFJvdW5kiAEBEigKD29wZXJh",
            "dGlvblN5c3RlbRgDIAEoCVIPb3BlcmF0aW9uU3lzdGVtEh4KCmFwcFZlcnNp",
            "b24YBCABKAlSCmFwcFZlcnNpb25CDAoKX2xhc3RSb3VuZCK3AgoJUm91bmRT",
            "dGF0EhgKB3JvdW5kSWQYASABKAVSB3JvdW5kSWQSFAoFbWFwSWQYAiABKAVS",
            "BW1hcElkEiQKDW1hcERpZmZpY3VsdHkYAyABKAVSDW1hcERpZmZpY3VsdHkS",
            "IAoLdGltZUluUm91bmQYBCABKAJSC3RpbWVJblJvdW5kEiQKDXJvdW5kQ29t",
            "cGxldGUYBSABKAhSDXJvdW5kQ29tcGxldGUSLAoRY29udHJvbERvdWJsZUp1",
            "bXAYBiABKAVSEWNvbnRyb2xEb3VibGVKdW1wEiwKEWNvbnRyb2xNb3ZlQ2Ft",
            "ZXJhGAcgASgFUhFjb250cm9sTW92ZUNhbWVyYRIaCghwYXNzZWRDUBgIIAEo",
            "BVIIcGFzc2VkQ1ASFAoFbWF4Q1AYCSABKAVSBW1heENQKpcFCg5NYXRjaEVy",
            "cm9yQ29kZRINCglNX1NVQ0NFU1MQABILCgdNX0VSUk9SEGMSIwofQ0FOTk9U",
            "X0NBTkNFTF9XSEVOX05PVF9NQVRDSElORxABEhQKEEFMUkVBRFlfTUFUQ0hJ",
            "TkcQAhIlCiFDQU5OT1RfQ0FOQ0VMX0JFQ0FVU0VfTUFUQ0hfRk9VTkQQAxIR",
            "Cg1NQVRDSF9JTlZBTElEEAQSGQoVTUFUQ0hfQUxSRUFEWV9TVEFSVEVEEAUS",
            "FQoRTUFUQ0hfQUxSRUFEWV9FTkQQBxIXChNGSU5EX01BVENIX1RJTUVfT1VU",
            "EAgSGgoWRklORF9NQVRDSF9QQVJUWV9FUlJPUhAJEh0KGVJFQUxfQ0FOQ0VM",
            "X01BVENIX1NVQ0NFU1MQZBIhCh1VU0VSX0hBVkVfQkVFTl9CQU5ORURfRk9S",
            "RVZFUhB5EiMKH1VTRVJfSEFWRV9CRUVOX0JBTk5FRF9GSU5ETUFUQ0gQehIb",
            "ChdIRVJPX0lTX09OX01BUktFVF9QTEFDRRB7EisKJ09ORV9PRl9USEVfUExB",
            "WUVSU19ESURfTk9UX1NFTlRfUkVRVUVTVBB8EjEKLUFDQ09VTlRfSVNfQ1VS",
            "UkVOVExZX09OTElORV9PTl9BTk9USEVSX0RFVklDRRB9EhMKDkhFUk9fTk9U",
            "X09XTkVSEMIXEhcKEkhFUk9fTk9UX0FWQUlMQUJMRRDDFxIVChBXUk9OR19I",
            "RVJPX01PREVMEM4XEhUKEEhFUk9fUkVOVEVEX0lURU0QsBgSFQoQSEVST19J",
            "U19GT1JfUkVOVBC0GBIbChZIRVJPX01BWF9CQVRUTEVfUkVOVEVEELUYEhkK",
            "FEhFUk9fUkVUVVJOSU5HX09XTkVSELcYKj0KEU1hcERpZmZpY3VsdHlFbnVt",
            "EggKBE5vbmUQABIICgRFYXN5EAESCgoGTWVkaXVtEAISCAoESGFyZBADMp4C",
            "CgxNYXRjaFNlcnZpY2USYQoWQ3JlYXRlTWF0Y2hXaXRoVmVyc2lvbhIkLmNv",
            "cmUucHJvdG8uTWF0Y2hQcm90b1ZlcnNpb25QYWNrYWdlGh0uY29yZS5wcm90",
            "by5NYXRjaFByb3RvUGFja2FnZSIAMAESVgoSUmVnaXN0ZXJNYXRjaEZvdW5k",
            "Eh0uY29yZS5wcm90by5NYXRjaFByb3RvUGFja2FnZRodLmNvcmUucHJvdG8u",
            "TWF0Y2hQcm90b1BhY2thZ2UiADABElMKEUNhbmNlbE1hdGNoTWFraW5nEh0u",
            "Y29yZS5wcm90by5NYXRjaFByb3RvUGFja2FnZRodLmNvcmUucHJvdG8uTWF0",
            "Y2hQcm90b1BhY2thZ2UiADK6AQoSTWF0Y2hIYW5kbGVTZXJ2aWNlElAKD0hh",
            "bmRsZVBsYXlBZ2FpbhIgLmNvcmUucHJvdG8uRGF0YVBsYXlBZ2FpblN1Y2Nl",
            "c3MaGS5jb3JlLnByb3RvLkVtcHR5UmVzcG9uc2UiABJSChJIYW5kbGVEZWxl",
            "dGVUaWNrZXQSHy5jb3JlLnByb3RvLkRlbGV0ZVRpY2tldFN1Y2Nlc3MaGS5j",
            "b3JlLnByb3RvLkVtcHR5UmVzcG9uc2UiADKJAgoUTWF0Y2hEaXJlY3RvclNl",
            "cnZpY2USSgoMQ2FuY2VsVGlja2V0Eh0uY29yZS5wcm90by5NYXRjaFByb3Rv",
            "UGFja2FnZRoZLmNvcmUucHJvdG8uRW1wdHlSZXNwb25zZSIAEkEKB0dldEJv",
            "dHMSGi5jb3JlLnByb3RvLkdldEJvdHNSZXF1ZXN0GhguY29yZS5wcm90by5C",
            "b3RzUmVzcG9uc2UiABJiChJDcmVhdGVNYXRjaE9uYm9hcmQSJS5jb3JlLnBy",
            "b3RvLkNyZWF0ZU1hdGNoT25ib2FyZFJlcXVlc3QaIy5jb3JlLnByb3RvLk1h",
            "dGNoRm91bmRSZXNwb25zZVByb3RvIgBCkQEKDmNvbS5jb3JlLnByb3RvQgpN",
            "YXRjaFByb3RvSAFQAVooZ2l0aHViLmNvbS9Xb2xmZnVuU2VydmljZS90aGV0",
            "YW4tYnVmL2dlbqICA0NQWKoCCkNvcmUuUHJvdG/KAgpDb3JlXFByb3Rv4gIW",
            "Q29yZVxQcm90b1xHUEJNZXRhZGF0YeoCC0NvcmU6OlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Core.Proto.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Core.Proto.MatchErrorCode), typeof(global::Core.Proto.MapDifficultyEnum), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.TicketData), global::Core.Proto.TicketData.Parser, new[]{ "PlayerId", "GameMode", "InGameMode", "EventId", "Players", "Regions", "PartyId", "TicketId", "CreateTime", "Group" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.MatchMakingRequestProto), global::Core.Proto.MatchMakingRequestProto.Parser, new[]{ "PlayerId", "PartyId", "GameMode", "InGameMode", "Trophies", "Regions", "Players", "IsPlayAgain" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.MatchMakingDataPlayAgain), global::Core.Proto.MatchMakingDataPlayAgain.Parser, new[]{ "Players" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.DataPlayAgainSuccess), global::Core.Proto.DataPlayAgainSuccess.Parser, new[]{ "TicketId", "TrophyMatching", "Players", "InGameMode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.MatchFoundResponseProto), global::Core.Proto.MatchFoundResponseProto.Parser, new[]{ "MatchId", "Players", "GameMode", "InGameMode", "BestRegion", "MapIds", "ListMaxPlayerPerRound", "PlayerStat" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.PlayerStat), global::Core.Proto.PlayerStat.Parser, new[]{ "RoundScoreAll", "RaceScoreAll", "QualifyScoreAll", "PlayerScore", "RoundPlayed" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.MapDataProto), global::Core.Proto.MapDataProto.Parser, new[]{ "MapId", "MapDifficulty" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.MatchDataBattleLogProto), global::Core.Proto.MatchDataBattleLogProto.Parser, new[]{ "TimeEndGame", "Players" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.MatchStartRequestProto), global::Core.Proto.MatchStartRequestProto.Parser, new[]{ "BestRegion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.MatchEndRequestProto), global::Core.Proto.MatchEndRequestProto.Parser, new[]{ "MatchId", "Players" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.PlayerInfoEndMatchProto), global::Core.Proto.PlayerInfoEndMatchProto.Parser, new[]{ "PlayerId", "TeamId", "HasSuperStar", "IsBot", "Score", "Rank", "Collections", "Hero", "Skill1", "Skill2", "Skin", "PlayerName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.MatchDataResponseProto), global::Core.Proto.MatchDataResponseProto.Parser, new[]{ "MatchId", "BattleLog", "DataReconnect", "MatchNotStart", "GameMode", "InGameMode" }, new[]{ "DataMatch" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.MatchDataReconnect), global::Core.Proto.MatchDataReconnect.Parser, new[]{ "TimeStart", "Region" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.PlayerInfoMatchProto), global::Core.Proto.PlayerInfoMatchProto.Parser, new[]{ "PlayerId", "PartyId", "HeroTypeId", "Skill1", "Skill2", "Skin", "Trophies", "HeroLevel", "Skill1Level", "Skill2Level", "Regions", "PlayerName", "AvatarId", "FrameId", "GuildId", "HeroId", "IsSpecialEvent", "BehaviorPoint", "TrophyMatching", "BrainType", "TeamID", "BattleCount", "CosmeticUsing", "NameColorId", "PlayerScore", "MapIDs", "Rank", "CosmeticUsingV2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.CosmeticUsingProto), global::Core.Proto.CosmeticUsingProto.Parser, new[]{ "BackBling", "Dance", "FlyCraft", "Footprint", "Glow", "Spray", "Voice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.DeleteTicketSuccess), global::Core.Proto.DeleteTicketSuccess.Parser, new[]{ "PlayerId", "TicketId", "PartyId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.MatchProtoPackage), global::Core.Proto.MatchProtoPackage.Parser, new[]{ "PlayerId", "PartyId", "Data", "ListErrorPlayer", "ErrorCode" }, new[]{ "Res" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.TicketDataCache), global::Core.Proto.TicketDataCache.Parser, new[]{ "InGameMode", "Trophies", "PlayerIds", "TicketId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.ListErrorPlayer), global::Core.Proto.ListErrorPlayer.Parser, new[]{ "ErrorPlayers" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.ListErrorPlayer.Types.ErrorPlayer), global::Core.Proto.ListErrorPlayer.Types.ErrorPlayer.Parser, new[]{ "UserId", "MatchErrorCode" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.MatchProtoVersionPackage), global::Core.Proto.MatchProtoVersionPackage.Parser, new[]{ "PlayerId", "Data", "ErrorCode", "Version" }, new[]{ "Res" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.CancelMatchRequest), global::Core.Proto.CancelMatchRequest.Parser, new[]{ "PlayerId", "TicketId", "Trophy", "InGameMode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.MatchExtension), global::Core.Proto.MatchExtension.Parser, new[]{ "MinTrophies", "MaxTrophies", "MinPlayers", "MaxPlayers", "MaxTeam", "CountPlayers", "NumBot", "PlayerPerTeam", "MatchFoundTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.EmptyResponse), global::Core.Proto.EmptyResponse.Parser, new[]{ "ErrorCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.BotsResponse), global::Core.Proto.BotsResponse.Parser, new[]{ "ErrorCode", "Bots" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.GetBotsRequest), global::Core.Proto.GetBotsRequest.Parser, new[]{ "GameId", "IsNewbie", "Numbers", "TrophyRank", "Region", "Battle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.CosmeticUsingProtoV2), global::Core.Proto.CosmeticUsingProtoV2.Parser, new[]{ "CosmeticInUsed" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.CreateMatchOnboardRequest), global::Core.Proto.CreateMatchOnboardRequest.Parser, new[]{ "UserID", "LastRound", "OperationSystem", "AppVersion" }, new[]{ "LastRound" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Core.Proto.RoundStat), global::Core.Proto.RoundStat.Parser, new[]{ "RoundId", "MapId", "MapDifficulty", "TimeInRound", "RoundComplete", "ControlDoubleJump", "ControlMoveCamera", "PassedCP", "MaxCP" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MatchErrorCode {
    [pbr::OriginalName("M_SUCCESS")] MSuccess = 0,
    [pbr::OriginalName("M_ERROR")] MError = 99,
    [pbr::OriginalName("CANNOT_CANCEL_WHEN_NOT_MATCHING")] CannotCancelWhenNotMatching = 1,
    [pbr::OriginalName("ALREADY_MATCHING")] AlreadyMatching = 2,
    [pbr::OriginalName("CANNOT_CANCEL_BECAUSE_MATCH_FOUND")] CannotCancelBecauseMatchFound = 3,
    /// <summary>
    ///match khong ton tai
    /// </summary>
    [pbr::OriginalName("MATCH_INVALID")] MatchInvalid = 4,
    [pbr::OriginalName("MATCH_ALREADY_STARTED")] MatchAlreadyStarted = 5,
    [pbr::OriginalName("MATCH_ALREADY_END")] MatchAlreadyEnd = 7,
    [pbr::OriginalName("FIND_MATCH_TIME_OUT")] FindMatchTimeOut = 8,
    [pbr::OriginalName("FIND_MATCH_PARTY_ERROR")] FindMatchPartyError = 9,
    [pbr::OriginalName("REAL_CANCEL_MATCH_SUCCESS")] RealCancelMatchSuccess = 100,
    [pbr::OriginalName("USER_HAVE_BEEN_BANNED_FOREVER")] UserHaveBeenBannedForever = 121,
    [pbr::OriginalName("USER_HAVE_BEEN_BANNED_FINDMATCH")] UserHaveBeenBannedFindmatch = 122,
    [pbr::OriginalName("HERO_IS_ON_MARKET_PLACE")] HeroIsOnMarketPlace = 123,
    [pbr::OriginalName("ONE_OF_THE_PLAYERS_DID_NOT_SENT_REQUEST")] OneOfThePlayersDidNotSentRequest = 124,
    [pbr::OriginalName("ACCOUNT_IS_CURRENTLY_ONLINE_ON_ANOTHER_DEVICE")] AccountIsCurrentlyOnlineOnAnotherDevice = 125,
    [pbr::OriginalName("HERO_NOT_OWNER")] HeroNotOwner = 3010,
    [pbr::OriginalName("HERO_NOT_AVAILABLE")] HeroNotAvailable = 3011,
    [pbr::OriginalName("WRONG_HERO_MODEL")] WrongHeroModel = 3022,
    [pbr::OriginalName("HERO_RENTED_ITEM")] HeroRentedItem = 3120,
    [pbr::OriginalName("HERO_IS_FOR_RENT")] HeroIsForRent = 3124,
    [pbr::OriginalName("HERO_MAX_BATTLE_RENTED")] HeroMaxBattleRented = 3125,
    [pbr::OriginalName("HERO_RETURNING_OWNER")] HeroReturningOwner = 3127,
  }

  public enum MapDifficultyEnum {
    [pbr::OriginalName("None")] None = 0,
    [pbr::OriginalName("Easy")] Easy = 1,
    [pbr::OriginalName("Medium")] Medium = 2,
    [pbr::OriginalName("Hard")] Hard = 3,
  }

  #endregion

  #region Messages
  public sealed partial class TicketData : pb::IMessage<TicketData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TicketData> _parser = new pb::MessageParser<TicketData>(() => new TicketData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TicketData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketData(TicketData other) : this() {
      playerId_ = other.playerId_;
      gameMode_ = other.gameMode_;
      inGameMode_ = other.inGameMode_;
      eventId_ = other.eventId_;
      players_ = other.players_.Clone();
      regions_ = other.regions_.Clone();
      partyId_ = other.partyId_;
      ticketId_ = other.ticketId_;
      createTime_ = other.createTime_;
      group_ = other.group_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketData Clone() {
      return new TicketData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameMode" field.</summary>
    public const int GameModeFieldNumber = 2;
    private global::Core.Proto.GameMode gameMode_ = global::Core.Proto.GameMode.Ranked;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.GameMode GameMode {
      get { return gameMode_; }
      set {
        gameMode_ = value;
      }
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 3;
    private global::Core.Proto.InGameMode inGameMode_ = global::Core.Proto.InGameMode.TeamCollectStar;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.InGameMode InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    /// <summary>Field number for the "eventId" field.</summary>
    public const int EventIdFieldNumber = 4;
    private string eventId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Core.Proto.PlayerInfoMatchProto> _repeated_players_codec
        = pb::FieldCodec.ForMessage(42, global::Core.Proto.PlayerInfoMatchProto.Parser);
    private readonly pbc::RepeatedField<global::Core.Proto.PlayerInfoMatchProto> players_ = new pbc::RepeatedField<global::Core.Proto.PlayerInfoMatchProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Core.Proto.PlayerInfoMatchProto> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "regions" field.</summary>
    public const int RegionsFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_regions_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> regions_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Regions {
      get { return regions_; }
    }

    /// <summary>Field number for the "partyId" field.</summary>
    public const int PartyIdFieldNumber = 7;
    private string partyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PartyId {
      get { return partyId_; }
      set {
        partyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ticketId" field.</summary>
    public const int TicketIdFieldNumber = 8;
    private string ticketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TicketId {
      get { return ticketId_; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 9;
    private long createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 10;
    private int group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TicketData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TicketData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (GameMode != other.GameMode) return false;
      if (InGameMode != other.InGameMode) return false;
      if (EventId != other.EventId) return false;
      if(!players_.Equals(other.players_)) return false;
      if(!regions_.Equals(other.regions_)) return false;
      if (PartyId != other.PartyId) return false;
      if (TicketId != other.TicketId) return false;
      if (CreateTime != other.CreateTime) return false;
      if (Group != other.Group) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (GameMode != global::Core.Proto.GameMode.Ranked) hash ^= GameMode.GetHashCode();
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) hash ^= InGameMode.GetHashCode();
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      hash ^= players_.GetHashCode();
      hash ^= regions_.GetHashCode();
      if (PartyId.Length != 0) hash ^= PartyId.GetHashCode();
      if (TicketId.Length != 0) hash ^= TicketId.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (Group != 0) hash ^= Group.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (GameMode != global::Core.Proto.GameMode.Ranked) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        output.WriteRawTag(24);
        output.WriteEnum((int) InGameMode);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EventId);
      }
      players_.WriteTo(output, _repeated_players_codec);
      regions_.WriteTo(output, _repeated_regions_codec);
      if (PartyId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PartyId);
      }
      if (TicketId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TicketId);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(CreateTime);
      }
      if (Group != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Group);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (GameMode != global::Core.Proto.GameMode.Ranked) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        output.WriteRawTag(24);
        output.WriteEnum((int) InGameMode);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EventId);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      regions_.WriteTo(ref output, _repeated_regions_codec);
      if (PartyId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PartyId);
      }
      if (TicketId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TicketId);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(CreateTime);
      }
      if (Group != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Group);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (GameMode != global::Core.Proto.GameMode.Ranked) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InGameMode);
      }
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      size += regions_.CalculateSize(_repeated_regions_codec);
      if (PartyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartyId);
      }
      if (TicketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      if (Group != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Group);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TicketData other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.GameMode != global::Core.Proto.GameMode.Ranked) {
        GameMode = other.GameMode;
      }
      if (other.InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        InGameMode = other.InGameMode;
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      players_.Add(other.players_);
      regions_.Add(other.regions_);
      if (other.PartyId.Length != 0) {
        PartyId = other.PartyId;
      }
      if (other.TicketId.Length != 0) {
        TicketId = other.TicketId;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.Group != 0) {
        Group = other.Group;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 16: {
            GameMode = (global::Core.Proto.GameMode) input.ReadEnum();
            break;
          }
          case 24: {
            InGameMode = (global::Core.Proto.InGameMode) input.ReadEnum();
            break;
          }
          case 34: {
            EventId = input.ReadString();
            break;
          }
          case 42: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 50:
          case 48: {
            regions_.AddEntriesFrom(input, _repeated_regions_codec);
            break;
          }
          case 58: {
            PartyId = input.ReadString();
            break;
          }
          case 66: {
            TicketId = input.ReadString();
            break;
          }
          case 72: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 80: {
            Group = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 16: {
            GameMode = (global::Core.Proto.GameMode) input.ReadEnum();
            break;
          }
          case 24: {
            InGameMode = (global::Core.Proto.InGameMode) input.ReadEnum();
            break;
          }
          case 34: {
            EventId = input.ReadString();
            break;
          }
          case 42: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 50:
          case 48: {
            regions_.AddEntriesFrom(ref input, _repeated_regions_codec);
            break;
          }
          case 58: {
            PartyId = input.ReadString();
            break;
          }
          case 66: {
            TicketId = input.ReadString();
            break;
          }
          case 72: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 80: {
            Group = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchMakingRequestProto : pb::IMessage<MatchMakingRequestProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchMakingRequestProto> _parser = new pb::MessageParser<MatchMakingRequestProto>(() => new MatchMakingRequestProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchMakingRequestProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchMakingRequestProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchMakingRequestProto(MatchMakingRequestProto other) : this() {
      playerId_ = other.playerId_;
      partyId_ = other.partyId_;
      gameMode_ = other.gameMode_;
      inGameMode_ = other.inGameMode_;
      trophies_ = other.trophies_;
      regions_ = other.regions_.Clone();
      players_ = other.players_.Clone();
      isPlayAgain_ = other.isPlayAgain_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchMakingRequestProto Clone() {
      return new MatchMakingRequestProto(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 4;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partyId" field.</summary>
    public const int PartyIdFieldNumber = 5;
    private string partyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PartyId {
      get { return partyId_; }
      set {
        partyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameMode" field.</summary>
    public const int GameModeFieldNumber = 1;
    private global::Core.Proto.GameMode gameMode_ = global::Core.Proto.GameMode.Ranked;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.GameMode GameMode {
      get { return gameMode_; }
      set {
        gameMode_ = value;
      }
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 2;
    private global::Core.Proto.InGameMode inGameMode_ = global::Core.Proto.InGameMode.TeamCollectStar;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.InGameMode InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    /// <summary>Field number for the "trophies" field.</summary>
    public const int TrophiesFieldNumber = 3;
    private int trophies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Trophies {
      get { return trophies_; }
      set {
        trophies_ = value;
      }
    }

    /// <summary>Field number for the "regions" field.</summary>
    public const int RegionsFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_regions_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> regions_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Regions {
      get { return regions_; }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Core.Proto.PlayerInfoMatchProto> _repeated_players_codec
        = pb::FieldCodec.ForMessage(58, global::Core.Proto.PlayerInfoMatchProto.Parser);
    private readonly pbc::RepeatedField<global::Core.Proto.PlayerInfoMatchProto> players_ = new pbc::RepeatedField<global::Core.Proto.PlayerInfoMatchProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Core.Proto.PlayerInfoMatchProto> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "isPlayAgain" field.</summary>
    public const int IsPlayAgainFieldNumber = 8;
    private bool isPlayAgain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPlayAgain {
      get { return isPlayAgain_; }
      set {
        isPlayAgain_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchMakingRequestProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchMakingRequestProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PartyId != other.PartyId) return false;
      if (GameMode != other.GameMode) return false;
      if (InGameMode != other.InGameMode) return false;
      if (Trophies != other.Trophies) return false;
      if(!regions_.Equals(other.regions_)) return false;
      if(!players_.Equals(other.players_)) return false;
      if (IsPlayAgain != other.IsPlayAgain) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (PartyId.Length != 0) hash ^= PartyId.GetHashCode();
      if (GameMode != global::Core.Proto.GameMode.Ranked) hash ^= GameMode.GetHashCode();
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) hash ^= InGameMode.GetHashCode();
      if (Trophies != 0) hash ^= Trophies.GetHashCode();
      hash ^= regions_.GetHashCode();
      hash ^= players_.GetHashCode();
      if (IsPlayAgain != false) hash ^= IsPlayAgain.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameMode != global::Core.Proto.GameMode.Ranked) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        output.WriteRawTag(16);
        output.WriteEnum((int) InGameMode);
      }
      if (Trophies != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Trophies);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerId);
      }
      if (PartyId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PartyId);
      }
      regions_.WriteTo(output, _repeated_regions_codec);
      players_.WriteTo(output, _repeated_players_codec);
      if (IsPlayAgain != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsPlayAgain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameMode != global::Core.Proto.GameMode.Ranked) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        output.WriteRawTag(16);
        output.WriteEnum((int) InGameMode);
      }
      if (Trophies != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Trophies);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerId);
      }
      if (PartyId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PartyId);
      }
      regions_.WriteTo(ref output, _repeated_regions_codec);
      players_.WriteTo(ref output, _repeated_players_codec);
      if (IsPlayAgain != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsPlayAgain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (PartyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartyId);
      }
      if (GameMode != global::Core.Proto.GameMode.Ranked) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InGameMode);
      }
      if (Trophies != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Trophies);
      }
      size += regions_.CalculateSize(_repeated_regions_codec);
      size += players_.CalculateSize(_repeated_players_codec);
      if (IsPlayAgain != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchMakingRequestProto other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PartyId.Length != 0) {
        PartyId = other.PartyId;
      }
      if (other.GameMode != global::Core.Proto.GameMode.Ranked) {
        GameMode = other.GameMode;
      }
      if (other.InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        InGameMode = other.InGameMode;
      }
      if (other.Trophies != 0) {
        Trophies = other.Trophies;
      }
      regions_.Add(other.regions_);
      players_.Add(other.players_);
      if (other.IsPlayAgain != false) {
        IsPlayAgain = other.IsPlayAgain;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameMode = (global::Core.Proto.GameMode) input.ReadEnum();
            break;
          }
          case 16: {
            InGameMode = (global::Core.Proto.InGameMode) input.ReadEnum();
            break;
          }
          case 24: {
            Trophies = input.ReadInt32();
            break;
          }
          case 34: {
            PlayerId = input.ReadString();
            break;
          }
          case 42: {
            PartyId = input.ReadString();
            break;
          }
          case 50:
          case 48: {
            regions_.AddEntriesFrom(input, _repeated_regions_codec);
            break;
          }
          case 58: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 64: {
            IsPlayAgain = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameMode = (global::Core.Proto.GameMode) input.ReadEnum();
            break;
          }
          case 16: {
            InGameMode = (global::Core.Proto.InGameMode) input.ReadEnum();
            break;
          }
          case 24: {
            Trophies = input.ReadInt32();
            break;
          }
          case 34: {
            PlayerId = input.ReadString();
            break;
          }
          case 42: {
            PartyId = input.ReadString();
            break;
          }
          case 50:
          case 48: {
            regions_.AddEntriesFrom(ref input, _repeated_regions_codec);
            break;
          }
          case 58: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 64: {
            IsPlayAgain = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchMakingDataPlayAgain : pb::IMessage<MatchMakingDataPlayAgain>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchMakingDataPlayAgain> _parser = new pb::MessageParser<MatchMakingDataPlayAgain>(() => new MatchMakingDataPlayAgain());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchMakingDataPlayAgain> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchMakingDataPlayAgain() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchMakingDataPlayAgain(MatchMakingDataPlayAgain other) : this() {
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchMakingDataPlayAgain Clone() {
      return new MatchMakingDataPlayAgain(this);
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Core.Proto.PlayerInfoMatchProto> _repeated_players_codec
        = pb::FieldCodec.ForMessage(10, global::Core.Proto.PlayerInfoMatchProto.Parser);
    private readonly pbc::RepeatedField<global::Core.Proto.PlayerInfoMatchProto> players_ = new pbc::RepeatedField<global::Core.Proto.PlayerInfoMatchProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Core.Proto.PlayerInfoMatchProto> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchMakingDataPlayAgain);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchMakingDataPlayAgain other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      players_.WriteTo(ref output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchMakingDataPlayAgain other) {
      if (other == null) {
        return;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///khi play again xong thi gui data cho cac thang con lai biet
  /// </summary>
  public sealed partial class DataPlayAgainSuccess : pb::IMessage<DataPlayAgainSuccess>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataPlayAgainSuccess> _parser = new pb::MessageParser<DataPlayAgainSuccess>(() => new DataPlayAgainSuccess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DataPlayAgainSuccess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataPlayAgainSuccess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataPlayAgainSuccess(DataPlayAgainSuccess other) : this() {
      ticketId_ = other.ticketId_;
      trophyMatching_ = other.trophyMatching_;
      players_ = other.players_.Clone();
      inGameMode_ = other.inGameMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataPlayAgainSuccess Clone() {
      return new DataPlayAgainSuccess(this);
    }

    /// <summary>Field number for the "ticketId" field.</summary>
    public const int TicketIdFieldNumber = 1;
    private string ticketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TicketId {
      get { return ticketId_; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trophyMatching" field.</summary>
    public const int TrophyMatchingFieldNumber = 2;
    private int trophyMatching_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrophyMatching {
      get { return trophyMatching_; }
      set {
        trophyMatching_ = value;
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_players_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> players_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 4;
    private global::Core.Proto.InGameMode inGameMode_ = global::Core.Proto.InGameMode.TeamCollectStar;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.InGameMode InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DataPlayAgainSuccess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DataPlayAgainSuccess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TicketId != other.TicketId) return false;
      if (TrophyMatching != other.TrophyMatching) return false;
      if(!players_.Equals(other.players_)) return false;
      if (InGameMode != other.InGameMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TicketId.Length != 0) hash ^= TicketId.GetHashCode();
      if (TrophyMatching != 0) hash ^= TrophyMatching.GetHashCode();
      hash ^= players_.GetHashCode();
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) hash ^= InGameMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TicketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TicketId);
      }
      if (TrophyMatching != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TrophyMatching);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        output.WriteRawTag(32);
        output.WriteEnum((int) InGameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TicketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TicketId);
      }
      if (TrophyMatching != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TrophyMatching);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        output.WriteRawTag(32);
        output.WriteEnum((int) InGameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TicketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (TrophyMatching != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrophyMatching);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InGameMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DataPlayAgainSuccess other) {
      if (other == null) {
        return;
      }
      if (other.TicketId.Length != 0) {
        TicketId = other.TicketId;
      }
      if (other.TrophyMatching != 0) {
        TrophyMatching = other.TrophyMatching;
      }
      players_.Add(other.players_);
      if (other.InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        InGameMode = other.InGameMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TicketId = input.ReadString();
            break;
          }
          case 16: {
            TrophyMatching = input.ReadInt32();
            break;
          }
          case 26: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 32: {
            InGameMode = (global::Core.Proto.InGameMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TicketId = input.ReadString();
            break;
          }
          case 16: {
            TrophyMatching = input.ReadInt32();
            break;
          }
          case 26: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 32: {
            InGameMode = (global::Core.Proto.InGameMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchFoundResponseProto : pb::IMessage<MatchFoundResponseProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchFoundResponseProto> _parser = new pb::MessageParser<MatchFoundResponseProto>(() => new MatchFoundResponseProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchFoundResponseProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchFoundResponseProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchFoundResponseProto(MatchFoundResponseProto other) : this() {
      matchId_ = other.matchId_;
      players_ = other.players_.Clone();
      gameMode_ = other.gameMode_;
      inGameMode_ = other.inGameMode_;
      bestRegion_ = other.bestRegion_;
      mapIds_ = other.mapIds_.Clone();
      listMaxPlayerPerRound_ = other.listMaxPlayerPerRound_.Clone();
      playerStat_ = other.playerStat_ != null ? other.playerStat_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchFoundResponseProto Clone() {
      return new MatchFoundResponseProto(this);
    }

    /// <summary>Field number for the "matchId" field.</summary>
    public const int MatchIdFieldNumber = 1;
    private string matchId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MatchId {
      get { return matchId_; }
      set {
        matchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Core.Proto.PlayerInfoMatchProto> _repeated_players_codec
        = pb::FieldCodec.ForMessage(18, global::Core.Proto.PlayerInfoMatchProto.Parser);
    private readonly pbc::RepeatedField<global::Core.Proto.PlayerInfoMatchProto> players_ = new pbc::RepeatedField<global::Core.Proto.PlayerInfoMatchProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Core.Proto.PlayerInfoMatchProto> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "gameMode" field.</summary>
    public const int GameModeFieldNumber = 3;
    private global::Core.Proto.GameMode gameMode_ = global::Core.Proto.GameMode.Ranked;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.GameMode GameMode {
      get { return gameMode_; }
      set {
        gameMode_ = value;
      }
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 4;
    private global::Core.Proto.InGameMode inGameMode_ = global::Core.Proto.InGameMode.TeamCollectStar;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.InGameMode InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    /// <summary>Field number for the "bestRegion" field.</summary>
    public const int BestRegionFieldNumber = 5;
    private int bestRegion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BestRegion {
      get { return bestRegion_; }
      set {
        bestRegion_ = value;
      }
    }

    /// <summary>Field number for the "mapIds" field.</summary>
    public const int MapIdsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Core.Proto.MapDataProto> _repeated_mapIds_codec
        = pb::FieldCodec.ForMessage(50, global::Core.Proto.MapDataProto.Parser);
    private readonly pbc::RepeatedField<global::Core.Proto.MapDataProto> mapIds_ = new pbc::RepeatedField<global::Core.Proto.MapDataProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Core.Proto.MapDataProto> MapIds {
      get { return mapIds_; }
    }

    /// <summary>Field number for the "ListMaxPlayerPerRound" field.</summary>
    public const int ListMaxPlayerPerRoundFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_listMaxPlayerPerRound_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> listMaxPlayerPerRound_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ListMaxPlayerPerRound {
      get { return listMaxPlayerPerRound_; }
    }

    /// <summary>Field number for the "playerStat" field.</summary>
    public const int PlayerStatFieldNumber = 8;
    private global::Core.Proto.PlayerStat playerStat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.PlayerStat PlayerStat {
      get { return playerStat_; }
      set {
        playerStat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchFoundResponseProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchFoundResponseProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchId != other.MatchId) return false;
      if(!players_.Equals(other.players_)) return false;
      if (GameMode != other.GameMode) return false;
      if (InGameMode != other.InGameMode) return false;
      if (BestRegion != other.BestRegion) return false;
      if(!mapIds_.Equals(other.mapIds_)) return false;
      if(!listMaxPlayerPerRound_.Equals(other.listMaxPlayerPerRound_)) return false;
      if (!object.Equals(PlayerStat, other.PlayerStat)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchId.Length != 0) hash ^= MatchId.GetHashCode();
      hash ^= players_.GetHashCode();
      if (GameMode != global::Core.Proto.GameMode.Ranked) hash ^= GameMode.GetHashCode();
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) hash ^= InGameMode.GetHashCode();
      if (BestRegion != 0) hash ^= BestRegion.GetHashCode();
      hash ^= mapIds_.GetHashCode();
      hash ^= listMaxPlayerPerRound_.GetHashCode();
      if (playerStat_ != null) hash ^= PlayerStat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (GameMode != global::Core.Proto.GameMode.Ranked) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        output.WriteRawTag(32);
        output.WriteEnum((int) InGameMode);
      }
      if (BestRegion != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BestRegion);
      }
      mapIds_.WriteTo(output, _repeated_mapIds_codec);
      listMaxPlayerPerRound_.WriteTo(output, _repeated_listMaxPlayerPerRound_codec);
      if (playerStat_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PlayerStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      if (GameMode != global::Core.Proto.GameMode.Ranked) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        output.WriteRawTag(32);
        output.WriteEnum((int) InGameMode);
      }
      if (BestRegion != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BestRegion);
      }
      mapIds_.WriteTo(ref output, _repeated_mapIds_codec);
      listMaxPlayerPerRound_.WriteTo(ref output, _repeated_listMaxPlayerPerRound_codec);
      if (playerStat_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PlayerStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MatchId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchId);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (GameMode != global::Core.Proto.GameMode.Ranked) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InGameMode);
      }
      if (BestRegion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BestRegion);
      }
      size += mapIds_.CalculateSize(_repeated_mapIds_codec);
      size += listMaxPlayerPerRound_.CalculateSize(_repeated_listMaxPlayerPerRound_codec);
      if (playerStat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerStat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchFoundResponseProto other) {
      if (other == null) {
        return;
      }
      if (other.MatchId.Length != 0) {
        MatchId = other.MatchId;
      }
      players_.Add(other.players_);
      if (other.GameMode != global::Core.Proto.GameMode.Ranked) {
        GameMode = other.GameMode;
      }
      if (other.InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        InGameMode = other.InGameMode;
      }
      if (other.BestRegion != 0) {
        BestRegion = other.BestRegion;
      }
      mapIds_.Add(other.mapIds_);
      listMaxPlayerPerRound_.Add(other.listMaxPlayerPerRound_);
      if (other.playerStat_ != null) {
        if (playerStat_ == null) {
          PlayerStat = new global::Core.Proto.PlayerStat();
        }
        PlayerStat.MergeFrom(other.PlayerStat);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 24: {
            GameMode = (global::Core.Proto.GameMode) input.ReadEnum();
            break;
          }
          case 32: {
            InGameMode = (global::Core.Proto.InGameMode) input.ReadEnum();
            break;
          }
          case 40: {
            BestRegion = input.ReadInt32();
            break;
          }
          case 50: {
            mapIds_.AddEntriesFrom(input, _repeated_mapIds_codec);
            break;
          }
          case 58:
          case 56: {
            listMaxPlayerPerRound_.AddEntriesFrom(input, _repeated_listMaxPlayerPerRound_codec);
            break;
          }
          case 66: {
            if (playerStat_ == null) {
              PlayerStat = new global::Core.Proto.PlayerStat();
            }
            input.ReadMessage(PlayerStat);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 24: {
            GameMode = (global::Core.Proto.GameMode) input.ReadEnum();
            break;
          }
          case 32: {
            InGameMode = (global::Core.Proto.InGameMode) input.ReadEnum();
            break;
          }
          case 40: {
            BestRegion = input.ReadInt32();
            break;
          }
          case 50: {
            mapIds_.AddEntriesFrom(ref input, _repeated_mapIds_codec);
            break;
          }
          case 58:
          case 56: {
            listMaxPlayerPerRound_.AddEntriesFrom(ref input, _repeated_listMaxPlayerPerRound_codec);
            break;
          }
          case 66: {
            if (playerStat_ == null) {
              PlayerStat = new global::Core.Proto.PlayerStat();
            }
            input.ReadMessage(PlayerStat);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerStat : pb::IMessage<PlayerStat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerStat> _parser = new pb::MessageParser<PlayerStat>(() => new PlayerStat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerStat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerStat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerStat(PlayerStat other) : this() {
      roundScoreAll_ = other.roundScoreAll_;
      raceScoreAll_ = other.raceScoreAll_;
      qualifyScoreAll_ = other.qualifyScoreAll_;
      playerScore_ = other.playerScore_;
      roundPlayed_ = other.roundPlayed_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerStat Clone() {
      return new PlayerStat(this);
    }

    /// <summary>Field number for the "roundScoreAll" field.</summary>
    public const int RoundScoreAllFieldNumber = 1;
    private int roundScoreAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoundScoreAll {
      get { return roundScoreAll_; }
      set {
        roundScoreAll_ = value;
      }
    }

    /// <summary>Field number for the "raceScoreAll" field.</summary>
    public const int RaceScoreAllFieldNumber = 2;
    private float raceScoreAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RaceScoreAll {
      get { return raceScoreAll_; }
      set {
        raceScoreAll_ = value;
      }
    }

    /// <summary>Field number for the "qualifyScoreAll" field.</summary>
    public const int QualifyScoreAllFieldNumber = 3;
    private int qualifyScoreAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int QualifyScoreAll {
      get { return qualifyScoreAll_; }
      set {
        qualifyScoreAll_ = value;
      }
    }

    /// <summary>Field number for the "playerScore" field.</summary>
    public const int PlayerScoreFieldNumber = 4;
    private float playerScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PlayerScore {
      get { return playerScore_; }
      set {
        playerScore_ = value;
      }
    }

    /// <summary>Field number for the "roundPlayed" field.</summary>
    public const int RoundPlayedFieldNumber = 5;
    private static readonly pbc::MapField<string, int>.Codec _map_roundPlayed_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 42);
    private readonly pbc::MapField<string, int> roundPlayed_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, int> RoundPlayed {
      get { return roundPlayed_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerStat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerStat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoundScoreAll != other.RoundScoreAll) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RaceScoreAll, other.RaceScoreAll)) return false;
      if (QualifyScoreAll != other.QualifyScoreAll) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PlayerScore, other.PlayerScore)) return false;
      if (!RoundPlayed.Equals(other.RoundPlayed)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoundScoreAll != 0) hash ^= RoundScoreAll.GetHashCode();
      if (RaceScoreAll != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RaceScoreAll);
      if (QualifyScoreAll != 0) hash ^= QualifyScoreAll.GetHashCode();
      if (PlayerScore != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PlayerScore);
      hash ^= RoundPlayed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoundScoreAll != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoundScoreAll);
      }
      if (RaceScoreAll != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(RaceScoreAll);
      }
      if (QualifyScoreAll != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(QualifyScoreAll);
      }
      if (PlayerScore != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PlayerScore);
      }
      roundPlayed_.WriteTo(output, _map_roundPlayed_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoundScoreAll != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoundScoreAll);
      }
      if (RaceScoreAll != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(RaceScoreAll);
      }
      if (QualifyScoreAll != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(QualifyScoreAll);
      }
      if (PlayerScore != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PlayerScore);
      }
      roundPlayed_.WriteTo(ref output, _map_roundPlayed_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoundScoreAll != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoundScoreAll);
      }
      if (RaceScoreAll != 0F) {
        size += 1 + 4;
      }
      if (QualifyScoreAll != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QualifyScoreAll);
      }
      if (PlayerScore != 0F) {
        size += 1 + 4;
      }
      size += roundPlayed_.CalculateSize(_map_roundPlayed_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerStat other) {
      if (other == null) {
        return;
      }
      if (other.RoundScoreAll != 0) {
        RoundScoreAll = other.RoundScoreAll;
      }
      if (other.RaceScoreAll != 0F) {
        RaceScoreAll = other.RaceScoreAll;
      }
      if (other.QualifyScoreAll != 0) {
        QualifyScoreAll = other.QualifyScoreAll;
      }
      if (other.PlayerScore != 0F) {
        PlayerScore = other.PlayerScore;
      }
      roundPlayed_.Add(other.roundPlayed_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoundScoreAll = input.ReadInt32();
            break;
          }
          case 21: {
            RaceScoreAll = input.ReadFloat();
            break;
          }
          case 24: {
            QualifyScoreAll = input.ReadInt32();
            break;
          }
          case 37: {
            PlayerScore = input.ReadFloat();
            break;
          }
          case 42: {
            roundPlayed_.AddEntriesFrom(input, _map_roundPlayed_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoundScoreAll = input.ReadInt32();
            break;
          }
          case 21: {
            RaceScoreAll = input.ReadFloat();
            break;
          }
          case 24: {
            QualifyScoreAll = input.ReadInt32();
            break;
          }
          case 37: {
            PlayerScore = input.ReadFloat();
            break;
          }
          case 42: {
            roundPlayed_.AddEntriesFrom(ref input, _map_roundPlayed_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MapDataProto : pb::IMessage<MapDataProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapDataProto> _parser = new pb::MessageParser<MapDataProto>(() => new MapDataProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MapDataProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapDataProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapDataProto(MapDataProto other) : this() {
      mapId_ = other.mapId_;
      mapDifficulty_ = other.mapDifficulty_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapDataProto Clone() {
      return new MapDataProto(this);
    }

    /// <summary>Field number for the "mapId" field.</summary>
    public const int MapIdFieldNumber = 1;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "mapDifficulty" field.</summary>
    public const int MapDifficultyFieldNumber = 2;
    private global::Core.Proto.MapDifficultyEnum mapDifficulty_ = global::Core.Proto.MapDifficultyEnum.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.MapDifficultyEnum MapDifficulty {
      get { return mapDifficulty_; }
      set {
        mapDifficulty_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MapDataProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MapDataProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (MapDifficulty != other.MapDifficulty) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (MapDifficulty != global::Core.Proto.MapDifficultyEnum.None) hash ^= MapDifficulty.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapId);
      }
      if (MapDifficulty != global::Core.Proto.MapDifficultyEnum.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MapDifficulty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapId);
      }
      if (MapDifficulty != global::Core.Proto.MapDifficultyEnum.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MapDifficulty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (MapDifficulty != global::Core.Proto.MapDifficultyEnum.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MapDifficulty);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MapDataProto other) {
      if (other == null) {
        return;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.MapDifficulty != global::Core.Proto.MapDifficultyEnum.None) {
        MapDifficulty = other.MapDifficulty;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapId = input.ReadInt32();
            break;
          }
          case 16: {
            MapDifficulty = (global::Core.Proto.MapDifficultyEnum) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapId = input.ReadInt32();
            break;
          }
          case 16: {
            MapDifficulty = (global::Core.Proto.MapDifficultyEnum) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchDataBattleLogProto : pb::IMessage<MatchDataBattleLogProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchDataBattleLogProto> _parser = new pb::MessageParser<MatchDataBattleLogProto>(() => new MatchDataBattleLogProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchDataBattleLogProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataBattleLogProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataBattleLogProto(MatchDataBattleLogProto other) : this() {
      timeEndGame_ = other.timeEndGame_;
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataBattleLogProto Clone() {
      return new MatchDataBattleLogProto(this);
    }

    /// <summary>Field number for the "timeEndGame" field.</summary>
    public const int TimeEndGameFieldNumber = 1;
    private int timeEndGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TimeEndGame {
      get { return timeEndGame_; }
      set {
        timeEndGame_ = value;
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Core.Proto.PlayerInfoEndMatchProto> _repeated_players_codec
        = pb::FieldCodec.ForMessage(18, global::Core.Proto.PlayerInfoEndMatchProto.Parser);
    private readonly pbc::RepeatedField<global::Core.Proto.PlayerInfoEndMatchProto> players_ = new pbc::RepeatedField<global::Core.Proto.PlayerInfoEndMatchProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Core.Proto.PlayerInfoEndMatchProto> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchDataBattleLogProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchDataBattleLogProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeEndGame != other.TimeEndGame) return false;
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeEndGame != 0) hash ^= TimeEndGame.GetHashCode();
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TimeEndGame != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TimeEndGame);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TimeEndGame != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TimeEndGame);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TimeEndGame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeEndGame);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchDataBattleLogProto other) {
      if (other == null) {
        return;
      }
      if (other.TimeEndGame != 0) {
        TimeEndGame = other.TimeEndGame;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimeEndGame = input.ReadInt32();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TimeEndGame = input.ReadInt32();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchStartRequestProto : pb::IMessage<MatchStartRequestProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchStartRequestProto> _parser = new pb::MessageParser<MatchStartRequestProto>(() => new MatchStartRequestProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchStartRequestProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchStartRequestProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchStartRequestProto(MatchStartRequestProto other) : this() {
      bestRegion_ = other.bestRegion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchStartRequestProto Clone() {
      return new MatchStartRequestProto(this);
    }

    /// <summary>Field number for the "bestRegion" field.</summary>
    public const int BestRegionFieldNumber = 1;
    private int bestRegion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BestRegion {
      get { return bestRegion_; }
      set {
        bestRegion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchStartRequestProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchStartRequestProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BestRegion != other.BestRegion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BestRegion != 0) hash ^= BestRegion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BestRegion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BestRegion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BestRegion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BestRegion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BestRegion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BestRegion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchStartRequestProto other) {
      if (other == null) {
        return;
      }
      if (other.BestRegion != 0) {
        BestRegion = other.BestRegion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BestRegion = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BestRegion = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchEndRequestProto : pb::IMessage<MatchEndRequestProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchEndRequestProto> _parser = new pb::MessageParser<MatchEndRequestProto>(() => new MatchEndRequestProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchEndRequestProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchEndRequestProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchEndRequestProto(MatchEndRequestProto other) : this() {
      matchId_ = other.matchId_;
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchEndRequestProto Clone() {
      return new MatchEndRequestProto(this);
    }

    /// <summary>Field number for the "matchId" field.</summary>
    public const int MatchIdFieldNumber = 1;
    private string matchId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MatchId {
      get { return matchId_; }
      set {
        matchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Core.Proto.PlayerInfoEndMatchProto> _repeated_players_codec
        = pb::FieldCodec.ForMessage(18, global::Core.Proto.PlayerInfoEndMatchProto.Parser);
    private readonly pbc::RepeatedField<global::Core.Proto.PlayerInfoEndMatchProto> players_ = new pbc::RepeatedField<global::Core.Proto.PlayerInfoEndMatchProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Core.Proto.PlayerInfoEndMatchProto> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchEndRequestProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchEndRequestProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchId != other.MatchId) return false;
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchId.Length != 0) hash ^= MatchId.GetHashCode();
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MatchId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchId);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchEndRequestProto other) {
      if (other == null) {
        return;
      }
      if (other.MatchId.Length != 0) {
        MatchId = other.MatchId;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerInfoEndMatchProto : pb::IMessage<PlayerInfoEndMatchProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerInfoEndMatchProto> _parser = new pb::MessageParser<PlayerInfoEndMatchProto>(() => new PlayerInfoEndMatchProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerInfoEndMatchProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInfoEndMatchProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInfoEndMatchProto(PlayerInfoEndMatchProto other) : this() {
      playerId_ = other.playerId_;
      teamId_ = other.teamId_;
      hasSuperStar_ = other.hasSuperStar_;
      isBot_ = other.isBot_;
      score_ = other.score_;
      rank_ = other.rank_;
      collections_ = other.collections_.Clone();
      hero_ = other.hero_;
      skill1_ = other.skill1_;
      skill2_ = other.skill2_;
      skin_ = other.skin_;
      playerName_ = other.playerName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInfoEndMatchProto Clone() {
      return new PlayerInfoEndMatchProto(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "teamId" field.</summary>
    public const int TeamIdFieldNumber = 2;
    private int teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TeamId {
      get { return teamId_; }
      set {
        teamId_ = value;
      }
    }

    /// <summary>Field number for the "hasSuperStar" field.</summary>
    public const int HasSuperStarFieldNumber = 3;
    private bool hasSuperStar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperStar {
      get { return hasSuperStar_; }
      set {
        hasSuperStar_ = value;
      }
    }

    /// <summary>Field number for the "isBot" field.</summary>
    public const int IsBotFieldNumber = 4;
    private bool isBot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBot {
      get { return isBot_; }
      set {
        isBot_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 5;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 6;
    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "collections" field.</summary>
    public const int CollectionsFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_collections_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> collections_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///MVP - team MVP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Collections {
      get { return collections_; }
    }

    /// <summary>Field number for the "hero" field.</summary>
    public const int HeroFieldNumber = 8;
    private int hero_;
    /// <summary>
    ///for battle log
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Hero {
      get { return hero_; }
      set {
        hero_ = value;
      }
    }

    /// <summary>Field number for the "skill1" field.</summary>
    public const int Skill1FieldNumber = 9;
    private int skill1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skill1 {
      get { return skill1_; }
      set {
        skill1_ = value;
      }
    }

    /// <summary>Field number for the "skill2" field.</summary>
    public const int Skill2FieldNumber = 10;
    private int skill2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skill2 {
      get { return skill2_; }
      set {
        skill2_ = value;
      }
    }

    /// <summary>Field number for the "skin" field.</summary>
    public const int SkinFieldNumber = 11;
    private int skin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skin {
      get { return skin_; }
      set {
        skin_ = value;
      }
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 12;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfoEndMatchProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerInfoEndMatchProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (TeamId != other.TeamId) return false;
      if (HasSuperStar != other.HasSuperStar) return false;
      if (IsBot != other.IsBot) return false;
      if (Score != other.Score) return false;
      if (Rank != other.Rank) return false;
      if(!collections_.Equals(other.collections_)) return false;
      if (Hero != other.Hero) return false;
      if (Skill1 != other.Skill1) return false;
      if (Skill2 != other.Skill2) return false;
      if (Skin != other.Skin) return false;
      if (PlayerName != other.PlayerName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (TeamId != 0) hash ^= TeamId.GetHashCode();
      if (HasSuperStar != false) hash ^= HasSuperStar.GetHashCode();
      if (IsBot != false) hash ^= IsBot.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (Rank != 0) hash ^= Rank.GetHashCode();
      hash ^= collections_.GetHashCode();
      if (Hero != 0) hash ^= Hero.GetHashCode();
      if (Skill1 != 0) hash ^= Skill1.GetHashCode();
      if (Skill2 != 0) hash ^= Skill2.GetHashCode();
      if (Skin != 0) hash ^= Skin.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (TeamId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TeamId);
      }
      if (HasSuperStar != false) {
        output.WriteRawTag(24);
        output.WriteBool(HasSuperStar);
      }
      if (IsBot != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsBot);
      }
      if (Score != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Score);
      }
      if (Rank != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Rank);
      }
      collections_.WriteTo(output, _repeated_collections_codec);
      if (Hero != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Hero);
      }
      if (Skill1 != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Skill1);
      }
      if (Skill2 != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Skill2);
      }
      if (Skin != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Skin);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PlayerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (TeamId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TeamId);
      }
      if (HasSuperStar != false) {
        output.WriteRawTag(24);
        output.WriteBool(HasSuperStar);
      }
      if (IsBot != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsBot);
      }
      if (Score != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Score);
      }
      if (Rank != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Rank);
      }
      collections_.WriteTo(ref output, _repeated_collections_codec);
      if (Hero != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Hero);
      }
      if (Skill1 != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Skill1);
      }
      if (Skill2 != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Skill2);
      }
      if (Skin != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Skin);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PlayerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (TeamId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamId);
      }
      if (HasSuperStar != false) {
        size += 1 + 1;
      }
      if (IsBot != false) {
        size += 1 + 1;
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (Rank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      size += collections_.CalculateSize(_repeated_collections_codec);
      if (Hero != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hero);
      }
      if (Skill1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skill1);
      }
      if (Skill2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skill2);
      }
      if (Skin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skin);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerInfoEndMatchProto other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.TeamId != 0) {
        TeamId = other.TeamId;
      }
      if (other.HasSuperStar != false) {
        HasSuperStar = other.HasSuperStar;
      }
      if (other.IsBot != false) {
        IsBot = other.IsBot;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      collections_.Add(other.collections_);
      if (other.Hero != 0) {
        Hero = other.Hero;
      }
      if (other.Skill1 != 0) {
        Skill1 = other.Skill1;
      }
      if (other.Skill2 != 0) {
        Skill2 = other.Skill2;
      }
      if (other.Skin != 0) {
        Skin = other.Skin;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 16: {
            TeamId = input.ReadInt32();
            break;
          }
          case 24: {
            HasSuperStar = input.ReadBool();
            break;
          }
          case 32: {
            IsBot = input.ReadBool();
            break;
          }
          case 40: {
            Score = input.ReadInt32();
            break;
          }
          case 48: {
            Rank = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            collections_.AddEntriesFrom(input, _repeated_collections_codec);
            break;
          }
          case 64: {
            Hero = input.ReadInt32();
            break;
          }
          case 72: {
            Skill1 = input.ReadInt32();
            break;
          }
          case 80: {
            Skill2 = input.ReadInt32();
            break;
          }
          case 88: {
            Skin = input.ReadInt32();
            break;
          }
          case 98: {
            PlayerName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 16: {
            TeamId = input.ReadInt32();
            break;
          }
          case 24: {
            HasSuperStar = input.ReadBool();
            break;
          }
          case 32: {
            IsBot = input.ReadBool();
            break;
          }
          case 40: {
            Score = input.ReadInt32();
            break;
          }
          case 48: {
            Rank = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            collections_.AddEntriesFrom(ref input, _repeated_collections_codec);
            break;
          }
          case 64: {
            Hero = input.ReadInt32();
            break;
          }
          case 72: {
            Skill1 = input.ReadInt32();
            break;
          }
          case 80: {
            Skill2 = input.ReadInt32();
            break;
          }
          case 88: {
            Skin = input.ReadInt32();
            break;
          }
          case 98: {
            PlayerName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchDataResponseProto : pb::IMessage<MatchDataResponseProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchDataResponseProto> _parser = new pb::MessageParser<MatchDataResponseProto>(() => new MatchDataResponseProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchDataResponseProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataResponseProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataResponseProto(MatchDataResponseProto other) : this() {
      matchId_ = other.matchId_;
      gameMode_ = other.gameMode_;
      inGameMode_ = other.inGameMode_;
      switch (other.DataMatchCase) {
        case DataMatchOneofCase.BattleLog:
          BattleLog = other.BattleLog.Clone();
          break;
        case DataMatchOneofCase.DataReconnect:
          DataReconnect = other.DataReconnect.Clone();
          break;
        case DataMatchOneofCase.MatchNotStart:
          MatchNotStart = other.MatchNotStart;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataResponseProto Clone() {
      return new MatchDataResponseProto(this);
    }

    /// <summary>Field number for the "matchId" field.</summary>
    public const int MatchIdFieldNumber = 1;
    private string matchId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MatchId {
      get { return matchId_; }
      set {
        matchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "battleLog" field.</summary>
    public const int BattleLogFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.MatchDataBattleLogProto BattleLog {
      get { return dataMatchCase_ == DataMatchOneofCase.BattleLog ? (global::Core.Proto.MatchDataBattleLogProto) dataMatch_ : null; }
      set {
        dataMatch_ = value;
        dataMatchCase_ = value == null ? DataMatchOneofCase.None : DataMatchOneofCase.BattleLog;
      }
    }

    /// <summary>Field number for the "dataReconnect" field.</summary>
    public const int DataReconnectFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.MatchDataReconnect DataReconnect {
      get { return dataMatchCase_ == DataMatchOneofCase.DataReconnect ? (global::Core.Proto.MatchDataReconnect) dataMatch_ : null; }
      set {
        dataMatch_ = value;
        dataMatchCase_ = value == null ? DataMatchOneofCase.None : DataMatchOneofCase.DataReconnect;
      }
    }

    /// <summary>Field number for the "matchNotStart" field.</summary>
    public const int MatchNotStartFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MatchNotStart {
      get { return dataMatchCase_ == DataMatchOneofCase.MatchNotStart ? (bool) dataMatch_ : false; }
      set {
        dataMatch_ = value;
        dataMatchCase_ = DataMatchOneofCase.MatchNotStart;
      }
    }

    /// <summary>Field number for the "gameMode" field.</summary>
    public const int GameModeFieldNumber = 5;
    private global::Core.Proto.GameMode gameMode_ = global::Core.Proto.GameMode.Ranked;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.GameMode GameMode {
      get { return gameMode_; }
      set {
        gameMode_ = value;
      }
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 6;
    private global::Core.Proto.InGameMode inGameMode_ = global::Core.Proto.InGameMode.TeamCollectStar;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.InGameMode InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    private object dataMatch_;
    /// <summary>Enum of possible cases for the "dataMatch" oneof.</summary>
    public enum DataMatchOneofCase {
      None = 0,
      BattleLog = 2,
      DataReconnect = 3,
      MatchNotStart = 4,
    }
    private DataMatchOneofCase dataMatchCase_ = DataMatchOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataMatchOneofCase DataMatchCase {
      get { return dataMatchCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDataMatch() {
      dataMatchCase_ = DataMatchOneofCase.None;
      dataMatch_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchDataResponseProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchDataResponseProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchId != other.MatchId) return false;
      if (!object.Equals(BattleLog, other.BattleLog)) return false;
      if (!object.Equals(DataReconnect, other.DataReconnect)) return false;
      if (MatchNotStart != other.MatchNotStart) return false;
      if (GameMode != other.GameMode) return false;
      if (InGameMode != other.InGameMode) return false;
      if (DataMatchCase != other.DataMatchCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchId.Length != 0) hash ^= MatchId.GetHashCode();
      if (dataMatchCase_ == DataMatchOneofCase.BattleLog) hash ^= BattleLog.GetHashCode();
      if (dataMatchCase_ == DataMatchOneofCase.DataReconnect) hash ^= DataReconnect.GetHashCode();
      if (dataMatchCase_ == DataMatchOneofCase.MatchNotStart) hash ^= MatchNotStart.GetHashCode();
      if (GameMode != global::Core.Proto.GameMode.Ranked) hash ^= GameMode.GetHashCode();
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) hash ^= InGameMode.GetHashCode();
      hash ^= (int) dataMatchCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      if (dataMatchCase_ == DataMatchOneofCase.BattleLog) {
        output.WriteRawTag(18);
        output.WriteMessage(BattleLog);
      }
      if (dataMatchCase_ == DataMatchOneofCase.DataReconnect) {
        output.WriteRawTag(26);
        output.WriteMessage(DataReconnect);
      }
      if (dataMatchCase_ == DataMatchOneofCase.MatchNotStart) {
        output.WriteRawTag(32);
        output.WriteBool(MatchNotStart);
      }
      if (GameMode != global::Core.Proto.GameMode.Ranked) {
        output.WriteRawTag(40);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        output.WriteRawTag(48);
        output.WriteEnum((int) InGameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchId);
      }
      if (dataMatchCase_ == DataMatchOneofCase.BattleLog) {
        output.WriteRawTag(18);
        output.WriteMessage(BattleLog);
      }
      if (dataMatchCase_ == DataMatchOneofCase.DataReconnect) {
        output.WriteRawTag(26);
        output.WriteMessage(DataReconnect);
      }
      if (dataMatchCase_ == DataMatchOneofCase.MatchNotStart) {
        output.WriteRawTag(32);
        output.WriteBool(MatchNotStart);
      }
      if (GameMode != global::Core.Proto.GameMode.Ranked) {
        output.WriteRawTag(40);
        output.WriteEnum((int) GameMode);
      }
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        output.WriteRawTag(48);
        output.WriteEnum((int) InGameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MatchId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchId);
      }
      if (dataMatchCase_ == DataMatchOneofCase.BattleLog) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BattleLog);
      }
      if (dataMatchCase_ == DataMatchOneofCase.DataReconnect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataReconnect);
      }
      if (dataMatchCase_ == DataMatchOneofCase.MatchNotStart) {
        size += 1 + 1;
      }
      if (GameMode != global::Core.Proto.GameMode.Ranked) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InGameMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchDataResponseProto other) {
      if (other == null) {
        return;
      }
      if (other.MatchId.Length != 0) {
        MatchId = other.MatchId;
      }
      if (other.GameMode != global::Core.Proto.GameMode.Ranked) {
        GameMode = other.GameMode;
      }
      if (other.InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        InGameMode = other.InGameMode;
      }
      switch (other.DataMatchCase) {
        case DataMatchOneofCase.BattleLog:
          if (BattleLog == null) {
            BattleLog = new global::Core.Proto.MatchDataBattleLogProto();
          }
          BattleLog.MergeFrom(other.BattleLog);
          break;
        case DataMatchOneofCase.DataReconnect:
          if (DataReconnect == null) {
            DataReconnect = new global::Core.Proto.MatchDataReconnect();
          }
          DataReconnect.MergeFrom(other.DataReconnect);
          break;
        case DataMatchOneofCase.MatchNotStart:
          MatchNotStart = other.MatchNotStart;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 18: {
            global::Core.Proto.MatchDataBattleLogProto subBuilder = new global::Core.Proto.MatchDataBattleLogProto();
            if (dataMatchCase_ == DataMatchOneofCase.BattleLog) {
              subBuilder.MergeFrom(BattleLog);
            }
            input.ReadMessage(subBuilder);
            BattleLog = subBuilder;
            break;
          }
          case 26: {
            global::Core.Proto.MatchDataReconnect subBuilder = new global::Core.Proto.MatchDataReconnect();
            if (dataMatchCase_ == DataMatchOneofCase.DataReconnect) {
              subBuilder.MergeFrom(DataReconnect);
            }
            input.ReadMessage(subBuilder);
            DataReconnect = subBuilder;
            break;
          }
          case 32: {
            MatchNotStart = input.ReadBool();
            break;
          }
          case 40: {
            GameMode = (global::Core.Proto.GameMode) input.ReadEnum();
            break;
          }
          case 48: {
            InGameMode = (global::Core.Proto.InGameMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MatchId = input.ReadString();
            break;
          }
          case 18: {
            global::Core.Proto.MatchDataBattleLogProto subBuilder = new global::Core.Proto.MatchDataBattleLogProto();
            if (dataMatchCase_ == DataMatchOneofCase.BattleLog) {
              subBuilder.MergeFrom(BattleLog);
            }
            input.ReadMessage(subBuilder);
            BattleLog = subBuilder;
            break;
          }
          case 26: {
            global::Core.Proto.MatchDataReconnect subBuilder = new global::Core.Proto.MatchDataReconnect();
            if (dataMatchCase_ == DataMatchOneofCase.DataReconnect) {
              subBuilder.MergeFrom(DataReconnect);
            }
            input.ReadMessage(subBuilder);
            DataReconnect = subBuilder;
            break;
          }
          case 32: {
            MatchNotStart = input.ReadBool();
            break;
          }
          case 40: {
            GameMode = (global::Core.Proto.GameMode) input.ReadEnum();
            break;
          }
          case 48: {
            InGameMode = (global::Core.Proto.InGameMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchDataReconnect : pb::IMessage<MatchDataReconnect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchDataReconnect> _parser = new pb::MessageParser<MatchDataReconnect>(() => new MatchDataReconnect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchDataReconnect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataReconnect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataReconnect(MatchDataReconnect other) : this() {
      timeStart_ = other.timeStart_;
      region_ = other.region_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchDataReconnect Clone() {
      return new MatchDataReconnect(this);
    }

    /// <summary>Field number for the "timeStart" field.</summary>
    public const int TimeStartFieldNumber = 1;
    private int timeStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TimeStart {
      get { return timeStart_; }
      set {
        timeStart_ = value;
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 2;
    private int region_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Region {
      get { return region_; }
      set {
        region_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchDataReconnect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchDataReconnect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeStart != other.TimeStart) return false;
      if (Region != other.Region) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeStart != 0) hash ^= TimeStart.GetHashCode();
      if (Region != 0) hash ^= Region.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TimeStart != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TimeStart);
      }
      if (Region != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TimeStart != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TimeStart);
      }
      if (Region != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TimeStart != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeStart);
      }
      if (Region != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Region);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchDataReconnect other) {
      if (other == null) {
        return;
      }
      if (other.TimeStart != 0) {
        TimeStart = other.TimeStart;
      }
      if (other.Region != 0) {
        Region = other.Region;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimeStart = input.ReadInt32();
            break;
          }
          case 16: {
            Region = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TimeStart = input.ReadInt32();
            break;
          }
          case 16: {
            Region = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerInfoMatchProto : pb::IMessage<PlayerInfoMatchProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerInfoMatchProto> _parser = new pb::MessageParser<PlayerInfoMatchProto>(() => new PlayerInfoMatchProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerInfoMatchProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInfoMatchProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInfoMatchProto(PlayerInfoMatchProto other) : this() {
      playerId_ = other.playerId_;
      partyId_ = other.partyId_;
      heroTypeId_ = other.heroTypeId_;
      skill1_ = other.skill1_;
      skill2_ = other.skill2_;
      skin_ = other.skin_;
      trophies_ = other.trophies_;
      heroLevel_ = other.heroLevel_;
      skill1Level_ = other.skill1Level_;
      skill2Level_ = other.skill2Level_;
      regions_ = other.regions_.Clone();
      playerName_ = other.playerName_;
      avatarId_ = other.avatarId_;
      frameId_ = other.frameId_;
      guildId_ = other.guildId_;
      heroId_ = other.heroId_;
      isSpecialEvent_ = other.isSpecialEvent_;
      behaviorPoint_ = other.behaviorPoint_;
      trophyMatching_ = other.trophyMatching_;
      brainType_ = other.brainType_;
      teamID_ = other.teamID_;
      battleCount_ = other.battleCount_;
      cosmeticUsing_ = other.cosmeticUsing_ != null ? other.cosmeticUsing_.Clone() : null;
      nameColorId_ = other.nameColorId_;
      playerScore_ = other.playerScore_;
      mapIDs_ = other.mapIDs_.Clone();
      rank_ = other.rank_;
      cosmeticUsingV2_ = other.cosmeticUsingV2_ != null ? other.cosmeticUsingV2_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInfoMatchProto Clone() {
      return new PlayerInfoMatchProto(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    /// <summary>
    /// heroId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partyId" field.</summary>
    public const int PartyIdFieldNumber = 2;
    private string partyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PartyId {
      get { return partyId_; }
      set {
        partyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "heroTypeId" field.</summary>
    public const int HeroTypeIdFieldNumber = 3;
    private int heroTypeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HeroTypeId {
      get { return heroTypeId_; }
      set {
        heroTypeId_ = value;
      }
    }

    /// <summary>Field number for the "skill1" field.</summary>
    public const int Skill1FieldNumber = 4;
    private int skill1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skill1 {
      get { return skill1_; }
      set {
        skill1_ = value;
      }
    }

    /// <summary>Field number for the "skill2" field.</summary>
    public const int Skill2FieldNumber = 5;
    private int skill2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skill2 {
      get { return skill2_; }
      set {
        skill2_ = value;
      }
    }

    /// <summary>Field number for the "skin" field.</summary>
    public const int SkinFieldNumber = 6;
    private int skin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skin {
      get { return skin_; }
      set {
        skin_ = value;
      }
    }

    /// <summary>Field number for the "trophies" field.</summary>
    public const int TrophiesFieldNumber = 7;
    private int trophies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Trophies {
      get { return trophies_; }
      set {
        trophies_ = value;
      }
    }

    /// <summary>Field number for the "heroLevel" field.</summary>
    public const int HeroLevelFieldNumber = 8;
    private int heroLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HeroLevel {
      get { return heroLevel_; }
      set {
        heroLevel_ = value;
      }
    }

    /// <summary>Field number for the "skill1Level" field.</summary>
    public const int Skill1LevelFieldNumber = 9;
    private int skill1Level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skill1Level {
      get { return skill1Level_; }
      set {
        skill1Level_ = value;
      }
    }

    /// <summary>Field number for the "skill2Level" field.</summary>
    public const int Skill2LevelFieldNumber = 10;
    private int skill2Level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skill2Level {
      get { return skill2Level_; }
      set {
        skill2Level_ = value;
      }
    }

    /// <summary>Field number for the "regions" field.</summary>
    public const int RegionsFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_regions_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> regions_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Regions {
      get { return regions_; }
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 12;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatarId" field.</summary>
    public const int AvatarIdFieldNumber = 13;
    private int avatarId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AvatarId {
      get { return avatarId_; }
      set {
        avatarId_ = value;
      }
    }

    /// <summary>Field number for the "frameId" field.</summary>
    public const int FrameIdFieldNumber = 14;
    private int frameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FrameId {
      get { return frameId_; }
      set {
        frameId_ = value;
      }
    }

    /// <summary>Field number for the "guildId" field.</summary>
    public const int GuildIdFieldNumber = 15;
    private string guildId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GuildId {
      get { return guildId_; }
      set {
        guildId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "heroId" field.</summary>
    public const int HeroIdFieldNumber = 16;
    private string heroId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HeroId {
      get { return heroId_; }
      set {
        heroId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isSpecialEvent" field.</summary>
    public const int IsSpecialEventFieldNumber = 17;
    private bool isSpecialEvent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSpecialEvent {
      get { return isSpecialEvent_; }
      set {
        isSpecialEvent_ = value;
      }
    }

    /// <summary>Field number for the "behaviorPoint" field.</summary>
    public const int BehaviorPointFieldNumber = 18;
    private int behaviorPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BehaviorPoint {
      get { return behaviorPoint_; }
      set {
        behaviorPoint_ = value;
      }
    }

    /// <summary>Field number for the "trophyMatching" field.</summary>
    public const int TrophyMatchingFieldNumber = 19;
    private int trophyMatching_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrophyMatching {
      get { return trophyMatching_; }
      set {
        trophyMatching_ = value;
      }
    }

    /// <summary>Field number for the "brainType" field.</summary>
    public const int BrainTypeFieldNumber = 20;
    private int brainType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BrainType {
      get { return brainType_; }
      set {
        brainType_ = value;
      }
    }

    /// <summary>Field number for the "teamID" field.</summary>
    public const int TeamIDFieldNumber = 21;
    private int teamID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TeamID {
      get { return teamID_; }
      set {
        teamID_ = value;
      }
    }

    /// <summary>Field number for the "battleCount" field.</summary>
    public const int BattleCountFieldNumber = 22;
    private int battleCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BattleCount {
      get { return battleCount_; }
      set {
        battleCount_ = value;
      }
    }

    /// <summary>Field number for the "cosmeticUsing" field.</summary>
    public const int CosmeticUsingFieldNumber = 23;
    private global::Core.Proto.CosmeticUsingProto cosmeticUsing_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.CosmeticUsingProto CosmeticUsing {
      get { return cosmeticUsing_; }
      set {
        cosmeticUsing_ = value;
      }
    }

    /// <summary>Field number for the "NameColorId" field.</summary>
    public const int NameColorIdFieldNumber = 24;
    private int nameColorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NameColorId {
      get { return nameColorId_; }
      set {
        nameColorId_ = value;
      }
    }

    /// <summary>Field number for the "PlayerScore" field.</summary>
    public const int PlayerScoreFieldNumber = 25;
    private double playerScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PlayerScore {
      get { return playerScore_; }
      set {
        playerScore_ = value;
      }
    }

    /// <summary>Field number for the "MapIDs" field.</summary>
    public const int MapIDsFieldNumber = 26;
    private static readonly pb::FieldCodec<int> _repeated_mapIDs_codec
        = pb::FieldCodec.ForInt32(210);
    private readonly pbc::RepeatedField<int> mapIDs_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MapIDs {
      get { return mapIDs_; }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 27;
    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "cosmeticUsingV2" field.</summary>
    public const int CosmeticUsingV2FieldNumber = 28;
    private global::Core.Proto.CosmeticUsingProtoV2 cosmeticUsingV2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.CosmeticUsingProtoV2 CosmeticUsingV2 {
      get { return cosmeticUsingV2_; }
      set {
        cosmeticUsingV2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfoMatchProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerInfoMatchProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PartyId != other.PartyId) return false;
      if (HeroTypeId != other.HeroTypeId) return false;
      if (Skill1 != other.Skill1) return false;
      if (Skill2 != other.Skill2) return false;
      if (Skin != other.Skin) return false;
      if (Trophies != other.Trophies) return false;
      if (HeroLevel != other.HeroLevel) return false;
      if (Skill1Level != other.Skill1Level) return false;
      if (Skill2Level != other.Skill2Level) return false;
      if(!regions_.Equals(other.regions_)) return false;
      if (PlayerName != other.PlayerName) return false;
      if (AvatarId != other.AvatarId) return false;
      if (FrameId != other.FrameId) return false;
      if (GuildId != other.GuildId) return false;
      if (HeroId != other.HeroId) return false;
      if (IsSpecialEvent != other.IsSpecialEvent) return false;
      if (BehaviorPoint != other.BehaviorPoint) return false;
      if (TrophyMatching != other.TrophyMatching) return false;
      if (BrainType != other.BrainType) return false;
      if (TeamID != other.TeamID) return false;
      if (BattleCount != other.BattleCount) return false;
      if (!object.Equals(CosmeticUsing, other.CosmeticUsing)) return false;
      if (NameColorId != other.NameColorId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PlayerScore, other.PlayerScore)) return false;
      if(!mapIDs_.Equals(other.mapIDs_)) return false;
      if (Rank != other.Rank) return false;
      if (!object.Equals(CosmeticUsingV2, other.CosmeticUsingV2)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (PartyId.Length != 0) hash ^= PartyId.GetHashCode();
      if (HeroTypeId != 0) hash ^= HeroTypeId.GetHashCode();
      if (Skill1 != 0) hash ^= Skill1.GetHashCode();
      if (Skill2 != 0) hash ^= Skill2.GetHashCode();
      if (Skin != 0) hash ^= Skin.GetHashCode();
      if (Trophies != 0) hash ^= Trophies.GetHashCode();
      if (HeroLevel != 0) hash ^= HeroLevel.GetHashCode();
      if (Skill1Level != 0) hash ^= Skill1Level.GetHashCode();
      if (Skill2Level != 0) hash ^= Skill2Level.GetHashCode();
      hash ^= regions_.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (AvatarId != 0) hash ^= AvatarId.GetHashCode();
      if (FrameId != 0) hash ^= FrameId.GetHashCode();
      if (GuildId.Length != 0) hash ^= GuildId.GetHashCode();
      if (HeroId.Length != 0) hash ^= HeroId.GetHashCode();
      if (IsSpecialEvent != false) hash ^= IsSpecialEvent.GetHashCode();
      if (BehaviorPoint != 0) hash ^= BehaviorPoint.GetHashCode();
      if (TrophyMatching != 0) hash ^= TrophyMatching.GetHashCode();
      if (BrainType != 0) hash ^= BrainType.GetHashCode();
      if (TeamID != 0) hash ^= TeamID.GetHashCode();
      if (BattleCount != 0) hash ^= BattleCount.GetHashCode();
      if (cosmeticUsing_ != null) hash ^= CosmeticUsing.GetHashCode();
      if (NameColorId != 0) hash ^= NameColorId.GetHashCode();
      if (PlayerScore != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PlayerScore);
      hash ^= mapIDs_.GetHashCode();
      if (Rank != 0) hash ^= Rank.GetHashCode();
      if (cosmeticUsingV2_ != null) hash ^= CosmeticUsingV2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (PartyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PartyId);
      }
      if (HeroTypeId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HeroTypeId);
      }
      if (Skill1 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Skill1);
      }
      if (Skill2 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Skill2);
      }
      if (Skin != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Skin);
      }
      if (Trophies != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Trophies);
      }
      if (HeroLevel != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(HeroLevel);
      }
      if (Skill1Level != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Skill1Level);
      }
      if (Skill2Level != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Skill2Level);
      }
      regions_.WriteTo(output, _repeated_regions_codec);
      if (PlayerName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PlayerName);
      }
      if (AvatarId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(AvatarId);
      }
      if (FrameId != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(FrameId);
      }
      if (GuildId.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(GuildId);
      }
      if (HeroId.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(HeroId);
      }
      if (IsSpecialEvent != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsSpecialEvent);
      }
      if (BehaviorPoint != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(BehaviorPoint);
      }
      if (TrophyMatching != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(TrophyMatching);
      }
      if (BrainType != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(BrainType);
      }
      if (TeamID != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(TeamID);
      }
      if (BattleCount != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(BattleCount);
      }
      if (cosmeticUsing_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(CosmeticUsing);
      }
      if (NameColorId != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(NameColorId);
      }
      if (PlayerScore != 0D) {
        output.WriteRawTag(201, 1);
        output.WriteDouble(PlayerScore);
      }
      mapIDs_.WriteTo(output, _repeated_mapIDs_codec);
      if (Rank != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(Rank);
      }
      if (cosmeticUsingV2_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(CosmeticUsingV2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (PartyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PartyId);
      }
      if (HeroTypeId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HeroTypeId);
      }
      if (Skill1 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Skill1);
      }
      if (Skill2 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Skill2);
      }
      if (Skin != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Skin);
      }
      if (Trophies != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Trophies);
      }
      if (HeroLevel != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(HeroLevel);
      }
      if (Skill1Level != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Skill1Level);
      }
      if (Skill2Level != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Skill2Level);
      }
      regions_.WriteTo(ref output, _repeated_regions_codec);
      if (PlayerName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PlayerName);
      }
      if (AvatarId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(AvatarId);
      }
      if (FrameId != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(FrameId);
      }
      if (GuildId.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(GuildId);
      }
      if (HeroId.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(HeroId);
      }
      if (IsSpecialEvent != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsSpecialEvent);
      }
      if (BehaviorPoint != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(BehaviorPoint);
      }
      if (TrophyMatching != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(TrophyMatching);
      }
      if (BrainType != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(BrainType);
      }
      if (TeamID != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(TeamID);
      }
      if (BattleCount != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(BattleCount);
      }
      if (cosmeticUsing_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(CosmeticUsing);
      }
      if (NameColorId != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(NameColorId);
      }
      if (PlayerScore != 0D) {
        output.WriteRawTag(201, 1);
        output.WriteDouble(PlayerScore);
      }
      mapIDs_.WriteTo(ref output, _repeated_mapIDs_codec);
      if (Rank != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(Rank);
      }
      if (cosmeticUsingV2_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(CosmeticUsingV2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (PartyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartyId);
      }
      if (HeroTypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroTypeId);
      }
      if (Skill1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skill1);
      }
      if (Skill2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skill2);
      }
      if (Skin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skin);
      }
      if (Trophies != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Trophies);
      }
      if (HeroLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroLevel);
      }
      if (Skill1Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skill1Level);
      }
      if (Skill2Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skill2Level);
      }
      size += regions_.CalculateSize(_repeated_regions_codec);
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (AvatarId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarId);
      }
      if (FrameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameId);
      }
      if (GuildId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GuildId);
      }
      if (HeroId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HeroId);
      }
      if (IsSpecialEvent != false) {
        size += 2 + 1;
      }
      if (BehaviorPoint != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BehaviorPoint);
      }
      if (TrophyMatching != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TrophyMatching);
      }
      if (BrainType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BrainType);
      }
      if (TeamID != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TeamID);
      }
      if (BattleCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BattleCount);
      }
      if (cosmeticUsing_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CosmeticUsing);
      }
      if (NameColorId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NameColorId);
      }
      if (PlayerScore != 0D) {
        size += 2 + 8;
      }
      size += mapIDs_.CalculateSize(_repeated_mapIDs_codec);
      if (Rank != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (cosmeticUsingV2_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CosmeticUsingV2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerInfoMatchProto other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PartyId.Length != 0) {
        PartyId = other.PartyId;
      }
      if (other.HeroTypeId != 0) {
        HeroTypeId = other.HeroTypeId;
      }
      if (other.Skill1 != 0) {
        Skill1 = other.Skill1;
      }
      if (other.Skill2 != 0) {
        Skill2 = other.Skill2;
      }
      if (other.Skin != 0) {
        Skin = other.Skin;
      }
      if (other.Trophies != 0) {
        Trophies = other.Trophies;
      }
      if (other.HeroLevel != 0) {
        HeroLevel = other.HeroLevel;
      }
      if (other.Skill1Level != 0) {
        Skill1Level = other.Skill1Level;
      }
      if (other.Skill2Level != 0) {
        Skill2Level = other.Skill2Level;
      }
      regions_.Add(other.regions_);
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.AvatarId != 0) {
        AvatarId = other.AvatarId;
      }
      if (other.FrameId != 0) {
        FrameId = other.FrameId;
      }
      if (other.GuildId.Length != 0) {
        GuildId = other.GuildId;
      }
      if (other.HeroId.Length != 0) {
        HeroId = other.HeroId;
      }
      if (other.IsSpecialEvent != false) {
        IsSpecialEvent = other.IsSpecialEvent;
      }
      if (other.BehaviorPoint != 0) {
        BehaviorPoint = other.BehaviorPoint;
      }
      if (other.TrophyMatching != 0) {
        TrophyMatching = other.TrophyMatching;
      }
      if (other.BrainType != 0) {
        BrainType = other.BrainType;
      }
      if (other.TeamID != 0) {
        TeamID = other.TeamID;
      }
      if (other.BattleCount != 0) {
        BattleCount = other.BattleCount;
      }
      if (other.cosmeticUsing_ != null) {
        if (cosmeticUsing_ == null) {
          CosmeticUsing = new global::Core.Proto.CosmeticUsingProto();
        }
        CosmeticUsing.MergeFrom(other.CosmeticUsing);
      }
      if (other.NameColorId != 0) {
        NameColorId = other.NameColorId;
      }
      if (other.PlayerScore != 0D) {
        PlayerScore = other.PlayerScore;
      }
      mapIDs_.Add(other.mapIDs_);
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      if (other.cosmeticUsingV2_ != null) {
        if (cosmeticUsingV2_ == null) {
          CosmeticUsingV2 = new global::Core.Proto.CosmeticUsingProtoV2();
        }
        CosmeticUsingV2.MergeFrom(other.CosmeticUsingV2);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            PartyId = input.ReadString();
            break;
          }
          case 24: {
            HeroTypeId = input.ReadInt32();
            break;
          }
          case 32: {
            Skill1 = input.ReadInt32();
            break;
          }
          case 40: {
            Skill2 = input.ReadInt32();
            break;
          }
          case 48: {
            Skin = input.ReadInt32();
            break;
          }
          case 56: {
            Trophies = input.ReadInt32();
            break;
          }
          case 64: {
            HeroLevel = input.ReadInt32();
            break;
          }
          case 72: {
            Skill1Level = input.ReadInt32();
            break;
          }
          case 80: {
            Skill2Level = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            regions_.AddEntriesFrom(input, _repeated_regions_codec);
            break;
          }
          case 98: {
            PlayerName = input.ReadString();
            break;
          }
          case 104: {
            AvatarId = input.ReadInt32();
            break;
          }
          case 112: {
            FrameId = input.ReadInt32();
            break;
          }
          case 122: {
            GuildId = input.ReadString();
            break;
          }
          case 130: {
            HeroId = input.ReadString();
            break;
          }
          case 136: {
            IsSpecialEvent = input.ReadBool();
            break;
          }
          case 144: {
            BehaviorPoint = input.ReadInt32();
            break;
          }
          case 152: {
            TrophyMatching = input.ReadInt32();
            break;
          }
          case 160: {
            BrainType = input.ReadInt32();
            break;
          }
          case 168: {
            TeamID = input.ReadInt32();
            break;
          }
          case 176: {
            BattleCount = input.ReadInt32();
            break;
          }
          case 186: {
            if (cosmeticUsing_ == null) {
              CosmeticUsing = new global::Core.Proto.CosmeticUsingProto();
            }
            input.ReadMessage(CosmeticUsing);
            break;
          }
          case 192: {
            NameColorId = input.ReadInt32();
            break;
          }
          case 201: {
            PlayerScore = input.ReadDouble();
            break;
          }
          case 210:
          case 208: {
            mapIDs_.AddEntriesFrom(input, _repeated_mapIDs_codec);
            break;
          }
          case 216: {
            Rank = input.ReadInt32();
            break;
          }
          case 226: {
            if (cosmeticUsingV2_ == null) {
              CosmeticUsingV2 = new global::Core.Proto.CosmeticUsingProtoV2();
            }
            input.ReadMessage(CosmeticUsingV2);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            PartyId = input.ReadString();
            break;
          }
          case 24: {
            HeroTypeId = input.ReadInt32();
            break;
          }
          case 32: {
            Skill1 = input.ReadInt32();
            break;
          }
          case 40: {
            Skill2 = input.ReadInt32();
            break;
          }
          case 48: {
            Skin = input.ReadInt32();
            break;
          }
          case 56: {
            Trophies = input.ReadInt32();
            break;
          }
          case 64: {
            HeroLevel = input.ReadInt32();
            break;
          }
          case 72: {
            Skill1Level = input.ReadInt32();
            break;
          }
          case 80: {
            Skill2Level = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            regions_.AddEntriesFrom(ref input, _repeated_regions_codec);
            break;
          }
          case 98: {
            PlayerName = input.ReadString();
            break;
          }
          case 104: {
            AvatarId = input.ReadInt32();
            break;
          }
          case 112: {
            FrameId = input.ReadInt32();
            break;
          }
          case 122: {
            GuildId = input.ReadString();
            break;
          }
          case 130: {
            HeroId = input.ReadString();
            break;
          }
          case 136: {
            IsSpecialEvent = input.ReadBool();
            break;
          }
          case 144: {
            BehaviorPoint = input.ReadInt32();
            break;
          }
          case 152: {
            TrophyMatching = input.ReadInt32();
            break;
          }
          case 160: {
            BrainType = input.ReadInt32();
            break;
          }
          case 168: {
            TeamID = input.ReadInt32();
            break;
          }
          case 176: {
            BattleCount = input.ReadInt32();
            break;
          }
          case 186: {
            if (cosmeticUsing_ == null) {
              CosmeticUsing = new global::Core.Proto.CosmeticUsingProto();
            }
            input.ReadMessage(CosmeticUsing);
            break;
          }
          case 192: {
            NameColorId = input.ReadInt32();
            break;
          }
          case 201: {
            PlayerScore = input.ReadDouble();
            break;
          }
          case 210:
          case 208: {
            mapIDs_.AddEntriesFrom(ref input, _repeated_mapIDs_codec);
            break;
          }
          case 216: {
            Rank = input.ReadInt32();
            break;
          }
          case 226: {
            if (cosmeticUsingV2_ == null) {
              CosmeticUsingV2 = new global::Core.Proto.CosmeticUsingProtoV2();
            }
            input.ReadMessage(CosmeticUsingV2);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.ObsoleteAttribute]
  public sealed partial class CosmeticUsingProto : pb::IMessage<CosmeticUsingProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CosmeticUsingProto> _parser = new pb::MessageParser<CosmeticUsingProto>(() => new CosmeticUsingProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CosmeticUsingProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CosmeticUsingProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CosmeticUsingProto(CosmeticUsingProto other) : this() {
      backBling_ = other.backBling_;
      dance_ = other.dance_;
      flyCraft_ = other.flyCraft_;
      footprint_ = other.footprint_;
      glow_ = other.glow_;
      spray_ = other.spray_;
      voice_ = other.voice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CosmeticUsingProto Clone() {
      return new CosmeticUsingProto(this);
    }

    /// <summary>Field number for the "backBling" field.</summary>
    public const int BackBlingFieldNumber = 1;
    private int backBling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BackBling {
      get { return backBling_; }
      set {
        backBling_ = value;
      }
    }

    /// <summary>Field number for the "dance" field.</summary>
    public const int DanceFieldNumber = 2;
    private int dance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dance {
      get { return dance_; }
      set {
        dance_ = value;
      }
    }

    /// <summary>Field number for the "flyCraft" field.</summary>
    public const int FlyCraftFieldNumber = 3;
    private int flyCraft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FlyCraft {
      get { return flyCraft_; }
      set {
        flyCraft_ = value;
      }
    }

    /// <summary>Field number for the "footprint" field.</summary>
    public const int FootprintFieldNumber = 4;
    private int footprint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Footprint {
      get { return footprint_; }
      set {
        footprint_ = value;
      }
    }

    /// <summary>Field number for the "glow" field.</summary>
    public const int GlowFieldNumber = 5;
    private int glow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Glow {
      get { return glow_; }
      set {
        glow_ = value;
      }
    }

    /// <summary>Field number for the "spray" field.</summary>
    public const int SprayFieldNumber = 6;
    private int spray_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Spray {
      get { return spray_; }
      set {
        spray_ = value;
      }
    }

    /// <summary>Field number for the "voice" field.</summary>
    public const int VoiceFieldNumber = 7;
    private int voice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Voice {
      get { return voice_; }
      set {
        voice_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CosmeticUsingProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CosmeticUsingProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BackBling != other.BackBling) return false;
      if (Dance != other.Dance) return false;
      if (FlyCraft != other.FlyCraft) return false;
      if (Footprint != other.Footprint) return false;
      if (Glow != other.Glow) return false;
      if (Spray != other.Spray) return false;
      if (Voice != other.Voice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BackBling != 0) hash ^= BackBling.GetHashCode();
      if (Dance != 0) hash ^= Dance.GetHashCode();
      if (FlyCraft != 0) hash ^= FlyCraft.GetHashCode();
      if (Footprint != 0) hash ^= Footprint.GetHashCode();
      if (Glow != 0) hash ^= Glow.GetHashCode();
      if (Spray != 0) hash ^= Spray.GetHashCode();
      if (Voice != 0) hash ^= Voice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BackBling != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BackBling);
      }
      if (Dance != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Dance);
      }
      if (FlyCraft != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FlyCraft);
      }
      if (Footprint != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Footprint);
      }
      if (Glow != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Glow);
      }
      if (Spray != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Spray);
      }
      if (Voice != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Voice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BackBling != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BackBling);
      }
      if (Dance != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Dance);
      }
      if (FlyCraft != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FlyCraft);
      }
      if (Footprint != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Footprint);
      }
      if (Glow != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Glow);
      }
      if (Spray != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Spray);
      }
      if (Voice != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Voice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BackBling != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BackBling);
      }
      if (Dance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dance);
      }
      if (FlyCraft != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FlyCraft);
      }
      if (Footprint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Footprint);
      }
      if (Glow != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Glow);
      }
      if (Spray != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Spray);
      }
      if (Voice != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Voice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CosmeticUsingProto other) {
      if (other == null) {
        return;
      }
      if (other.BackBling != 0) {
        BackBling = other.BackBling;
      }
      if (other.Dance != 0) {
        Dance = other.Dance;
      }
      if (other.FlyCraft != 0) {
        FlyCraft = other.FlyCraft;
      }
      if (other.Footprint != 0) {
        Footprint = other.Footprint;
      }
      if (other.Glow != 0) {
        Glow = other.Glow;
      }
      if (other.Spray != 0) {
        Spray = other.Spray;
      }
      if (other.Voice != 0) {
        Voice = other.Voice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BackBling = input.ReadInt32();
            break;
          }
          case 16: {
            Dance = input.ReadInt32();
            break;
          }
          case 24: {
            FlyCraft = input.ReadInt32();
            break;
          }
          case 32: {
            Footprint = input.ReadInt32();
            break;
          }
          case 40: {
            Glow = input.ReadInt32();
            break;
          }
          case 48: {
            Spray = input.ReadInt32();
            break;
          }
          case 56: {
            Voice = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BackBling = input.ReadInt32();
            break;
          }
          case 16: {
            Dance = input.ReadInt32();
            break;
          }
          case 24: {
            FlyCraft = input.ReadInt32();
            break;
          }
          case 32: {
            Footprint = input.ReadInt32();
            break;
          }
          case 40: {
            Glow = input.ReadInt32();
            break;
          }
          case 48: {
            Spray = input.ReadInt32();
            break;
          }
          case 56: {
            Voice = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///khi delete ticket thanh cong
  ///se goi len MatchChannel de get party hoac player va send
  /// </summary>
  public sealed partial class DeleteTicketSuccess : pb::IMessage<DeleteTicketSuccess>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteTicketSuccess> _parser = new pb::MessageParser<DeleteTicketSuccess>(() => new DeleteTicketSuccess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteTicketSuccess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteTicketSuccess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteTicketSuccess(DeleteTicketSuccess other) : this() {
      playerId_ = other.playerId_;
      ticketId_ = other.ticketId_;
      partyId_ = other.partyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteTicketSuccess Clone() {
      return new DeleteTicketSuccess(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ticketId" field.</summary>
    public const int TicketIdFieldNumber = 2;
    private string ticketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TicketId {
      get { return ticketId_; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partyId" field.</summary>
    public const int PartyIdFieldNumber = 3;
    private string partyId_ = "";
    /// <summary>
    /// dung de broadcast party
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PartyId {
      get { return partyId_; }
      set {
        partyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteTicketSuccess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteTicketSuccess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (TicketId != other.TicketId) return false;
      if (PartyId != other.PartyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (TicketId.Length != 0) hash ^= TicketId.GetHashCode();
      if (PartyId.Length != 0) hash ^= PartyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (TicketId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TicketId);
      }
      if (PartyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PartyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (TicketId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TicketId);
      }
      if (PartyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PartyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (TicketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (PartyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteTicketSuccess other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.TicketId.Length != 0) {
        TicketId = other.TicketId;
      }
      if (other.PartyId.Length != 0) {
        PartyId = other.PartyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            TicketId = input.ReadString();
            break;
          }
          case 26: {
            PartyId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            TicketId = input.ReadString();
            break;
          }
          case 26: {
            PartyId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///message dung chung
  /// </summary>
  public sealed partial class MatchProtoPackage : pb::IMessage<MatchProtoPackage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchProtoPackage> _parser = new pb::MessageParser<MatchProtoPackage>(() => new MatchProtoPackage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchProtoPackage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchProtoPackage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchProtoPackage(MatchProtoPackage other) : this() {
      playerId_ = other.playerId_;
      partyId_ = other.partyId_;
      switch (other.ResCase) {
        case ResOneofCase.Data:
          Data = other.Data;
          break;
        case ResOneofCase.ListErrorPlayer:
          ListErrorPlayer = other.ListErrorPlayer.Clone();
          break;
        case ResOneofCase.ErrorCode:
          ErrorCode = other.ErrorCode;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchProtoPackage Clone() {
      return new MatchProtoPackage(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partyId" field.</summary>
    public const int PartyIdFieldNumber = 5;
    private string partyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PartyId {
      get { return partyId_; }
      set {
        partyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return resCase_ == ResOneofCase.Data ? (pb::ByteString) res_ : pb::ByteString.Empty; }
      set {
        res_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        resCase_ = ResOneofCase.Data;
      }
    }

    /// <summary>Field number for the "listErrorPlayer" field.</summary>
    public const int ListErrorPlayerFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.ListErrorPlayer ListErrorPlayer {
      get { return resCase_ == ResOneofCase.ListErrorPlayer ? (global::Core.Proto.ListErrorPlayer) res_ : null; }
      set {
        res_ = value;
        resCase_ = value == null ? ResOneofCase.None : ResOneofCase.ListErrorPlayer;
      }
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ErrorCode {
      get { return resCase_ == ResOneofCase.ErrorCode ? (int) res_ : 0; }
      set {
        res_ = value;
        resCase_ = ResOneofCase.ErrorCode;
      }
    }

    private object res_;
    /// <summary>Enum of possible cases for the "res" oneof.</summary>
    public enum ResOneofCase {
      None = 0,
      Data = 2,
      ListErrorPlayer = 3,
      ErrorCode = 4,
    }
    private ResOneofCase resCase_ = ResOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResOneofCase ResCase {
      get { return resCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRes() {
      resCase_ = ResOneofCase.None;
      res_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchProtoPackage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchProtoPackage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PartyId != other.PartyId) return false;
      if (Data != other.Data) return false;
      if (!object.Equals(ListErrorPlayer, other.ListErrorPlayer)) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (ResCase != other.ResCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (PartyId.Length != 0) hash ^= PartyId.GetHashCode();
      if (resCase_ == ResOneofCase.Data) hash ^= Data.GetHashCode();
      if (resCase_ == ResOneofCase.ListErrorPlayer) hash ^= ListErrorPlayer.GetHashCode();
      if (resCase_ == ResOneofCase.ErrorCode) hash ^= ErrorCode.GetHashCode();
      hash ^= (int) resCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (resCase_ == ResOneofCase.Data) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (resCase_ == ResOneofCase.ListErrorPlayer) {
        output.WriteRawTag(26);
        output.WriteMessage(ListErrorPlayer);
      }
      if (resCase_ == ResOneofCase.ErrorCode) {
        output.WriteRawTag(32);
        output.WriteInt32(ErrorCode);
      }
      if (PartyId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PartyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (resCase_ == ResOneofCase.Data) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (resCase_ == ResOneofCase.ListErrorPlayer) {
        output.WriteRawTag(26);
        output.WriteMessage(ListErrorPlayer);
      }
      if (resCase_ == ResOneofCase.ErrorCode) {
        output.WriteRawTag(32);
        output.WriteInt32(ErrorCode);
      }
      if (PartyId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PartyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (PartyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartyId);
      }
      if (resCase_ == ResOneofCase.Data) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (resCase_ == ResOneofCase.ListErrorPlayer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ListErrorPlayer);
      }
      if (resCase_ == ResOneofCase.ErrorCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchProtoPackage other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PartyId.Length != 0) {
        PartyId = other.PartyId;
      }
      switch (other.ResCase) {
        case ResOneofCase.Data:
          Data = other.Data;
          break;
        case ResOneofCase.ListErrorPlayer:
          if (ListErrorPlayer == null) {
            ListErrorPlayer = new global::Core.Proto.ListErrorPlayer();
          }
          ListErrorPlayer.MergeFrom(other.ListErrorPlayer);
          break;
        case ResOneofCase.ErrorCode:
          ErrorCode = other.ErrorCode;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 26: {
            global::Core.Proto.ListErrorPlayer subBuilder = new global::Core.Proto.ListErrorPlayer();
            if (resCase_ == ResOneofCase.ListErrorPlayer) {
              subBuilder.MergeFrom(ListErrorPlayer);
            }
            input.ReadMessage(subBuilder);
            ListErrorPlayer = subBuilder;
            break;
          }
          case 32: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 42: {
            PartyId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 26: {
            global::Core.Proto.ListErrorPlayer subBuilder = new global::Core.Proto.ListErrorPlayer();
            if (resCase_ == ResOneofCase.ListErrorPlayer) {
              subBuilder.MergeFrom(ListErrorPlayer);
            }
            input.ReadMessage(subBuilder);
            ListErrorPlayer = subBuilder;
            break;
          }
          case 32: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 42: {
            PartyId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TicketDataCache : pb::IMessage<TicketDataCache>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TicketDataCache> _parser = new pb::MessageParser<TicketDataCache>(() => new TicketDataCache());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TicketDataCache> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketDataCache() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketDataCache(TicketDataCache other) : this() {
      inGameMode_ = other.inGameMode_;
      trophies_ = other.trophies_;
      playerIds_ = other.playerIds_.Clone();
      ticketId_ = other.ticketId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketDataCache Clone() {
      return new TicketDataCache(this);
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 1;
    private global::Core.Proto.InGameMode inGameMode_ = global::Core.Proto.InGameMode.TeamCollectStar;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.InGameMode InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    /// <summary>Field number for the "trophies" field.</summary>
    public const int TrophiesFieldNumber = 2;
    private int trophies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Trophies {
      get { return trophies_; }
      set {
        trophies_ = value;
      }
    }

    /// <summary>Field number for the "playerIds" field.</summary>
    public const int PlayerIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_playerIds_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> playerIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> PlayerIds {
      get { return playerIds_; }
    }

    /// <summary>Field number for the "ticketId" field.</summary>
    public const int TicketIdFieldNumber = 4;
    private string ticketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TicketId {
      get { return ticketId_; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TicketDataCache);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TicketDataCache other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InGameMode != other.InGameMode) return false;
      if (Trophies != other.Trophies) return false;
      if(!playerIds_.Equals(other.playerIds_)) return false;
      if (TicketId != other.TicketId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) hash ^= InGameMode.GetHashCode();
      if (Trophies != 0) hash ^= Trophies.GetHashCode();
      hash ^= playerIds_.GetHashCode();
      if (TicketId.Length != 0) hash ^= TicketId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        output.WriteRawTag(8);
        output.WriteEnum((int) InGameMode);
      }
      if (Trophies != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Trophies);
      }
      playerIds_.WriteTo(output, _repeated_playerIds_codec);
      if (TicketId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TicketId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        output.WriteRawTag(8);
        output.WriteEnum((int) InGameMode);
      }
      if (Trophies != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Trophies);
      }
      playerIds_.WriteTo(ref output, _repeated_playerIds_codec);
      if (TicketId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TicketId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InGameMode);
      }
      if (Trophies != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Trophies);
      }
      size += playerIds_.CalculateSize(_repeated_playerIds_codec);
      if (TicketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TicketDataCache other) {
      if (other == null) {
        return;
      }
      if (other.InGameMode != global::Core.Proto.InGameMode.TeamCollectStar) {
        InGameMode = other.InGameMode;
      }
      if (other.Trophies != 0) {
        Trophies = other.Trophies;
      }
      playerIds_.Add(other.playerIds_);
      if (other.TicketId.Length != 0) {
        TicketId = other.TicketId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InGameMode = (global::Core.Proto.InGameMode) input.ReadEnum();
            break;
          }
          case 16: {
            Trophies = input.ReadInt32();
            break;
          }
          case 26: {
            playerIds_.AddEntriesFrom(input, _repeated_playerIds_codec);
            break;
          }
          case 34: {
            TicketId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InGameMode = (global::Core.Proto.InGameMode) input.ReadEnum();
            break;
          }
          case 16: {
            Trophies = input.ReadInt32();
            break;
          }
          case 26: {
            playerIds_.AddEntriesFrom(ref input, _repeated_playerIds_codec);
            break;
          }
          case 34: {
            TicketId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListErrorPlayer : pb::IMessage<ListErrorPlayer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListErrorPlayer> _parser = new pb::MessageParser<ListErrorPlayer>(() => new ListErrorPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListErrorPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListErrorPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListErrorPlayer(ListErrorPlayer other) : this() {
      errorPlayers_ = other.errorPlayers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListErrorPlayer Clone() {
      return new ListErrorPlayer(this);
    }

    /// <summary>Field number for the "errorPlayers" field.</summary>
    public const int ErrorPlayersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Core.Proto.ListErrorPlayer.Types.ErrorPlayer> _repeated_errorPlayers_codec
        = pb::FieldCodec.ForMessage(10, global::Core.Proto.ListErrorPlayer.Types.ErrorPlayer.Parser);
    private readonly pbc::RepeatedField<global::Core.Proto.ListErrorPlayer.Types.ErrorPlayer> errorPlayers_ = new pbc::RepeatedField<global::Core.Proto.ListErrorPlayer.Types.ErrorPlayer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Core.Proto.ListErrorPlayer.Types.ErrorPlayer> ErrorPlayers {
      get { return errorPlayers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListErrorPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListErrorPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!errorPlayers_.Equals(other.errorPlayers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= errorPlayers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      errorPlayers_.WriteTo(output, _repeated_errorPlayers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      errorPlayers_.WriteTo(ref output, _repeated_errorPlayers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += errorPlayers_.CalculateSize(_repeated_errorPlayers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListErrorPlayer other) {
      if (other == null) {
        return;
      }
      errorPlayers_.Add(other.errorPlayers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            errorPlayers_.AddEntriesFrom(input, _repeated_errorPlayers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            errorPlayers_.AddEntriesFrom(ref input, _repeated_errorPlayers_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ListErrorPlayer message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class ErrorPlayer : pb::IMessage<ErrorPlayer>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ErrorPlayer> _parser = new pb::MessageParser<ErrorPlayer>(() => new ErrorPlayer());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ErrorPlayer> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Core.Proto.ListErrorPlayer.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ErrorPlayer() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ErrorPlayer(ErrorPlayer other) : this() {
          userId_ = other.userId_;
          matchErrorCode_ = other.matchErrorCode_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ErrorPlayer Clone() {
          return new ErrorPlayer(this);
        }

        /// <summary>Field number for the "userId" field.</summary>
        public const int UserIdFieldNumber = 1;
        private string userId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "matchErrorCode" field.</summary>
        public const int MatchErrorCodeFieldNumber = 2;
        private global::Core.Proto.MatchErrorCode matchErrorCode_ = global::Core.Proto.MatchErrorCode.MSuccess;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Core.Proto.MatchErrorCode MatchErrorCode {
          get { return matchErrorCode_; }
          set {
            matchErrorCode_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ErrorPlayer);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ErrorPlayer other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UserId != other.UserId) return false;
          if (MatchErrorCode != other.MatchErrorCode) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (UserId.Length != 0) hash ^= UserId.GetHashCode();
          if (MatchErrorCode != global::Core.Proto.MatchErrorCode.MSuccess) hash ^= MatchErrorCode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (UserId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(UserId);
          }
          if (MatchErrorCode != global::Core.Proto.MatchErrorCode.MSuccess) {
            output.WriteRawTag(16);
            output.WriteEnum((int) MatchErrorCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (UserId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(UserId);
          }
          if (MatchErrorCode != global::Core.Proto.MatchErrorCode.MSuccess) {
            output.WriteRawTag(16);
            output.WriteEnum((int) MatchErrorCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (UserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
          }
          if (MatchErrorCode != global::Core.Proto.MatchErrorCode.MSuccess) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MatchErrorCode);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ErrorPlayer other) {
          if (other == null) {
            return;
          }
          if (other.UserId.Length != 0) {
            UserId = other.UserId;
          }
          if (other.MatchErrorCode != global::Core.Proto.MatchErrorCode.MSuccess) {
            MatchErrorCode = other.MatchErrorCode;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                UserId = input.ReadString();
                break;
              }
              case 16: {
                MatchErrorCode = (global::Core.Proto.MatchErrorCode) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                UserId = input.ReadString();
                break;
              }
              case 16: {
                MatchErrorCode = (global::Core.Proto.MatchErrorCode) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class MatchProtoVersionPackage : pb::IMessage<MatchProtoVersionPackage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchProtoVersionPackage> _parser = new pb::MessageParser<MatchProtoVersionPackage>(() => new MatchProtoVersionPackage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchProtoVersionPackage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchProtoVersionPackage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchProtoVersionPackage(MatchProtoVersionPackage other) : this() {
      playerId_ = other.playerId_;
      version_ = other.version_;
      switch (other.ResCase) {
        case ResOneofCase.Data:
          Data = other.Data;
          break;
        case ResOneofCase.ErrorCode:
          ErrorCode = other.ErrorCode;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchProtoVersionPackage Clone() {
      return new MatchProtoVersionPackage(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    /// <summary>
    ///data nay la proto khac
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return resCase_ == ResOneofCase.Data ? (pb::ByteString) res_ : pb::ByteString.Empty; }
      set {
        res_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        resCase_ = ResOneofCase.Data;
      }
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 3;
    /// <summary>
    ///neu khac 0 tuc la co loi. luc nay khong parse cai data nua
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ErrorCode {
      get { return resCase_ == ResOneofCase.ErrorCode ? (int) res_ : 0; }
      set {
        res_ = value;
        resCase_ = ResOneofCase.ErrorCode;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 4;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    private object res_;
    /// <summary>Enum of possible cases for the "res" oneof.</summary>
    public enum ResOneofCase {
      None = 0,
      Data = 2,
      ErrorCode = 3,
    }
    private ResOneofCase resCase_ = ResOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResOneofCase ResCase {
      get { return resCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRes() {
      resCase_ = ResOneofCase.None;
      res_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchProtoVersionPackage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchProtoVersionPackage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Data != other.Data) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (Version != other.Version) return false;
      if (ResCase != other.ResCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (resCase_ == ResOneofCase.Data) hash ^= Data.GetHashCode();
      if (resCase_ == ResOneofCase.ErrorCode) hash ^= ErrorCode.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      hash ^= (int) resCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (resCase_ == ResOneofCase.Data) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (resCase_ == ResOneofCase.ErrorCode) {
        output.WriteRawTag(24);
        output.WriteInt32(ErrorCode);
      }
      if (Version != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (resCase_ == ResOneofCase.Data) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (resCase_ == ResOneofCase.ErrorCode) {
        output.WriteRawTag(24);
        output.WriteInt32(ErrorCode);
      }
      if (Version != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (resCase_ == ResOneofCase.Data) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (resCase_ == ResOneofCase.ErrorCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchProtoVersionPackage other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      switch (other.ResCase) {
        case ResOneofCase.Data:
          Data = other.Data;
          break;
        case ResOneofCase.ErrorCode:
          ErrorCode = other.ErrorCode;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 24: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 32: {
            Version = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 24: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 32: {
            Version = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CancelMatchRequest : pb::IMessage<CancelMatchRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelMatchRequest> _parser = new pb::MessageParser<CancelMatchRequest>(() => new CancelMatchRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CancelMatchRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelMatchRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelMatchRequest(CancelMatchRequest other) : this() {
      playerId_ = other.playerId_;
      ticketId_ = other.ticketId_;
      trophy_ = other.trophy_;
      inGameMode_ = other.inGameMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelMatchRequest Clone() {
      return new CancelMatchRequest(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    /// <summary>
    /// A Ticket object with SearchFields defined.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ticketId" field.</summary>
    public const int TicketIdFieldNumber = 2;
    private string ticketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TicketId {
      get { return ticketId_; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trophy" field.</summary>
    public const int TrophyFieldNumber = 3;
    private int trophy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Trophy {
      get { return trophy_; }
      set {
        trophy_ = value;
      }
    }

    /// <summary>Field number for the "inGameMode" field.</summary>
    public const int InGameModeFieldNumber = 4;
    private int inGameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InGameMode {
      get { return inGameMode_; }
      set {
        inGameMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CancelMatchRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CancelMatchRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (TicketId != other.TicketId) return false;
      if (Trophy != other.Trophy) return false;
      if (InGameMode != other.InGameMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (TicketId.Length != 0) hash ^= TicketId.GetHashCode();
      if (Trophy != 0) hash ^= Trophy.GetHashCode();
      if (InGameMode != 0) hash ^= InGameMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (TicketId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TicketId);
      }
      if (Trophy != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Trophy);
      }
      if (InGameMode != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(InGameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (TicketId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TicketId);
      }
      if (Trophy != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Trophy);
      }
      if (InGameMode != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(InGameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (TicketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (Trophy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Trophy);
      }
      if (InGameMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InGameMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CancelMatchRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.TicketId.Length != 0) {
        TicketId = other.TicketId;
      }
      if (other.Trophy != 0) {
        Trophy = other.Trophy;
      }
      if (other.InGameMode != 0) {
        InGameMode = other.InGameMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            TicketId = input.ReadString();
            break;
          }
          case 24: {
            Trophy = input.ReadInt32();
            break;
          }
          case 32: {
            InGameMode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            TicketId = input.ReadString();
            break;
          }
          case 24: {
            Trophy = input.ReadInt32();
            break;
          }
          case 32: {
            InGameMode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchExtension : pb::IMessage<MatchExtension>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchExtension> _parser = new pb::MessageParser<MatchExtension>(() => new MatchExtension());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchExtension> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchExtension() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchExtension(MatchExtension other) : this() {
      minTrophies_ = other.minTrophies_;
      maxTrophies_ = other.maxTrophies_;
      minPlayers_ = other.minPlayers_;
      maxPlayers_ = other.maxPlayers_;
      maxTeam_ = other.maxTeam_;
      countPlayers_ = other.countPlayers_;
      numBot_ = other.numBot_;
      playerPerTeam_ = other.playerPerTeam_;
      matchFoundTimestamp_ = other.matchFoundTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchExtension Clone() {
      return new MatchExtension(this);
    }

    /// <summary>Field number for the "minTrophies" field.</summary>
    public const int MinTrophiesFieldNumber = 1;
    private int minTrophies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinTrophies {
      get { return minTrophies_; }
      set {
        minTrophies_ = value;
      }
    }

    /// <summary>Field number for the "maxTrophies" field.</summary>
    public const int MaxTrophiesFieldNumber = 2;
    private int maxTrophies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxTrophies {
      get { return maxTrophies_; }
      set {
        maxTrophies_ = value;
      }
    }

    /// <summary>Field number for the "minPlayers" field.</summary>
    public const int MinPlayersFieldNumber = 3;
    private int minPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinPlayers {
      get { return minPlayers_; }
      set {
        minPlayers_ = value;
      }
    }

    /// <summary>Field number for the "maxPlayers" field.</summary>
    public const int MaxPlayersFieldNumber = 4;
    private int maxPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxPlayers {
      get { return maxPlayers_; }
      set {
        maxPlayers_ = value;
      }
    }

    /// <summary>Field number for the "maxTeam" field.</summary>
    public const int MaxTeamFieldNumber = 5;
    private int maxTeam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxTeam {
      get { return maxTeam_; }
      set {
        maxTeam_ = value;
      }
    }

    /// <summary>Field number for the "countPlayers" field.</summary>
    public const int CountPlayersFieldNumber = 6;
    private int countPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CountPlayers {
      get { return countPlayers_; }
      set {
        countPlayers_ = value;
      }
    }

    /// <summary>Field number for the "numBot" field.</summary>
    public const int NumBotFieldNumber = 7;
    private int numBot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumBot {
      get { return numBot_; }
      set {
        numBot_ = value;
      }
    }

    /// <summary>Field number for the "playerPerTeam" field.</summary>
    public const int PlayerPerTeamFieldNumber = 8;
    private int playerPerTeam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerPerTeam {
      get { return playerPerTeam_; }
      set {
        playerPerTeam_ = value;
      }
    }

    /// <summary>Field number for the "matchFoundTimestamp" field.</summary>
    public const int MatchFoundTimestampFieldNumber = 9;
    private long matchFoundTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MatchFoundTimestamp {
      get { return matchFoundTimestamp_; }
      set {
        matchFoundTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchExtension);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchExtension other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MinTrophies != other.MinTrophies) return false;
      if (MaxTrophies != other.MaxTrophies) return false;
      if (MinPlayers != other.MinPlayers) return false;
      if (MaxPlayers != other.MaxPlayers) return false;
      if (MaxTeam != other.MaxTeam) return false;
      if (CountPlayers != other.CountPlayers) return false;
      if (NumBot != other.NumBot) return false;
      if (PlayerPerTeam != other.PlayerPerTeam) return false;
      if (MatchFoundTimestamp != other.MatchFoundTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MinTrophies != 0) hash ^= MinTrophies.GetHashCode();
      if (MaxTrophies != 0) hash ^= MaxTrophies.GetHashCode();
      if (MinPlayers != 0) hash ^= MinPlayers.GetHashCode();
      if (MaxPlayers != 0) hash ^= MaxPlayers.GetHashCode();
      if (MaxTeam != 0) hash ^= MaxTeam.GetHashCode();
      if (CountPlayers != 0) hash ^= CountPlayers.GetHashCode();
      if (NumBot != 0) hash ^= NumBot.GetHashCode();
      if (PlayerPerTeam != 0) hash ^= PlayerPerTeam.GetHashCode();
      if (MatchFoundTimestamp != 0L) hash ^= MatchFoundTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MinTrophies != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MinTrophies);
      }
      if (MaxTrophies != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxTrophies);
      }
      if (MinPlayers != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MinPlayers);
      }
      if (MaxPlayers != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxPlayers);
      }
      if (MaxTeam != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxTeam);
      }
      if (CountPlayers != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CountPlayers);
      }
      if (NumBot != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(NumBot);
      }
      if (PlayerPerTeam != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PlayerPerTeam);
      }
      if (MatchFoundTimestamp != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(MatchFoundTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MinTrophies != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MinTrophies);
      }
      if (MaxTrophies != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxTrophies);
      }
      if (MinPlayers != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MinPlayers);
      }
      if (MaxPlayers != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxPlayers);
      }
      if (MaxTeam != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxTeam);
      }
      if (CountPlayers != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CountPlayers);
      }
      if (NumBot != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(NumBot);
      }
      if (PlayerPerTeam != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PlayerPerTeam);
      }
      if (MatchFoundTimestamp != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(MatchFoundTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MinTrophies != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinTrophies);
      }
      if (MaxTrophies != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxTrophies);
      }
      if (MinPlayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinPlayers);
      }
      if (MaxPlayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayers);
      }
      if (MaxTeam != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxTeam);
      }
      if (CountPlayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountPlayers);
      }
      if (NumBot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumBot);
      }
      if (PlayerPerTeam != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerPerTeam);
      }
      if (MatchFoundTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MatchFoundTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchExtension other) {
      if (other == null) {
        return;
      }
      if (other.MinTrophies != 0) {
        MinTrophies = other.MinTrophies;
      }
      if (other.MaxTrophies != 0) {
        MaxTrophies = other.MaxTrophies;
      }
      if (other.MinPlayers != 0) {
        MinPlayers = other.MinPlayers;
      }
      if (other.MaxPlayers != 0) {
        MaxPlayers = other.MaxPlayers;
      }
      if (other.MaxTeam != 0) {
        MaxTeam = other.MaxTeam;
      }
      if (other.CountPlayers != 0) {
        CountPlayers = other.CountPlayers;
      }
      if (other.NumBot != 0) {
        NumBot = other.NumBot;
      }
      if (other.PlayerPerTeam != 0) {
        PlayerPerTeam = other.PlayerPerTeam;
      }
      if (other.MatchFoundTimestamp != 0L) {
        MatchFoundTimestamp = other.MatchFoundTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MinTrophies = input.ReadInt32();
            break;
          }
          case 16: {
            MaxTrophies = input.ReadInt32();
            break;
          }
          case 24: {
            MinPlayers = input.ReadInt32();
            break;
          }
          case 32: {
            MaxPlayers = input.ReadInt32();
            break;
          }
          case 40: {
            MaxTeam = input.ReadInt32();
            break;
          }
          case 48: {
            CountPlayers = input.ReadInt32();
            break;
          }
          case 56: {
            NumBot = input.ReadInt32();
            break;
          }
          case 64: {
            PlayerPerTeam = input.ReadInt32();
            break;
          }
          case 72: {
            MatchFoundTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MinTrophies = input.ReadInt32();
            break;
          }
          case 16: {
            MaxTrophies = input.ReadInt32();
            break;
          }
          case 24: {
            MinPlayers = input.ReadInt32();
            break;
          }
          case 32: {
            MaxPlayers = input.ReadInt32();
            break;
          }
          case 40: {
            MaxTeam = input.ReadInt32();
            break;
          }
          case 48: {
            CountPlayers = input.ReadInt32();
            break;
          }
          case 56: {
            NumBot = input.ReadInt32();
            break;
          }
          case 64: {
            PlayerPerTeam = input.ReadInt32();
            break;
          }
          case 72: {
            MatchFoundTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EmptyResponse : pb::IMessage<EmptyResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EmptyResponse> _parser = new pb::MessageParser<EmptyResponse>(() => new EmptyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EmptyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EmptyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EmptyResponse(EmptyResponse other) : this() {
      errorCode_ = other.errorCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EmptyResponse Clone() {
      return new EmptyResponse(this);
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private int errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EmptyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EmptyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EmptyResponse other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BotsResponse : pb::IMessage<BotsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BotsResponse> _parser = new pb::MessageParser<BotsResponse>(() => new BotsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BotsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BotsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BotsResponse(BotsResponse other) : this() {
      errorCode_ = other.errorCode_;
      bots_ = other.bots_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BotsResponse Clone() {
      return new BotsResponse(this);
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private int errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "bots" field.</summary>
    public const int BotsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Core.Proto.PlayerInfoMatchProto> _repeated_bots_codec
        = pb::FieldCodec.ForMessage(18, global::Core.Proto.PlayerInfoMatchProto.Parser);
    private readonly pbc::RepeatedField<global::Core.Proto.PlayerInfoMatchProto> bots_ = new pbc::RepeatedField<global::Core.Proto.PlayerInfoMatchProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Core.Proto.PlayerInfoMatchProto> Bots {
      get { return bots_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BotsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BotsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if(!bots_.Equals(other.bots_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      hash ^= bots_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrorCode);
      }
      bots_.WriteTo(output, _repeated_bots_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrorCode);
      }
      bots_.WriteTo(ref output, _repeated_bots_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      size += bots_.CalculateSize(_repeated_bots_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BotsResponse other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      bots_.Add(other.bots_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 18: {
            bots_.AddEntriesFrom(input, _repeated_bots_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 18: {
            bots_.AddEntriesFrom(ref input, _repeated_bots_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetBotsRequest : pb::IMessage<GetBotsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBotsRequest> _parser = new pb::MessageParser<GetBotsRequest>(() => new GetBotsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetBotsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBotsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBotsRequest(GetBotsRequest other) : this() {
      gameId_ = other.gameId_;
      isNewbie_ = other.isNewbie_;
      numbers_ = other.numbers_;
      trophyRank_ = other.trophyRank_;
      region_ = other.region_;
      battle_ = other.battle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBotsRequest Clone() {
      return new GetBotsRequest(this);
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 1;
    private int gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameId {
      get { return gameId_; }
      set {
        gameId_ = value;
      }
    }

    /// <summary>Field number for the "isNewbie" field.</summary>
    public const int IsNewbieFieldNumber = 2;
    private bool isNewbie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsNewbie {
      get { return isNewbie_; }
      set {
        isNewbie_ = value;
      }
    }

    /// <summary>Field number for the "numbers" field.</summary>
    public const int NumbersFieldNumber = 3;
    private int numbers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Numbers {
      get { return numbers_; }
      set {
        numbers_ = value;
      }
    }

    /// <summary>Field number for the "trophyRank" field.</summary>
    public const int TrophyRankFieldNumber = 4;
    private int trophyRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrophyRank {
      get { return trophyRank_; }
      set {
        trophyRank_ = value;
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 5;
    private int region_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Region {
      get { return region_; }
      set {
        region_ = value;
      }
    }

    /// <summary>Field number for the "battle" field.</summary>
    public const int BattleFieldNumber = 6;
    private int battle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Battle {
      get { return battle_; }
      set {
        battle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetBotsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetBotsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if (IsNewbie != other.IsNewbie) return false;
      if (Numbers != other.Numbers) return false;
      if (TrophyRank != other.TrophyRank) return false;
      if (Region != other.Region) return false;
      if (Battle != other.Battle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GameId != 0) hash ^= GameId.GetHashCode();
      if (IsNewbie != false) hash ^= IsNewbie.GetHashCode();
      if (Numbers != 0) hash ^= Numbers.GetHashCode();
      if (TrophyRank != 0) hash ^= TrophyRank.GetHashCode();
      if (Region != 0) hash ^= Region.GetHashCode();
      if (Battle != 0) hash ^= Battle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameId);
      }
      if (IsNewbie != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsNewbie);
      }
      if (Numbers != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Numbers);
      }
      if (TrophyRank != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TrophyRank);
      }
      if (Region != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Region);
      }
      if (Battle != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Battle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameId);
      }
      if (IsNewbie != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsNewbie);
      }
      if (Numbers != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Numbers);
      }
      if (TrophyRank != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TrophyRank);
      }
      if (Region != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Region);
      }
      if (Battle != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Battle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameId);
      }
      if (IsNewbie != false) {
        size += 1 + 1;
      }
      if (Numbers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Numbers);
      }
      if (TrophyRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrophyRank);
      }
      if (Region != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Region);
      }
      if (Battle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Battle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetBotsRequest other) {
      if (other == null) {
        return;
      }
      if (other.GameId != 0) {
        GameId = other.GameId;
      }
      if (other.IsNewbie != false) {
        IsNewbie = other.IsNewbie;
      }
      if (other.Numbers != 0) {
        Numbers = other.Numbers;
      }
      if (other.TrophyRank != 0) {
        TrophyRank = other.TrophyRank;
      }
      if (other.Region != 0) {
        Region = other.Region;
      }
      if (other.Battle != 0) {
        Battle = other.Battle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadInt32();
            break;
          }
          case 16: {
            IsNewbie = input.ReadBool();
            break;
          }
          case 24: {
            Numbers = input.ReadInt32();
            break;
          }
          case 32: {
            TrophyRank = input.ReadInt32();
            break;
          }
          case 40: {
            Region = input.ReadInt32();
            break;
          }
          case 48: {
            Battle = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadInt32();
            break;
          }
          case 16: {
            IsNewbie = input.ReadBool();
            break;
          }
          case 24: {
            Numbers = input.ReadInt32();
            break;
          }
          case 32: {
            TrophyRank = input.ReadInt32();
            break;
          }
          case 40: {
            Region = input.ReadInt32();
            break;
          }
          case 48: {
            Battle = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CosmeticUsingProtoV2 : pb::IMessage<CosmeticUsingProtoV2>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CosmeticUsingProtoV2> _parser = new pb::MessageParser<CosmeticUsingProtoV2>(() => new CosmeticUsingProtoV2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CosmeticUsingProtoV2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CosmeticUsingProtoV2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CosmeticUsingProtoV2(CosmeticUsingProtoV2 other) : this() {
      cosmeticInUsed_ = other.cosmeticInUsed_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CosmeticUsingProtoV2 Clone() {
      return new CosmeticUsingProtoV2(this);
    }

    /// <summary>Field number for the "cosmeticInUsed" field.</summary>
    public const int CosmeticInUsedFieldNumber = 1;
    private static readonly pbc::MapField<string, long>.Codec _map_cosmeticInUsed_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 10);
    private readonly pbc::MapField<string, long> cosmeticInUsed_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, long> CosmeticInUsed {
      get { return cosmeticInUsed_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CosmeticUsingProtoV2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CosmeticUsingProtoV2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!CosmeticInUsed.Equals(other.CosmeticInUsed)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= CosmeticInUsed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      cosmeticInUsed_.WriteTo(output, _map_cosmeticInUsed_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      cosmeticInUsed_.WriteTo(ref output, _map_cosmeticInUsed_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += cosmeticInUsed_.CalculateSize(_map_cosmeticInUsed_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CosmeticUsingProtoV2 other) {
      if (other == null) {
        return;
      }
      cosmeticInUsed_.Add(other.cosmeticInUsed_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cosmeticInUsed_.AddEntriesFrom(input, _map_cosmeticInUsed_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            cosmeticInUsed_.AddEntriesFrom(ref input, _map_cosmeticInUsed_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateMatchOnboardRequest : pb::IMessage<CreateMatchOnboardRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateMatchOnboardRequest> _parser = new pb::MessageParser<CreateMatchOnboardRequest>(() => new CreateMatchOnboardRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateMatchOnboardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateMatchOnboardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateMatchOnboardRequest(CreateMatchOnboardRequest other) : this() {
      userID_ = other.userID_;
      lastRound_ = other.lastRound_ != null ? other.lastRound_.Clone() : null;
      operationSystem_ = other.operationSystem_;
      appVersion_ = other.appVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateMatchOnboardRequest Clone() {
      return new CreateMatchOnboardRequest(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private string userID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserID {
      get { return userID_; }
      set {
        userID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastRound" field.</summary>
    public const int LastRoundFieldNumber = 2;
    private global::Core.Proto.RoundStat lastRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Core.Proto.RoundStat LastRound {
      get { return lastRound_; }
      set {
        lastRound_ = value;
      }
    }

    /// <summary>Field number for the "operationSystem" field.</summary>
    public const int OperationSystemFieldNumber = 3;
    private string operationSystem_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OperationSystem {
      get { return operationSystem_; }
      set {
        operationSystem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "appVersion" field.</summary>
    public const int AppVersionFieldNumber = 4;
    private string appVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AppVersion {
      get { return appVersion_; }
      set {
        appVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateMatchOnboardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateMatchOnboardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (!object.Equals(LastRound, other.LastRound)) return false;
      if (OperationSystem != other.OperationSystem) return false;
      if (AppVersion != other.AppVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID.Length != 0) hash ^= UserID.GetHashCode();
      if (lastRound_ != null) hash ^= LastRound.GetHashCode();
      if (OperationSystem.Length != 0) hash ^= OperationSystem.GetHashCode();
      if (AppVersion.Length != 0) hash ^= AppVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserID);
      }
      if (lastRound_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LastRound);
      }
      if (OperationSystem.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OperationSystem);
      }
      if (AppVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AppVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserID);
      }
      if (lastRound_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LastRound);
      }
      if (OperationSystem.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OperationSystem);
      }
      if (AppVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AppVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserID);
      }
      if (lastRound_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastRound);
      }
      if (OperationSystem.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperationSystem);
      }
      if (AppVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateMatchOnboardRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserID.Length != 0) {
        UserID = other.UserID;
      }
      if (other.lastRound_ != null) {
        if (lastRound_ == null) {
          LastRound = new global::Core.Proto.RoundStat();
        }
        LastRound.MergeFrom(other.LastRound);
      }
      if (other.OperationSystem.Length != 0) {
        OperationSystem = other.OperationSystem;
      }
      if (other.AppVersion.Length != 0) {
        AppVersion = other.AppVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserID = input.ReadString();
            break;
          }
          case 18: {
            if (lastRound_ == null) {
              LastRound = new global::Core.Proto.RoundStat();
            }
            input.ReadMessage(LastRound);
            break;
          }
          case 26: {
            OperationSystem = input.ReadString();
            break;
          }
          case 34: {
            AppVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserID = input.ReadString();
            break;
          }
          case 18: {
            if (lastRound_ == null) {
              LastRound = new global::Core.Proto.RoundStat();
            }
            input.ReadMessage(LastRound);
            break;
          }
          case 26: {
            OperationSystem = input.ReadString();
            break;
          }
          case 34: {
            AppVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RoundStat : pb::IMessage<RoundStat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoundStat> _parser = new pb::MessageParser<RoundStat>(() => new RoundStat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoundStat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Core.Proto.MatchReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundStat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundStat(RoundStat other) : this() {
      roundId_ = other.roundId_;
      mapId_ = other.mapId_;
      mapDifficulty_ = other.mapDifficulty_;
      timeInRound_ = other.timeInRound_;
      roundComplete_ = other.roundComplete_;
      controlDoubleJump_ = other.controlDoubleJump_;
      controlMoveCamera_ = other.controlMoveCamera_;
      passedCP_ = other.passedCP_;
      maxCP_ = other.maxCP_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundStat Clone() {
      return new RoundStat(this);
    }

    /// <summary>Field number for the "roundId" field.</summary>
    public const int RoundIdFieldNumber = 1;
    private int roundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoundId {
      get { return roundId_; }
      set {
        roundId_ = value;
      }
    }

    /// <summary>Field number for the "mapId" field.</summary>
    public const int MapIdFieldNumber = 2;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "mapDifficulty" field.</summary>
    public const int MapDifficultyFieldNumber = 3;
    private int mapDifficulty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapDifficulty {
      get { return mapDifficulty_; }
      set {
        mapDifficulty_ = value;
      }
    }

    /// <summary>Field number for the "timeInRound" field.</summary>
    public const int TimeInRoundFieldNumber = 4;
    private float timeInRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TimeInRound {
      get { return timeInRound_; }
      set {
        timeInRound_ = value;
      }
    }

    /// <summary>Field number for the "roundComplete" field.</summary>
    public const int RoundCompleteFieldNumber = 5;
    private bool roundComplete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RoundComplete {
      get { return roundComplete_; }
      set {
        roundComplete_ = value;
      }
    }

    /// <summary>Field number for the "controlDoubleJump" field.</summary>
    public const int ControlDoubleJumpFieldNumber = 6;
    private int controlDoubleJump_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ControlDoubleJump {
      get { return controlDoubleJump_; }
      set {
        controlDoubleJump_ = value;
      }
    }

    /// <summary>Field number for the "controlMoveCamera" field.</summary>
    public const int ControlMoveCameraFieldNumber = 7;
    private int controlMoveCamera_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ControlMoveCamera {
      get { return controlMoveCamera_; }
      set {
        controlMoveCamera_ = value;
      }
    }

    /// <summary>Field number for the "passedCP" field.</summary>
    public const int PassedCPFieldNumber = 8;
    private int passedCP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PassedCP {
      get { return passedCP_; }
      set {
        passedCP_ = value;
      }
    }

    /// <summary>Field number for the "maxCP" field.</summary>
    public const int MaxCPFieldNumber = 9;
    private int maxCP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxCP {
      get { return maxCP_; }
      set {
        maxCP_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoundStat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoundStat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoundId != other.RoundId) return false;
      if (MapId != other.MapId) return false;
      if (MapDifficulty != other.MapDifficulty) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TimeInRound, other.TimeInRound)) return false;
      if (RoundComplete != other.RoundComplete) return false;
      if (ControlDoubleJump != other.ControlDoubleJump) return false;
      if (ControlMoveCamera != other.ControlMoveCamera) return false;
      if (PassedCP != other.PassedCP) return false;
      if (MaxCP != other.MaxCP) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoundId != 0) hash ^= RoundId.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (MapDifficulty != 0) hash ^= MapDifficulty.GetHashCode();
      if (TimeInRound != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TimeInRound);
      if (RoundComplete != false) hash ^= RoundComplete.GetHashCode();
      if (ControlDoubleJump != 0) hash ^= ControlDoubleJump.GetHashCode();
      if (ControlMoveCamera != 0) hash ^= ControlMoveCamera.GetHashCode();
      if (PassedCP != 0) hash ^= PassedCP.GetHashCode();
      if (MaxCP != 0) hash ^= MaxCP.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoundId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoundId);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MapId);
      }
      if (MapDifficulty != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MapDifficulty);
      }
      if (TimeInRound != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(TimeInRound);
      }
      if (RoundComplete != false) {
        output.WriteRawTag(40);
        output.WriteBool(RoundComplete);
      }
      if (ControlDoubleJump != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ControlDoubleJump);
      }
      if (ControlMoveCamera != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ControlMoveCamera);
      }
      if (PassedCP != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PassedCP);
      }
      if (MaxCP != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MaxCP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoundId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoundId);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MapId);
      }
      if (MapDifficulty != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MapDifficulty);
      }
      if (TimeInRound != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(TimeInRound);
      }
      if (RoundComplete != false) {
        output.WriteRawTag(40);
        output.WriteBool(RoundComplete);
      }
      if (ControlDoubleJump != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ControlDoubleJump);
      }
      if (ControlMoveCamera != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ControlMoveCamera);
      }
      if (PassedCP != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PassedCP);
      }
      if (MaxCP != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MaxCP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoundId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoundId);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (MapDifficulty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapDifficulty);
      }
      if (TimeInRound != 0F) {
        size += 1 + 4;
      }
      if (RoundComplete != false) {
        size += 1 + 1;
      }
      if (ControlDoubleJump != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ControlDoubleJump);
      }
      if (ControlMoveCamera != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ControlMoveCamera);
      }
      if (PassedCP != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PassedCP);
      }
      if (MaxCP != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxCP);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoundStat other) {
      if (other == null) {
        return;
      }
      if (other.RoundId != 0) {
        RoundId = other.RoundId;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.MapDifficulty != 0) {
        MapDifficulty = other.MapDifficulty;
      }
      if (other.TimeInRound != 0F) {
        TimeInRound = other.TimeInRound;
      }
      if (other.RoundComplete != false) {
        RoundComplete = other.RoundComplete;
      }
      if (other.ControlDoubleJump != 0) {
        ControlDoubleJump = other.ControlDoubleJump;
      }
      if (other.ControlMoveCamera != 0) {
        ControlMoveCamera = other.ControlMoveCamera;
      }
      if (other.PassedCP != 0) {
        PassedCP = other.PassedCP;
      }
      if (other.MaxCP != 0) {
        MaxCP = other.MaxCP;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoundId = input.ReadInt32();
            break;
          }
          case 16: {
            MapId = input.ReadInt32();
            break;
          }
          case 24: {
            MapDifficulty = input.ReadInt32();
            break;
          }
          case 37: {
            TimeInRound = input.ReadFloat();
            break;
          }
          case 40: {
            RoundComplete = input.ReadBool();
            break;
          }
          case 48: {
            ControlDoubleJump = input.ReadInt32();
            break;
          }
          case 56: {
            ControlMoveCamera = input.ReadInt32();
            break;
          }
          case 64: {
            PassedCP = input.ReadInt32();
            break;
          }
          case 72: {
            MaxCP = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoundId = input.ReadInt32();
            break;
          }
          case 16: {
            MapId = input.ReadInt32();
            break;
          }
          case 24: {
            MapDifficulty = input.ReadInt32();
            break;
          }
          case 37: {
            TimeInRound = input.ReadFloat();
            break;
          }
          case 40: {
            RoundComplete = input.ReadBool();
            break;
          }
          case 48: {
            ControlDoubleJump = input.ReadInt32();
            break;
          }
          case 56: {
            ControlMoveCamera = input.ReadInt32();
            break;
          }
          case 64: {
            PassedCP = input.ReadInt32();
            break;
          }
          case 72: {
            MaxCP = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
